ÄˇsetupParentDatacomputeMinIntrinsicWidthcomputeMaxIntrinsicWidthcomputeMinIntrinsicHeightcomputeMaxIntrinsicHeightcomputeDistanceToActualBaselinecomputeDryBaselinecomputeDryLayoutperformLayoutcomputeSizeForNoChildhitTestChildrenapplyPaintTransformpaintdeferToChildopaquetranslucentbehaviorhitTesthitTestSelfdebugFillPropertiesadditionalConstraints_additionalConstraintsdebugPaintSizemaxWidth	_maxWidth	maxHeight
_maxHeight_limitConstraints_computeSizeaspectRatio_aspectRatio_applyAspectRatio	stepWidth
_stepWidth
stepHeight_stepHeight
_applyStep_childConstraintsalwaysNeedsCompositingisRepaintBoundary_alphaopacity_opacityalwaysIncludeSemantics_alwaysIncludeSemanticspaintsChildupdateCompositedLayervisitChildrenForSemantics_currentlyIsRepaintBoundaryattachdetach_updateOpacitylayershaderCallback_shaderCallback	blendMode
_blendModeenabled_enabledfilter_filterbackdropKey_backdropKey_reclipaddListenerremoveListenergetClipgetApproximateClipRectshouldRecliptoStringshapetextDirectionclipper_clipper_markNeedsClip_defaultClip_clipclipBehavior_clipBehavior_updateClipdescribeApproximatePaintClip_debugPaint
_debugTextdisposeborderRadius_borderRadius_textDirection_cachedRect_cachedPath_getClipPath	elevation
_elevationshadowColor_shadowColorcolor_colordescribeSemanticsConfiguration_shape
background
foreground_painter
decoration_decorationposition	_positionconfiguration_configurationorigin_origin	alignment
_alignmenttransformHitTests
_transform	transformfilterQuality_filterQualitysetIdentityrotateXrotateYrotateZ	translatescale_effectiveTransform_resolve_resolvedAlignment_markNeedResolution_fitAffectsLayoutfit_fit_hasVisualOverflow_clearPaintData_updatePaintData_paintChildWithTransformtranslation_translationonPointerDownonPointerMoveonPointerUponPointerHoveronPointerCancelonPointerPanZoomStartonPointerPanZoomUpdateonPointerPanZoomEndonPointerSignalhandleEvent_opaquehitTestBehavioronEnteronHoveronExitcursor_cursorvalidForMouseTracker_validForMouseTrackertoImagetoImageSyncdebugSymmetricPaintCount_debugSymmetricPaintCountdebugAsymmetricPaintCount_debugAsymmetricPaintCountdebugResetMetrics!debugRegisterRepaintBoundaryPaintignoring	_ignoringignoringSemantics_ignoringSemanticsoffstage	_offstagesizedByParentperformResizedebugDescribeChildren	absorbing
_absorbingmetaDatavalidActions_validActionsonTap_onTaponLongPress_onLongPressonHorizontalDragUpdate_onHorizontalDragUpdateonVerticalDragUpdate_onVerticalDragUpdatescrollFactor_isValidAction_performSemanticScrollLeft_performSemanticScrollRight_performSemanticScrollUp_performSemanticScrollDown
properties_properties	container
_containerexplicitChildNodes_explicitChildNodesexcludeSemantics_excludeSemanticsblockUserActions_blockUserActions_updateAttributedFields_effectiveAttributedLabel_effectiveAttributedValue"_effectiveAttributedIncreasedValue"_effectiveAttributedDecreasedValue_effectiveAttributedHint_attributedLabel_attributedValue_attributedIncreasedValue_attributedDecreasedValue_attributedHint_performTap_performLongPress_performDismiss_performScrollLeft_performScrollRight_performScrollUp_performScrollDown_performIncrease_performDecrease_performCopy_performCut_performPaste$_performMoveCursorForwardByCharacter%_performMoveCursorBackwardByCharacter_performMoveCursorForwardByWord _performMoveCursorBackwardByWord_performSetSelection_performSetText!_performDidGainAccessibilityFocus!_performDidLoseAccessibilityFocus_performFocusblocking	_blocking	excluding
_excludingindex_indexlink_link_previousLayoutSizeshowWhenUnlinked_showWhenUnlinkedoffset_offsetleaderAnchor_leaderAnchorfollowerAnchor_followerAnchorgetCurrentTransformvalue_valuesized_sized_layerHandle7RenderProxyBoxRenderProxyBoxMixinHitTestBehavior!RenderProxyBoxWithHitTestBehaviorRenderConstrainedBoxRenderLimitedBoxRenderAspectRatioRenderIntrinsicWidthRenderIntrinsicHeightRenderIgnoreBaselineRenderOpacityRenderAnimatedOpacityMixinRenderAnimatedOpacityShaderCallbackRenderShaderMaskRenderBackdropFilterCustomClipperShapeBorderClipper_RenderCustomClipRenderClipRectRenderClipRRectRenderClipOvalRenderClipPath_RenderPhysicalModelBaseRenderPhysicalModelRenderPhysicalShapeDecorationPositionRenderDecoratedBoxRenderTransformRenderFittedBoxRenderFractionalTranslationPointerDownEventListenerPointerMoveEventListenerPointerUpEventListenerPointerCancelEventListener PointerPanZoomStartEventListener!PointerPanZoomUpdateEventListenerPointerPanZoomEndEventListenerPointerSignalEventListenerRenderPointerListenerRenderMouseRegionRenderRepaintBoundaryRenderIgnorePointerRenderOffstageRenderAbsorbPointerRenderMetaDataRenderSemanticsGestureHandlerRenderSemanticsAnnotationsRenderBlockSemanticsRenderMergeSemanticsRenderExcludeSemanticsRenderIndexedSemanticsRenderLeaderLayerRenderFollowerLayerRenderAnnotatedRegionÅ˛ColorGradientImageImageFilterPointerCancelEventPointerDownEventPointerEventPointerMoveEventPointerUpEventRenderProxySliver	RenderBoxRenderObjectWithChildMixinchildoptionalTypeArgsToverridevoidRenderObject
parentData
ParentDatadoublegetMinIntrinsicWidthgetMaxIntrinsicWidthgetMinIntrinsicHeightgetMaxIntrinsicHeightTextBaselinegetDistanceToActualBaselinecomputeDistanceToActualBaseline	protectedBoxConstraintsgetDryBaselineSizegetDryLayoutcomputeSizeForNoChildsizelayoutconstraintsparentUsesSizesmallestboolBoxHitTestResultOffsethitTestpositionMatrix4PaintingContext
paintChilddeferToChildcontainshitTestChildrentranslucentaddBoxHitTestEntryopaqueDiagnosticPropertiesBuilderdebugFillPropertiesEnumPropertydefaultValuedebugAssertIsValidmarkNeedsLayouthasBoundedWidthhasTightWidthminWidthcomputeMinIntrinsicWidthisFinitehasInfiniteWidthconstrainWidthcomputeMaxIntrinsicWidthhasBoundedHeighthasTightHeight	minHeightcomputeMinIntrinsicHeighthasInfiniteHeightconstrainHeightcomputeMaxIntrinsicHeightenforce	constrainzerodebugPaintSizePaintisEmptycolorcanvasdrawRectDiagnosticsPropertymaxWidth	maxHeightinfinityChildLayouterlayoutChildChildLayoutHelperdryLayoutChildDoublePropertyFlutterErrorruntimeTypeisTightcomputeDryBaselinetightAlignRowCrossAxisAlignmentstretchceiltightenwidthheightColumnNullgetAlphaFromOpacityintmarkNeedsCompositingBitsUpdatemarkNeedsCompositedLayerUpdatemarkNeedsSemanticsUpdateparentOffsetLayerOpacityLayeroldLayeralphapaintRenderObjectVisitorFlagPropertyvalueifTrueRenderSliverAnimatedOpacityRenderSliver_currentlyIsRepaintBoundary_alpha	Animation_opacityattachedopacityremoveListener_updateOpacityaddListener_alwaysIncludeSemanticsPipelineOwnerattachdetachalwaysIncludeSemanticsShaderRect
ShaderMasklinear	BlendModemodulateShaderMaskLayerlayermarkNeedsPaintneedsCompositingshadermaskRect	blendMode	pushLayerdebugCreatorsrcOverBackdropKeyBackdropFilterLayerblurBackdropGroupfilterbackdropKeyClipRectClipPath	ClipRRectClipOvalShapeBorder
ListenablereclipVoidCallbackStringobjectRuntimeTypePathTextDirectiongetOuterPathtextDirectionshapeClip	antiAliasshouldRecliphasSizeperformLayoutgetClipnonehardEdgeantiAliasWithSaveLayergetApproximateClipRectTextPainterTileModerepeatedstrokeWidthstylePaintingStylestroketextTextSpan	TextStylefontSizertldisposeclipperclipBehavior_clipper_updateClip_clippushClipRectClipRectLayershift_debugPaint
_debugTextRRectBorderRadiusBorderRadiusGeometry_markNeedsClipresolvetoRRectpushClipRRect	outerRectClipRRectLayer	drawRRect	tlRadiusXaddOvalcenterdxdydistanceSquaredpushClipPathClipPathLayerdrawPathaddRectdebugDisableShadowsalwaysNeedsCompositingSemanticsConfigurationdescribeSemanticsConfiguration	elevationColorPropertyBoxShape	rectanglecircle
fromRectXYaddRRectshadowColorCanvas
drawShadow	drawPaint
DecorationImageConfiguration
backgroundempty
BoxPainterBoxDecorationImageProvidercreateBoxPaintercopyWithgetSaveCount	fromPartsDiagnosticsNodeErrorSummaryErrorDescriptionDiagnosticsTreeStyleerrorProperty	isComplexsetIsComplexHint
foregroundtoDiagnosticsNodenameAlignmentGeometryFilterQuality	transform	alignmentfilterQualityoriginAlignmentDirectionalcenterStart	Alignmentxltr	centerEndlocalToGlobalglobalToLocalcopysetIdentityrotateXrotateYrotateZ	translateyzscaleidentity	alongSizemultiplyaddWithPaintTransformMatrixUtilsgetAsTranslationdeterminantpushTransformTransformLayertranslationValuesmatrixstorageImageFilterLayerfilterLayerimageFilterTransformPropertyBoxFitcontain	scaleDowncoverfill	fitHeightfitWidthloosensizeConstraints,constrainSizeAndAttemptToPreserveAspectRatiounconstrainedSizeFittedSizesapplyBoxFitdestinationsourceinscribelefttopeverysetZerodebugNeedsLayoutaddWithPaintOffsetoffsetListenerPointerPanZoomStartEventPointerPanZoomUpdateEventPointerPanZoomEndEventPointerSignalEventbehaviorPointerHoverEventListenerbiggestHitTestEntrydebugHandleEventcallPointerHoverEventFlagsSummaryFunctionifEmptyMouseRegionMouseTrackerAnnotationMouseCursordeferPointerEnterEventListenerPointerExitEventListenerifFalsedebugDumpRenderTree
pixelRatiodebugNeedsPainttoImageFuturetoImageSyncincludedParentincludedChildMessagePropertyPercentPropertyunittooltipmessage
DeprecatedSemanticsNodevisitChildrenForSemanticsisBlockingUserActionsdescription%markNeedsLayoutForSizedByParentChangecomputeDryLayoutperformResizeListoffstagesparsedynamicGestureTapCallbackGestureLongPressCallbackGestureDragUpdateCallbackSemanticsActiontap
scrollLeftscrollRightSet	setEqualsonTap	longPressonLongPressonScrollRightonScrollLeftscrollUp
onScrollUp
scrollDownonScrollDownDragUpdateDetailsdeltaprimaryDeltaglobalPositionIterablePropertySemanticsPropertiesattributedLabelisSemanticBoundaryExcludeSemantics	SemanticsAttributedStringlabelattributedValueattributedIncreasedValueincreasedValueattributedDecreasedValuedecreasedValueattributedHinthintexplicitChildNodesscopesRoutetoggledcheckedenabled	isEnabled	isCheckedmixedisCheckStateMixed	isToggledselected
isSelectedbuttonisButtonexpanded
isExpandedlinkisLinklinkUrlsliderisSliderkeyboardKeyisKeyboardKeyheaderisHeaderheadingLevel	textFieldisTextFieldreadOnly
isReadOnly	focusableisFocusablefocused	isFocusedinMutuallyExclusiveGroupisInMutuallyExclusiveGroupobscured
isObscured	multilineisMultilinehiddenisHiddenimageisImage
identifierhintOverrides
isNotEmpty
namesRoute
liveRegionmaxValueLengthcurrentValueLengthsortKeytagForChildrenaddTagForChildrenrole	onDismiss
onIncrease
onDecreaseonCopyonCutonPasteonMoveCursorForwardByCharacteronMoveCursorBackwardByCharacteronMoveCursorForwardByWordonMoveCursorBackwardByWordonSetSelection	onSetTextonDidGainAccessibilityFocusonDidLoseAccessibilityFocusonFocuscustomSemanticsActionsTextSelection+isBlockingSemanticsOfPreviouslyPaintedNodesisMergingSemanticsOfDescendants
ScrollViewscrollIndexCustomScrollViewindexInParentCompositedTransformTargetLeaderLayer	LayerLink
leaderSizeCompositedTransformFollowerFollowerLayertopLeft
bottomLeftgetLastTransformleadershowWhenUnlinkedlinkedOffsetunlinkedOffsetchildPaintBoundsfromLTRBnegativeInfinityAnnotatedRegionLayerLayerfindObjectLayerHandle	RenderBoxRenderObjectWithChildMixinRenderProxyBoxMixinRenderProxyBoxRenderAnimatedOpacityMixin
ListenableCustomClipper_RenderCustomClip_RenderPhysicalModelBase!RenderProxyBoxWithHitTestBehaviorMouseTrackerAnnotation◊|≠≤¥6H•h7…ëÍÇ∫ÉPointerCancelEventPointerDownEventPointerEventPointerMoveEventPointerUpEvent Çèpackage:flutter/gestures.dart 
Å;ÅcColorGradientImageImageFilter Å%   Å5Å8uiÅ8dart:ui  Åg   package:flutter/animation.dart  Åê   package:flutter/foundation.dart  Å∫   package:flutter/gestures.dart  Å‚   package:flutter/semantics.dart  Ç   package:flutter/services.dart  Ç4   box.dart  ÇG   
layer.dart  Ç\   layout_helper.dart  Çy   object.dart¿m„ ¿âì÷ <ÄÜÄ§Ä•Ä‘ÄÿÄ¸ÅÅ#Å$ÅeÅfÅèÅπÅ·Ç
Ç2Ç3ÇFÇ[ÇxÇéÇèÇ∂ÉÉÉVÉZÉ£ÉÒÑ@ÑÑÑàÑ◊Ö(ÖwÖãÖèÖùÖ°ÖÒÜÜ)ÜzÜúÜ¢ÜÍá7áIápáàáåáéáèá∑áªá¯àCàéàíà‚ââ$âÅâçâ∫ää)äTä{äÅäÖäÜäíä≈ä¸ã ããã@ãwã{ã|ãàãªãÚãˆã˜åå6åmåqårå~å¡å¸ç5ç9ç:çFçSçØçËçÏçÌç˘ééFéôéùéûé™é√éŒèè?èKèOèPèôè›êê9ê=ê>êJêòêÿê‹ê›êÈë.ë/ë;ërëõë¥ë¬ë»ëÔëÛëıëˆíí1ííªíÀíÃììfìÉìçìéì€îî%î'î(îgîÅîÀî˛ïïHïnï†ï∂ïÀïÃññ`ñfñòñûñÂóóóóTópóìóÎò-òbòjòpòÜòäòãòóò‚ò„òÔô4ô_ôºô¿ô¬ô√ôÙô¯öGöêö‡öÌöÒõAõäõßõ€úúúQú´úÂùù/ù0ùpù∂ùﬂûû;ûfûtûzûûûµûπû∫û∆û˘üSüÅüáü»ü‰††S†Y†k†o†p†|†Ø°	°7°=°~°ö°Œ¢	¢¢!¢%¢&¢2¢e¢¡¢¢ˆ£8£U£ä£«£Õ£‡£‰£Â£Ò§$§Ä§Ø§µ§˜••I•Ü•å•ü•£•§•∞¶¶e¶i¶j¶v¶è¶»¶·ß9ßSß`ßØßµßπß∫ß∆ß”®®b®¨®∞®±®Ω®˝©(©8©Q©É©Ω©Ù©¸™™™™™*™o™ö™Æ´	´´´´´P´ì´ó´‰¨/¨z¨…¨‚¨Ê≠1≠w≠á≠∑ÆÆ=ÆCÆäÆûÆ≥Æ…ÆØØ8ØYØvØïØ™Ø´∞ ∞$∞8∞W∞q∞è∞ù∞£∞∫∞—∞’∞÷±-±S±h±à±¢±¡±œ±’±Ì≤≤≤	≤J≤e≤ã≤õ≥ ≥(≥9≥`≥Ü≥æ≥≈≥…≥ ¥+¥D¥ñ¥≈¥Àµµµµµ)µiµÀµœµ–µ‹µı∂T∂X∂Y∂e∂™∂’∑.∑â∑ç∑è∑ê∑À∑œ∏∏j∏∏∏ºππTπåπêπ›∫+∫z∫¡∫≈ªªbª≥ººOºùºÎΩ9ΩÜΩÃææ=æzæÄæ√øø)øMøoøÉøÑøÆø¥¿ @¿ @K¿ @u¿ @å¿ @Æ¿ @«¿ @„¿ A¿ A¿ A¿ A2¿ AI¿ AM¿ AN¿ AZ¿ Aç¿ A®¿ AÃ¿ A“¿ B	¿ B¿ B¿ B¿ BM¿ Bh¿ Bå¿ Bí¿ B…¿ BÕ¿ BŒ¿ B⁄¿ C¿ C'¿ CJ¿ CP¿ Cá¿ Cã¿ Cå¿ Cò¿ CÀ¿ CÂ¿ D¿ D¿ DE¿ DI¿ DJ¿ DÅ¿ DØ¿ Dø¿ E
¿ E&¿ E\¿ E≥¿ F¿ FV¿ Ft¿ F¿ Fá¿ Fö¿ F§¿ F•¿ Fƒ¿ FÁ¿ FÌ¿ FÓ¿ G¿ G*¿ G+¿ Gx¿ Gƒ¿ G€¿ Gı¿ H¿ H'¿ HM¿ Hr¿ Hx¿ Hy¿ H«¿ I¿ I]¿ It¿ Iu¿ Iù¿ I¡¿ IÊ¿ IÏ¿ IÌ¿ J¿ J=¿ Jb¿ Jh¿ Ji¿ Jë¿ Jµ¿ J⁄¿ J‡¿ J·¿ K¿ K1¿ KV¿ K\¿ K]¿ Kî¿ Kò¿ Kô¿ K•¿ K≤¿ KÚ¿ L¿ L!¿ L"¿ L.¿ LÄ¿ L‡¿ L‰¿ LÂ¿ LÒ¿ M
¿ M0¿ M_¿ Mc¿ Md¿ Mp¿ Mµ¿ M‡¿ N ¿ N$¿ N&¿ N'¿ Nc¿ Ng¿ N¥¿ O¿ O8¿ O<¿ Oà¿ Oÿ¿ P$¿ Pn¿ Pª¿ P„¿ PÁ¿ Q7¿ QÉ¿ Q¡¿ Q≈¿ R¿ R`¿ RØ¿ R∆¿ R ¿ Rÿ¿ R‹¿ S+¿ Sr¿ S¿¿ S”¿ T¿ Tb¿ TØ¿ T„¿ U¿ Ug¿ Um¿ UΩ¿ Uﬁ¿ V0¿ Vd¿ Vö¿ V∏¿ Vÿ¿ VÏ¿ VÌ¿ W8¿ W>¿ Wf¿ Wç¿ W£¿ Wƒ¿ WÓ¿ X¿ X¿ X!¿ X9¿ XP¿ XT¿ XU¿ X°¿ Xß¿ Xœ¿ X¯¿ Y¿ Y1¿ Y[¿ Y{¿ Yâ¿ Yè¿ Y®¿ Yø¿ Y√¿ Yƒ¿ Y˝¿ Z¿ Z1¿ ZE¿ ZK¿ Zt¿ Zx¿ Zy¿ ZÖ¿ Z∏¿ Z·¿ ZÂ¿ ZÊ¿ ZÚ¿ [%¿ [>¿ [P¿ [V¿ [î¿ [æ¿ [¬¿ [√¿ [œ¿ \¿ \¿ \-¿ \3¿ \N¿ \É¿ \â¿ \•¿ \‰¿ ]¿ ]¿ ]¿ ]!¿ ]T¿ ]m¿ ]¿ ]Ö¿ ]†¿ ]’¿ ]€¿ ]˜¿ ^6¿ ^b¿ ^f¿ ^g¿ ^π¿ ^Ÿ¿ ^Ê¿ _
¿ _¿ _z¿ _à¿ _•¿ _∫¿ `¿ `¿ `!¿ `"¿ `É¿ `¨¿ `≈¿ `‰¿ a)¿ a-¿ a.¿ a:¿ aG¿ aá¿ aÈ¿ aÌ¿ aÓ¿ a˙¿ bL¿ bu¿ b»¿ bÃ¿ bÕ¿ bŸ¿ bÚ¿ cQ¿ cU¿ cV¿ cb¿ cß¿ c“¿ d¿ dL¿ dP¿ dR¿ dS¿ dà¿ då¿ d⁄¿ e*¿ e_¿ ec¿ eØ¿ eˇ¿ fM¿ fò¿ fÊ¿ g¿ g¿ g`¿ gÆ¿ g˝¿ h¿ h¿ h&¿ h*¿ hy¿ h¡¿ i¿ i#¿ ir¿ i∂¿ j¿ j:¿ jo¿ j¿¿ j¸¿ j˝¿ k	¿ k<¿ kU¿ kg¿ km¿ kâ¿ k«¿ kÕ¿ kÍ¿ l¿ l¿ l¿ l+¿ l^¿ lw¿ lâ¿ lè¿ l´¿ lÈ¿ lÔ¿ m¿ m<¿ m@¿ mA¿ mM¿ mÄ¿ m©¿ m≠¿ mÆ¿ n ¿ n&¿ n<¿ nñ¿ nö¿ nõ¿ n¸¿ o%¿ o>¿ o]¿ o¢¿ o¶¿ oß¿ o≥¿ o¿¿ p ¿ pb¿ pf¿ pg¿ ps¿ p≈¿ pÓ¿ qA¿ qE¿ qF¿ qR¿ qk¿ q ¿ qŒ¿ q–¿ q—¿ r¿ rF¿ r©¿ r‰¿ rÂ¿ rÒ¿ s1¿ sB¿ sF¿ sG¿ sS¿ s¨¿ sΩ¿ s¡¿ s√¿ sƒ¿ sÔ¿ sÛ¿ tC¿ tx¿ t|¿ t«¿ u¿ uY¿ u©¿ u÷¿ v¿ v¿ vV¿ vµ¿ vÂ¿ vˇ¿ w7¿ wm¿ wÅ¿ wÇ¿ wé¿ w–¿ w—¿ w›¿ x¿ x¿ x$¿ x%¿ xZ¿ x`¿ x∞¿ x…¿ xœ¿ y¿ yZ¿ yk¿ yç¿ y†¿ yæ¿ yË¿ z¿ z¿ z¿ zU¿ z~¿ zî¿ z…¿ {¿ {)¿ {/¿ {U¿ {ó¿ {π¿ {ø¿ {√¿ {ƒ¿ |
¿ |¿ |N¿ |T¿ |m¿ |´¿ |À¿ |ˆ¿ }"¿ }0¿ }6¿ }[¿ }{¿ }¿ }Ä¿ }å¿ }≤¿ }‘¿ }Î¿ }Ô¿ }¿ }¸¿ ~O¿ ~ä¿ ~§¿ ~∂¿ ~∫¿ ~ª¿ ~«¿ ~˛¿ &¿ 4¿ :¿ \¿ `¿ a¿ m¿ ≠¿ Ò¿ Ä¿ Ä¿ Ä¿ Ä¿ Ä¿ Äd¿ Äè¿ Ä«¿ Ä€¿ ÄÔ¿ Å¿ Å8¿ Åb¿ Åk¿ År¿ Åv¿ Åx¿ Åy¿ Å ¿ ÅŒ¿ Ç¿ Çr¿ Ç¥¿ É¿ É¿ É ¿ É,¿ É{¿ É†¿ É°¿ É≠¿ Ñ ¿ ÑB¿ Ñc¿ Ñ|¿ ÑÄ¿ ÑÅ¿ Ñø¿ Ñ≈¿ Ö¿ Ö.¿ Ö4¿ Ö}¿ Ö•¿ Ö´¿ Ö˚¿ ÜB¿ Üp¿ Üè¿ Ü∏¿ Ü’¿ Ü„¿ ÜÈ¿ á¿ á?¿ áE¿ á[¿ áo¿ áö¿ á†¿ á∂¿ á∫¿ áª¿ à¿ à¿ àE¿ àK¿ àd¿ àj¿ à∫¿ â¿ â@¿ âa¿ âå¿ â∏¿ â∆¿ âÃ¿ âÒ¿ ä¿ ä¿ ä¿ ä"¿ äG¿ ä`¿ äâ¿ ä–¿ ä‘¿ ä’¿ ä·¿ äÛ¿ ã¿ ã3¿ ã7¿ ã8¿ ãR¿ ãt¿ ãÆ¿ ãÃ¿ å¿ åA¿ åë¿ åª¿ å√¿ åÎ¿ ç¿ ç9¿ çA¿ çG¿ çK¿ çL¿ çX¿ çÅ¿ ç£¿ ç¡¿ ç≈¿ ç∆¿ ç“¿ é	¿ é ¿ é.¿ é4¿ éV¿ éZ¿ é[¿ ég¿ éß¿ éÎ¿ è¿ è¿ è¿ è¿ è¿ è^¿ èâ¿ èŸ¿ èÌ¿ ê¿ ê#¿ êJ¿ êt¿ ê}¿ êÑ¿ êà¿ êä¿ êã¿ ê“¿ ê÷¿ ë'¿ ëS¿ ë≥¿ ëË¿ í¿ í*¿ íS¿ íi¿ í¿ íõ¿ í’¿ íŸ¿ í€¿ í‹¿ ì%¿ ì)¿ ìe¿ ìú¿ ìù¿ ì÷¿ ì⁄¿ î)¿ î^¿ îé¿ îÊ¿ î˚¿ ï¿ ï=¿ ïk¿ ïî¿ ï≥¿ ï»¿ ï…¿ ï’¿ ñ¿ ñ¿ ñU¿ ñ[¿ ñ™¿ ñÛ¿ ñ˘¿ ó9¿ óS¿ ó°¿ óŸ¿ ò¿ ò3¿ ò`¿ òÑ¿ òí¿ òò¿ òµ¿ òÀ¿ òœ¿ ò–¿ ô¿ ô¿ ôi¿ ô¥¿ ô›¿ ôı¿ ö¿ ö7¿ öE¿ öK¿ öc¿ öy¿ ö}¿ ö~¿ öä¿ öæ¿ öø¿ öÀ¿ õ¿ õ¿ õ;¿ õ^¿ õk¿ õ¢¿ õ≈¿ õÁ¿ ú¿ ú/¿ ú[¿ úp¿ ú|¿ úâ¿ úù¿ ú£¿ úß¿ ú©¿ ú™¿ ú¯¿ ú¸¿ ùL¿ ù`¿ ùî¿ ùµ¿ ù∫¿ ù˙¿ û¿ û)¿ ûM¿ ûz¿ ûì¿ û±¿ û ¿ ûÂ¿ ü¿ ü'¿ ü<¿ ü=¿ üI¿ üí¿ üì¿ ü‰¿ †¿ †¿ †1¿ †M¿ †[¿ †a¿ †w¿ †ç¿ †ë¿ †í¿ †‚¿ †Û¿ †˘¿ °F¿ °Y¿ °Å¿ °õ¿ °¿¿ °‹¿ °Í¿ °¿ ¢¿ ¢¿ ¢¿ ¢ ¿ ¢y¿ ¢à¿ ¢é¿ ¢∆¿ ¢Ô¿ £¿ £*¿ £I¿ £W¿ £]¿ £u¿ £ã¿ £è¿ £ê¿ £‹¿ £Ì¿ £Û¿ §+¿ §[¿ §x¿ §†¿ §¡¿ §œ¿ §’¿ §Ô¿ •¿ •	¿ •
¿ •¿ •J¿ •K¿ •W¿ •é¿ •£¿ •«¿ •’¿ •€¿ •‹¿ •ı¿ ¶¿ ¶<¿ ¶[¿ ¶Ä¿ ¶©¿ ¶ﬂ¿ ¶Ò¿ ß¿ ß2¿ ß>¿ ßK¿ ß_¿ ße¿ ßi¿ ßk¿ ßl¿ ßô¿ ßù¿ ßÊ¿ ß˜¿ ß˚¿ ®L¿ ®P¿ ®ô¿ ®Â¿ ®ˆ¿ ®˙¿ ©E¿ ©ì¿ ©‰¿ ™4¿ ™8¿ ™F¿ ™J¿ ™ì¿ ™ﬁ¿ ´'¿ ´p¿ ´ø¿ ´Ù¿ ¨¿ ¨¿ ¨k¿ ¨´¿ ¨¨¿ ¨…¿ ¨ ¿ ≠¿ ≠¿ ≠b¿ ≠≤¿ ≠…¿ ≠’¿ Æ"¿ Æ#¿ Æs¿ Æ§¿ Æ™¿ Æ˘¿ ØI¿ Ø`¿ Øl¿ Øø¿ Ø¿¿ ∞¿ ∞/¿ ∞G¿ ∞H¿ ∞ç¿ ∞–¿ ±¿ ±
¿ ±N¿ ±ï¿ ±ÿ¿ ≤¿ ≤_¿ ≤`¿ ≤≠¿ ≤˛¿ ≥O¿ ≥†¿ ≥¶¿ ≥Ó¿ ¥=¿ ¥J¿ ¥P¿ ¥û¿ ¥™¿ ¥∞¿ ¥ˆ¿ µB¿ µv¿ µ≤¿ µ≥¿ µø¿ ∂ ¿ ∂¿ ∂¿ ∂J¿ ∂Å¿ ∂®¿ ∂Æ¿ ∂ˆ¿ ∑E¿ ∑í¿ ∑’¿ ∏¿ ∏¿ ∏\¿ ∏w¿ ∏x¿ ∏¿¿ ∏∆¿ π¿ π8¿ π^¿ π_¿ πî¿ π†¿ πº¿ ∫¿ ∫¿ ∫¿ ∫¿ ∫T¿ ∫å¿ ∫ü¿ ∫•¿ ∫ˆ¿ ªS¿ ªW¿ ªY¿ ªZ¿ ªó¿ ª≠¿ ª√¿ ª‚¿ º
¿ º%¿ ºJ¿ º_¿ º`¿ ºû¿ ºÀ¿ ºÈ¿ Ω¿ Ω9¿ ΩG¿ ΩM¿ ΩÄ¿ Ωõ¿ Ω—¿ ΩÔ¿ æ¿ æI¿ æx¿ æê¿ æñ¿ æ™¿ æ‹¿ ø¿ ø¿ ø¿ ø¿ ø"¿ øG¿ ø`¿ øã¿ øè¿ øê¿ øú¿ øÆ¿ ø‹¿ ø¿ øÙ¿ øı¿ ¿¿ ¿!¿ ¿7¿ ¿W¿ ¿[¿ ¿\¿ ¿r¿ ¿~¿ ¿¿ ¿©¿ ¿ ¿ ¿Ï¿ ¡	¿ ¡!¿ ¡'¿ ¡+¿ ¡,¿ ¡B¿ ¡C¿ ¡O¿ ¡h¿ ¡ô¿ ¡¥¿ ¡œ¿ ¡„¿ ¡È¿ ¡Ì¿ ¡Ó¿ ¬¿ ¬<¿ ¬@¿ ¬A¿ ¬M¿ ¬à¿ ¬§¿ ¬∫¿ ¬œ¿ ¬È¿ √¿ √,¿ √y¿ √¿ √É¿ √Ñ¿ √ö¿ √µ¿ √¡¿ ƒ¿ ƒ¿ ƒ'¿ ƒ9¿ ƒd¿ ƒ¿ ƒß¿ ƒæ¿ ƒÁ¿ ≈¿ ≈9¿ ≈b¿ ≈s¿ ≈£¿ ≈ƒ¿ ≈“¿ ≈Ú¿ ∆¿ ∆@¿ ∆•¿ ∆ı¿ «¿ «¿ «%¿ «)¿ «*¿ «6¿ «I¿ «d¿ «{¿ «ê¿ «î¿ «ñ¿ «ó¿ «æ¿ «¬¿ »¿ »a¿ »w¿ »Æ¿ »–¿ »÷¿ …&¿ …7¿ …=¿ …Ç¿ …∆¿ …«¿ …”¿  ¿  ¿  ¿  U¿  q¿  Ü¿  £¿  À¿  ·¿  È¿  Ô¿ À%¿ À)¿ À*¿ À6¿ Àm¿ ÀÜ¿ À≠¿ Àƒ¿ ÀÍ¿ Ã¿ Ã¿ Ã*¿ ÃA¿ Ãg¿ Ãî¿ Ãü¿ ÃÆ¿ Ã⁄¿ Ã¿ Ã¯¿ Õ¿ Õ¿ Õ¿ Õ#¿ Õ$¿ Õ0¿ Õp¿ ÕÄ¿ Õõ¿ Õ ¿ ÕÛ¿ Œ:¿ ŒW¿ Œs¿ Œœ¿ Œ‹¿ ŒÊ¿ ŒÓ¿ œ¿ œ¿ œ¿ œ¿ œ¿ œA¿ œE¿ œï¿ œ„¿ œ˘¿ –2¿ –\¿ –b¿ –≤¿ –Œ¿ –‘¿ —¿ —¿ —_¿ —s¿ —Ñ¿ —ø¿ —“¿ —Í¿ “¿ “1¿ “X¿ “Y¿ “â¿ “è¿ “⁄¿ “ı¿ “˚¿ ”1¿ ”k¿ ”ë¿ ”¬¿ ”‰¿ ”Ú¿ ”¯¿ ‘¿ ‘)¿ ‘-¿ ‘.¿ ‘m¿ ‘£¿ ‘ƒ¿ ‘¿ ’¿ ’!¿ ’'¿ ’C¿ ’Y¿ ’]¿ ’^¿ ’j¿ ’»¿ ’…¿ ’’¿ ÷¿ ÷7¿ ÷L¿ ÷i¿ ÷ë¿ ÷ß¿ ÷Ø¿ ÷µ¿ ÷Î¿ ÷Ô¿ ÷¿ ÷¸¿ ◊3¿ ◊L¿ ◊s¿ ◊ä¿ ◊±¿ ◊Õ¿ ◊ﬂ¿ ◊˚¿ ÿ¿ ÿ$¿ ÿJ¿ ÿx¿ ÿÉ¿ ÿí¿ ÿæ¿ ÿ‘¿ ÿ‹¿ ÿÈ¿ ÿ˝¿ Ÿ¿ Ÿ¿ Ÿ¿ Ÿ¿ ŸT¿ Ÿd¿ Ÿ¿ ŸÆ¿ Ÿ◊¿ ⁄¿ ⁄<¿ ⁄X¿ ⁄≤¿ ⁄ø¿ ⁄…¿ ⁄—¿ ⁄‰¿ ⁄Ó¿ ⁄Ú¿ ⁄Ù¿ ⁄ı¿ €¿ €¿ €j¿ €≥¿ €˝¿ ‹4¿ ‹W¿ ‹]¿ ‹≠¿ ‹ ¿ ‹–¿ ›¿ ›Y¿ ›Z¿ ›o¿ ›à¿ ›â¿ ›™¿ ›…¿ ›„¿ ﬁ¿ ﬁ¿ ﬁ4¿ ﬁ8¿ ﬁ9¿ ﬁE¿ ﬁt¿ ﬁu¿ ﬁÅ¿ ﬁ«¿ ﬁ⁄¿ ﬁı¿ ﬂ¿ ﬂj¿ ﬂå¿ ﬂº¿ ﬂÌ¿ ﬂÙ¿ ‡)¿ ‡R¿ ‡k¿ ‡¿ ‡Ö¿ ‡ª¿ ‡ø¿ ‡¿¿ ‡Ã¿ ·¿ ·¿ ·C¿ ·Z¿ ·Ä¿ ·ú¿ ·Æ¿ ·¿¿ ·‡¿ ·˜¿ ‚¿ ‚J¿ ‚U¿ ‚d¿ ‚ê¿ ‚¶¿ ‚Æ¿ ‚ª¿ ‚œ¿ ‚’¿ ‚Ÿ¿ ‚⁄¿ ‚Ê¿ „&¿ „6¿ „Q¿ „Ä¿ „©¿ „˛¿ ‰¿ ‰7¿ ‰L¿ ‰d¿ ‰†¿ ‰›¿ ‰¿ ‰˝¿ Â¿ Â¿ Â"¿ Â,¿ Â0¿ Â2¿ Â3¿ ÂU¿ ÂY¿ Âû¿ Âﬂ¿ Â„¿ Ê!¿ Ê?¿ ÊC¿ Ê}¿ ÊΩ¿ Á ¿ Á7¿ ÁR¿ ÁX¿ Á©¿ Áˆ¿ ËF¿ ËY¿ Ë_¿ Ë§¿ ËË¿ ËÈ¿ Ëı¿ È5¿ È6¿ ÈB¿ Èà¿ È§¿ Èπ¿ È÷¿ È˛¿ Í¿ Í¿ Í"¿ ÍX¿ Í\¿ Í]¿ Íi¿ Í†¿ Íπ¿ Í‡¿ Í˜¿ Î¿ Î9¿ ÎK¿ Îi¿ Î{¿ Îí¿ Î∏¿ ÎÂ¿ Î¿ Îˇ¿ Ï+¿ ÏA¿ ÏI¿ ÏV¿ Ïj¿ Ïp¿ Ït¿ Ïu¿ ÏÅ¿ Ï¡¿ Ï—¿ ÏÏ¿ Ì¿ ÌD¿ Ìã¿ Ì¿¿ Ì ¿ Ì“¿ ÌÂ¿ ÌÔ¿ ÌÛ¿ Ìı¿ Ìˆ¿ Ó:¿ Ó>¿ Óè¿ Ó≈¿ Ô¿ ÔE¿ Ôb¿ Ô|¿ Ôõ¿ Ôµ¿ Ô’¿ Ô˘¿ ¿ -¿ L¿ c¿ Ü¿ á¿ ÷¿ ‹¿ ˝¿ Ò¿ ÒQ¿ Ò¿ Ò•¿ Ò∫¿ Ò⁄¿ ÒÙ¿ Ú¿ Ú ¿ Ú&¿ Úb¿ Úz¿ Ú≤¿ Ú⁄¿ Ú‡¿ Úˆ¿ Ú˙¿ Ú˚¿ Û¿ Û<¿ ÛR¿ Ûs¿ Ûì¿ Û°¿ Ûß¿ Û¡¿ Û◊¿ Û€¿ Û‹¿ Û¯¿ Ù¿ Ù%¿ Ù@¿ ÙZ¿ Ùh¿ Ùn¿ ÙÇ¿ Ùò¿ Ùú¿ Ùù¿ Ù©¿ Ù¿ ı"¿ ıD¿ ıH¿ ıI¿ ıU¿ ıõ¿ ı«¿ ˆ¿ ˆ8¿ ˆr¿ ˆv¿ ˆx¿ ˆy¿ ˆæ¿ ˆÕ¿ ˆ—¿ ˜¿ ˜Y¿ ˜É¿ ˜â¿ ˜®¿ ˜Æ¿ ˜‰¿ ˜¸¿ ¯¿ ¯6¿ ¯N¿ ¯n¿ ¯â¿ ¯£¿ ¯‘¿ ¯ı¿ ˘¿ ˘1¿ ˘2¿ ˘P¿ ˘V¿ ˘•¿ ˘Ω¿ ˘›¿ ˘¿ ˙¿ ˙(¿ ˙6¿ ˙<¿ ˙P¿ ˙f¿ ˙j¿ ˙k¿ ˙õ¿ ˙°¿ ˙Ï¿ ˚¿ ˚¿ ˚X¿ ˚^¿ ˚ò¿ ˚À¿ ˚Í¿ ¸¿ ¸5¿ ¸C¿ ¸I¿ ¸d¿ ¸z¿ ¸~¿ ¸¿ ¸ã¿ ¸¶¿ ¸ª¿ ¸Â¿ ˝¿ ˝Q¿ ˝£¿ ˝™¿ ˝Æ¿ ˝Ø¿ ˝ª¿ ˛¿ ˛¿ ˛2¿ ˛O¿ ˛w¿ ˛ç¿ ˛ï¿ ˛õ¿ ˛—¿ ˛’¿ ˛÷¿ ˛‚¿ ˇ¿ ˇ2¿ ˇF¿ ˇT¿ ˇZ¿ ˇ[¿ ˇn¿ ˇ¢¿ ˇ‰¿ ¿ ¿ 3¿ R¿ v¿ è¿ £¿ «¿ Ù¿#¿0¿:¿X¿`¿s¿}¿~¿®¿‘¿-¿3¿¿ô¿÷¿‹¿ˇ¿¿%¿?¿M¿~¿õ¿◊¿&¿u¿π¿ı¿ˇ¿%¿.¿X¿z¿Å¿Ç¿í¿º¿œ¿Ÿ¿›¿ﬁ¿Í¿0¿\¿†¿ˆ¿˙¿¸¿˝¿B¿F¿ä¿é¿ú¿†¿Ï¿¸¿?¿f¿l¿•¿´¿·¿˘¿	
¿	:¿	R¿	m¿	á¿	∏¿	Ÿ¿	⁄¿	Ê¿
&¿
'¿
3¿
y¿
ï¿
™¿
«¿
Ô¿¿¿¿I¿M¿N¿Z¿ë¿™¿æ¿Ã¿“¿”¿Ê¿¿6¿F¿g¿Ü¿©¿¡¿’¿˘¿&¿U¿b¿l¿ä¿í¿•¿Ø¿∞¿⁄¿¿X¿^¿™¿ƒ¿ˇ¿¿'¿?¿M¿g¿u¿¶¿√¿ˇ¿N¿ù¿·¿¿'¿M¿V¿¿°¿®¿©¿π¿„¿ˆ¿ ¿¿¿¿W¿É¿÷¿⁄¿‹¿›¿¿¿P¿^¿_¿ò¿¶¿®¿©¿Ï¿¿=¿C¿ë¿–¿÷¿%¿P¿g¿ã¿Ã¿¿#¿D¿a¿à¿ù¿û¿∂¿∑¿◊¿›¿ˇ¿+¿E¿j¿ä¿ò¿û¿∑¿Ã¿Â¿˚¿ˇ¿ ¿K¿{¿õ¿∆¿‰¿Ú¿¯¿¿%¿)¿*¿u¿π¿”¿Ÿ¿¿b¿ú¿¡¿Ò¿¿"¿(¿D¿Z¿^¿_¿k¿}¿ñ¿´¿ø¿¿M¿ô¿Â¿ ¿6¿:¿;¿G¿Z¿s¿à¿å¿ç¿ô¿ø¿¿¿ ¿,¿c¿¢¿˘¿.¿I¿[¿ì¿®¿¥¿¯¿ 
¿ I¿ É¿ ù¿ ˘¿!¿!&¿!Ç¿!‚¿"?¿"N¿"{¿"ü¿"π¿"Ú¿#¿#.¿#O¿#g¿#†¿#Ø¿#Ω¿#«¿#‹¿#Ë¿$
¿$.¿$6¿$<¿$^¿$ì¿$◊¿$˘¿%¿%%¿%+¿%/¿%0¿%<¿%Å¿%¨¿%Û¿&P¿&T¿&V¿&W¿&è¿&æ¿&˜¿'¿'+¿'?¿'a¿'É¿'¶¿'»¿'ﬁ¿'Ù¿(¿(4¿(\¿(Ñ¿(û¿(¢¿(£¿(Û¿)+¿)1¿)Ä¿)√¿)‰¿)˜¿*¿*1¿*?¿*E¿*Z¿*p¿*ê¿*î¿*ï¿*Ÿ¿*ﬂ¿++¿+u¿+{¿+À¿,¿,[¿,™¿,È¿-:¿-l¿-ç¿-π¿-ÿ¿-Ê¿-Ï¿.¿.¿.:¿.>¿.?¿.{¿.Å¿.–¿/¿/>¿/_¿/ã¿/Æ¿/º¿/¬¿/ﬁ¿/Ù¿0¿0¿0¿0%¿0s¿0t¿0¡¿1
¿1-¿13¿1É¿1‘¿1Ó¿1Ô¿2¿2¿2V¿2u¿2{¿2«¿3¿3;¿3f¿3á¿3¶¿3¥¿3∫¿3‡¿3ˆ¿4¿4¿4¿4m¿4s¿4≥¿4È¿5
¿56¿5Y¿5g¿5m¿5©¿5≈¿5˝¿6%¿6+¿6A¿6E¿6F¿6w¿6é¿6≠¿6√¿6„¿6Á¿6Ë¿7+¿7L¿7n¿7Ñ¿7§¿7®¿7©¿7Ï¿8¿8/¿8E¿8e¿8i¿8j¿8≠¿8Œ¿8¿9¿9&¿9*¿9+¿9m¿9¨¿9–¿9Ê¿:¿:
¿:¿::¿:k¿:ã¿:°¿:¡¿:≈¿:∆¿:Î¿;7¿;o¿;à¿;é¿;Ω¿;ÿ¿<
¿<¿<)¿<N¿<Ö¿<Ω¿<√¿<Â¿=
¿=E¿=K¿=f¿=ö¿=†¿=≥¿=∑¿=∏¿=ƒ¿>
¿>A¿>~¿>º¿>÷¿?¿?¿?¿?¿?m¿?¨¿?’¿@¿@0¿@l¿@Æ¿@∑¿@æ¿@¬¿@√¿@œ¿A¿A¿AU¿Ax¿A≈¿AË¿B=¿BÅ¿B∑¿B‚¿B¸¿C¿C¿CE¿Cc¿Cw¿Cé¿Cß¿C¯¿D¿D¿DL¿Dd¿Dn¿D}¿D®¿DÈ¿E¿E@¿E}¿E£¿EÃ¿E◊¿F¿F@¿FQ¿Fä¿Fî¿FÃ¿F‡¿G¿G%¿G3¿G;¿GA¿GE¿GF¿GR¿Gì¿G¡¿G≈¿G∆¿G“¿H¿HB¿Hâ¿HÃ¿I ¿IÖ¿I‹¿I‡¿I‚¿I„¿J(¿JW¿Jã¿Jü¿J¿¿JÙ¿K¿K,¿KO¿Kb¿KÅ¿K®¿KÕ¿K‚¿K„¿L6¿LW¿LX¿Lw¿Lñ¿L¨¿L∞¿L±¿Lÿ¿LÎ¿M¿M¿M8¿MQ¿Mi¿MÜ¿M¢¿M∫¿M–¿M÷¿M⁄¿M€¿N#¿N=¿NL¿Nf¿N¿Nç¿Nì¿N¥¿N∆¿O¿O!¿O.¿OG¿O_¿Oe¿Oi¿Oj¿O£¿O©¿O˘¿PJ¿Pz¿PÄ¿Pø¿PÁ¿Q¿Q8¿Qc¿QÇ¿Qê¿Qñ¿QÆ¿Q≈¿Q‡¿Q‰¿QÂ¿R!¿R'¿Rv¿RÆ¿R‰¿S¿S1¿ST¿Sb¿Sh¿SÑ¿Sõ¿S∂¿S∫¿Sª¿S¸¿S˝¿T	¿T¿TV¿To¿Tπ¿T∫¿Tœ¿TÓ¿U5¿Un¿U∂¿UÒ¿V¿V)¿VC¿Vb¿VÄ¿Vö¿V¿V¯¿W¿W(¿W.¿W2¿W3¿W?¿WX¿Wq¿W¥¿W…¿WË¿X/¿Xh¿X≤¿XÌ¿Y
¿Y%¿Y?¿Y^¿Y|¿Yñ¿YÓ¿Yˆ¿Z¿Z¿Z?¿ZE¿ZI¿ZJ¿Zf¿Z}¿Z~¿Z¥¿Z∫¿ZŸ¿[¿[%¿[F¿[h¿[Ö¿[ù¿[ø¿[≈¿[…¿[ ¿[Â¿\¿\¿\¿\ ¿\<¿\Z¿\h¿\n¿\o¿\à¿\™¿\—¿\ﬁ¿]¿]>¿]Ç¿]Ã¿^¿^y¿^∏¿^”¿^Ô¿^¯¿_¿_i¿_õ¿_Æ¿`¿`+¿`g¿`≤¿`∏¿`º¿`Ω¿a¿a]¿a|¿a†¿a∫¿a ¿aﬂ¿aÙ¿bA¿bJ¿bW¿bâ¿bè¿b†¿b§¿b•¿b±¿bË¿c(¿c6¿c<¿cT¿co¿c´¿cœ¿cÈ¿c˘¿d¿d7¿dÇ¿d¶¿dØ¿dº¿dı¿d˚¿dˇ¿e ¿e¿eZ¿eî¿e®¿eÆ¿e∆¿eÔ¿f¿f&¿fb¿f§¿f≠¿f¥¿f∏¿fπ¿f≈¿fÎ¿g¿g>¿gB¿gC¿gO¿gê¿gØ¿g ¿g◊¿gÒ¿h¿h¿h"¿h#¿h/¿ht¿hü¿h’¿i)¿ié¿ií¿iî¿iï¿iŸ¿i›¿j-¿jv¿j≠¿j±¿jÓ¿k;¿kN¿kâ¿kÕ¿kÌ¿l¿l1¿lG¿lj¿l¿lÄ¿l…¿lœ¿m¿mW¿mÅ¿mò¿m∫¿m€¿mÈ¿mÔ¿n	¿n¿n?¿nC¿nD¿nP¿nñ¿nŸ¿o¿oT¿on¿o¶¿o™¿o´¿o¯¿pA¿pd¿pj¿p∫¿q¿q%¿q&¿q2¿qÄ¿qü¿q≈¿q”¿qÔ¿rA¿rW¿rq¿r≠¿rÔ¿r¯¿rˇ¿s¿s¿s¿sG¿sf¿s¿sí¿s£¿t¿t¿t¿t¿t¿t&¿tg¿tª¿tø¿t¿¿tÃ¿u¿u<¿uâ¿u‡¿u‰¿uÊ¿uÁ¿v!¿v%¿vY¿v£¿v§¿vﬁ¿v‚¿w¿w`¿wa¿wô¿wù¿w—¿x¿x¿xT¿xX¿xå¿x⁄¿x€¿y¿y!¿yU¿yØ¿y∞¿yÛ¿y˜¿z+¿zá¿zà¿z»¿zÃ¿{ ¿{V¿{W¿{ì¿{ó¿{À¿|¿|¿|T¿|X¿|†¿|Ï¿|¿}@¿}Ü¿}±¿}µ¿}ı¿}˘¿~H¿~ê¿~Ÿ¿~ﬂ¿)¿C¿[¿s¿â¿¢¿º¿‹¿˝¿Ä¿Ä5¿ÄI¿ÄZ¿Ä`¿Äa¿Ä´¿Ä¸¿Å¿Å7¿Å8¿Åà¿Å≥¿Å¥¿Ç¿Ç!¿ÇH¿ÇI¿Çó¿Çƒ¿Ç≈¿É¿ÉE¿Ét¿Éu¿É∫¿Éı¿Éˆ¿Ñ¿Ñ\¿Ñ]¿ÑÑ¿Ñª¿Ñº¿Ñ¯¿Ö'¿Ö(¿Ö4¿Öo¿Öè¿Öì¿Öî¿Ö†¿Ö›¿Ü	¿Ü%¿Ü]¿Üï¿Ü…¿á¿á?¿áá¿á—¿à¿àQ¿àb¿ài¿àm¿àn¿àz¿àø¿àÍ¿à˛¿â>¿â]¿â|¿âó¿â∏¿â€¿ä
¿ä;¿äf¿äâ¿ä¶¿ä≠¿ä±¿ä≥¿ä¥¿ã¿ã¿ãR¿ãü¿ãΩ¿ã¡¿å¿å`¿åÅ¿åÖ¿å»¿åÃ¿ç¿ç"¿ç0¿ç4¿çv¿çí¿ç‘¿ç¸¿éE¿éK¿éó¿é‚¿é¯¿è
¿è¿è-¿èY¿è¿èó¿è®¿èÁ¿ê ¿ê5¿êN¿êë¿êí¿êû¿ê‰¿ë%¿ë)¿ë*¿ë6¿ës¿ëü¿ë≈¿ë·¿ëÁ¿ëÎ¿ëÏ¿í=¿íé¿í©¿íØ¿í¯¿ì@¿ìà¿ì√¿ì…¿î¿îe¿îä¿îê¿î≠¿îÀ¿î€¿îˆ¿ï¿ï)¿ïv¿ïé¿ïî¿ïò¿ïô¿ï¡¿ï«¿ñ ¿ñ4¿ñd¿ñ™¿ñ ¿ñÂ¿ó2¿óJ¿óP¿óT¿óU¿óa¿óá¿óà¿ó”¿óÍ¿ó¿ò4¿òZ¿ò[¿òg¿òã¿òå¿òò¿òΩ¿ò‘¿òˆ¿ô¿ô)¿ôm¿ô™¿ô¬¿ô»¿ôÃ¿ôÕ¿ôŸ¿ö¿ö1¿ö2¿ö>¿öc¿ö|¿öû¿ö¢¿ö£¿öØ¿ö¡¿õ¿õg¿õè¿õ≤¿õ∆¿õ ¿õÀ¿õ◊¿ú¿ú2¿ú6¿ú7¿úC¿úà¿ú≥¿ú«¿ù¿ù!¿ù;¿ùS¿ùp¿ùw¿ùã¿ùÊ¿ùÌ¿ûB¿ûV¿ûj¿ûä¿ûØ¿ûÀ¿û¯¿ü¿ü¿ü¿ü¿ü¿üB¿üF¿üí¿üﬁ¿†+¿†w¿†≈¿°¿°1¿°5¿°Ñ¿°“¿¢#¿¢r¿¢Ω¿£¿£[¿£û¿£¢¿£Ë¿§5¿§Å¿§–¿•¿•d¿•ô¿• ¿¶¿¶¿¶¿¶9¿¶:¿¶Ñ¿¶î¿¶ö¿¶Í¿ß&¿ß,¿ß}¿ß´¿ß±¿ßˇ¿®8¿®á¿®÷¿®¯¿®˛¿©¿©¿©a¿©É¿©â¿©ó¿©ƒ¿©Ë¿©Ó¿™ ¿™9¿™A¿™G¿™z¿™•¿™´¿™÷¿´O¿´ä¿´Á¿¨,¿¨G¿¨Q¿¨W¿¨i¿¨ñ¿¨∏¿¨‘¿¨Ô¿≠¿≠8¿≠å¿≠ù¿≠¨¿≠π¿≠√¿≠À¿≠’¿≠Á¿≠Ì¿≠˝¿Æ¿ÆH¿Æò¿Æ–¿ÆÓ¿Ø)¿Øu¿Øy¿Øz¿Øƒ¿Ø‚¿ØË¿∞8¿∞t¿∞z¿∞œ¿∞˝¿±¿±Q¿±ä¿±Ÿ¿≤(¿≤J¿≤P¿≤¢¿≤Ò¿≤˜¿≥¿≥¿≥Z¿≥Ü¿≥å¿≥ö¿≥–¿≥˝¿¥¿¥¿¥`¿¥h¿¥n¿¥≥¿¥ﬁ¿¥‰¿µ¿µ|¿µµ¿µ˙¿∂¿∂
¿∂¿∂I¿∂k¿∂á¿∂¢¿∂√¿∂Ì¿∑A¿∑R¿∑a¿∑n¿∑x¿∑Ä¿∑ä¿∑ú¿∑¢¿∑≤¿∑∏¿∏¿∏U¿∏â¿∏ß¿∏‚¿π2¿π6¿π7¿πá¿π÷¿∫$¿∫o¿∫u¿∫¬¿∫Œ¿∫‘¿ª"¿ªo¿ªÑ¿ª≈¿ªÍ¿ªÎ¿º:¿ºà¿º‘¿Ω!¿Ωi¿Ωü¿Ω•¿ΩÚ¿Ω˛¿æ¿æU¿æ†¿æ∏¿æ˚¿ø!¿ø"¿øn¿øÑ¿øä¿ø’¿øÚ¿¿¿¿'¿¿M¿¿`¿¿j¿¿n¿¿o¿¿{¿¿‡¿¿¿¡¿¡E¿¡T¿¡}¿¡Ö¿¡ò¿¡¢¿¡¶¿¡ß¿¡≥¿¡¯¿¬#¿¬B¿¬R¿¬o¿¬√¿¬·¿¬˘¿√T¿√_¿√n¿√∑¿√Ï¿ƒ¿ƒ^¿ƒ√¿≈¿≈!¿≈¥¿≈«¿∆'¿∆Y¿∆≥¿«¿«¿«¿«1¿«L¿«c¿«y¿«ï¿«Ó¿«˚¿»¿»G¿»O¿»b¿»l¿»Ö¿»õ¿»˙¿…¿…	¿…¿…¿…¿…J¿…N¿…ù¿…Ï¿ =¿ f¿ j¿ {¿ ¿ Ã¿ €¿ ﬂ¿À¿À¿ÀU¿ÀY¿Àg¿Àk¿Àπ¿ÀÁ¿Ã¿ÃZ¿Ãr¿Ãà¿Ã¢¿Ã≥¿Õ¿Õ?¿ÕE¿Õb¿Õ¿ÕÆ¿Õ√¿Õƒ¿Œ¿Œ
¿Œ[¿Œ®¿ŒÆ¿ŒÂ¿œ¿œ¿œ6¿œT¿œb¿œh¿œ¿œ§¿œ∆¿œÃ¿œ–¿œ—¿–1¿–7¿–v¿–|¿–À¿–⁄¿—(¿—b¿—f¿—õ¿—∑¿—ﬁ¿“¿“¿“¿“9¿“Y¿“]¿“^¿“j¿“∞¿“Û¿“˜¿“¯¿”¿”D¿”k¿”y¿”¿”≠¿”±¿”≤¿”æ¿‘¿‘7¿‘à¿‘•¿‘Û¿‘˜¿‘¯¿’¿’I¿’t¿’∫¿’Œ¿’Ô¿÷¿÷(¿÷É¿÷å¿÷ì¿÷ó¿÷ô¿÷ö¿÷Í¿◊9¿◊Q¿◊¿◊®¿ÿ	¿ÿ
¿ÿG¿ÿM¿ÿò¿ÿÈ¿Ÿ¿Ÿ¿ŸY¿Ÿ{¿Ÿç¿Ÿ™¿Ÿ»¿Ÿ÷¿Ÿ‹¿ŸÛ¿⁄ ¿⁄$¿⁄%¿⁄1¿⁄d¿⁄x¿⁄ä¿⁄ê¿⁄√¿⁄«¿⁄»¿⁄‘¿€¿€¿€-¿€3¿€f¿€j¿€k¿€w¿€™¿€æ¿€–¿€÷¿‹	¿‹¿‹¿‹¿‹M¿‹a¿‹s¿‹y¿‹¨¿‹∞¿‹±¿‹Ω¿› ¿›¿›'¿›-¿›i¿›m¿›n¿›z¿›†¿›°¿›≠¿›ˇ¿ﬁM¿ﬁQ¿ﬁR¿ﬁ^¿ﬁk¿ﬁ´¿ﬁø¿ﬁ‚¿ﬁË¿ﬂ¿ﬂ¿ﬂ¿ﬂ)¿ﬂB¿ﬂX¿ﬂs¿ﬂw¿ﬂx¿ﬂÑ¿ﬂù¿ﬂ±¿ﬂ”¿ﬂ‡¿ﬂ˝¿‡¿‡¿‡¿‡¿‡Z¿‡ù¿‡°¿‡¢¿‡Æ¿‡‘¿‡ˆ¿·¿·¿·¿·¿·T¿·h¿·v¿·|¿·û¿·¢¿·£¿·Ø¿·Ô¿‚¿‚¿‚¿‚E¿‚I¿‚J¿‚V¿‚õ¿‚∆¿„¿„¿„¿„¿„N¿„g¿„â¿„è¿„≠¿„Õ¿„‰¿‰;¿‰D¿‰K¿‰O¿‰Q¿‰R¿‰ê¿‰î¿‰ﬂ¿Â+¿Â|¿Â…¿ÂÒ¿Âı¿Ê¿Ê
¿ÊW¿Êf¿Êj¿Êü¿Ê£¿Ê‡¿Ê‰¿ÊÚ¿Êˆ¿Á@¿Áä¿ÁΩ¿Ë¿Ë¿Ë3¿ËN¿Ë_¿ËØ¿ËÎ¿ËÒ¿È¿È-¿È\¿Èq¿Èr¿È∏¿Èæ¿Í	¿ÍX¿Íh¿Ín¿Í•¿Í…¿Í‹¿Í˙¿Î¿Î'¿Î-¿ÎE¿Îj¿Îå¿Îí¿Îñ¿Îó¿ÎÁ¿Î˝¿Ï¿ÏB¿ÏH¿Ïó¿Ï¶¿ÏÙ¿Ì.¿Ì2¿Ìg¿ÌÉ¿Ì™¿Ì—¿Ìﬂ¿ÌÂ¿Ó¿Ó%¿Ó)¿Ó*¿Ó6¿Ó|¿Óÿ¿Ó‹¿Ó›¿ÓÈ¿Ô)¿ÔP¿Ô^¿Ôd¿Ôí¿Ôñ¿Ôó¿Ô£¿ÔÍ¿¿m¿ä¿ÿ¿‹¿›¿È¿Ò.¿ÒY¿Ò†¿Ò¥¿Ò’¿ÒÚ¿Ú¿Úf¿Úo¿Úv¿Úz¿Ú|¿Ú}¿Ú¨¿Ú∞¿Û¿ÛR¿Ûù¿Û¬¿Ù¿Ù=¿ÙC¿Ùç¿ÙÕ¿ÙŒ¿ı¿ı¿ı¿ı"¿ıg¿ıí¿ı⁄¿ıﬁ¿ı‡¿ı·¿ˆ(¿ˆD¿ˆî¿ˆﬂ¿˜¿˜¿˜1¿˜\¿˜ì¿˜»¿˜Â¿˜˘¿¯¿¯3¿¯l¿¯°¿¯¢¿¯Ò¿˘¿˘!¿˘o¿˘º¿˘›¿˘„¿˙'¿˙w¿˙∆¿˚¿˚[¿˚y¿˚¥¿˚€¿¸¿¸I¿¸W¿¸]¿¸x¿¸ò¿¸ú¿¸ù¿¸”¿¸˛¿˝¿˝E¿˝`¿˝n¿˝t¿˝†¿˝¥¿˝›¿˝ˇ¿˛¿˛	¿˛
¿˛]¿˛ö¿˛ƒ¿˛˘¿ˇ¿ˇ(¿ˇ.¿ˇ`¿ˇz¿ˇ£¿ˇ≈¿ˇÀ¿ˇœ¿ˇ–¿ ¿ d¿ ö¿ €¿¿¿¿X¿}¿¶¿»¿Œ¿“¿”¿¿R¿Ü¿≈¿Ô¿˝¿¿>¿a¿ä¿¨¿≤¿∂¿∑¿˙¿A¿Å¿¿¿÷¿Ì¿Ó¿˙¿A¿s¿t¿¥¿–¿÷¿"¿J¿P¿z¿≥¿Ô¿˜¿/¿i¿q¿w¿ü¿’¿¿¿K¿Ö¿ç¿ì¿ó¿ò¿»¿	¿	¿	¿	6¿	`¿	û¿	Ω¿	ÿ¿
¿
*¿
m¿
x¿
Å¿
á¿
ã¿
å¿
≥¿
›¿¿9¿T¿Ä¿¶¿È¿Ù¿˝¿¿¿¿,¿T¿ì¿∞¿À¿˜¿¿`¿k¿t¿z¿~¿¿•¿Õ¿¿(¿C¿o¿ï¿ÿ¿„¿Ï¿Ú¿ˆ¿˜¿¿H¿s¿ü¿ø¿Ï¿+¿f¿m¿â¿ß¿≠¿Ò¿ı¿˜¿¯¿5¿o¿≤¿∏¿#¿B¿X¿Ö¿°¿∆¿È¿¿.¿M¿~¿´¿ÿ¿ˇ¿ ¿6¿`¿d¿e¿≥¿Ë¿¿9¿Y¿g¿m¿Ü¿∞¿–¿‘¿’¿¿_¿ë¿ó¿Î¿:¿V¿z¿ç¿´¿…¿◊¿›¿ı¿¿¿¿g¿™¿∞¿ ¿P¿e¿∞¿Ù¿¿¿S¿£¿◊¿¿)¿P¿x¿Ü¿å¿≠¿Õ¿—¿“¿¿9¿?¿ã¿Ÿ¿!¿S¿m¿í¿∏¿∆¿Ã¿Î¿¿¿¿T¿Z¿†¿€¿˛¿0¿J¿o¿ï¿£¿©¿»¿Ë¿Ï¿Ì¿ )¿ b¿ õ¿ Ê¿!1¿!h¿!l¿!m¿!∏¿"¿"¿" ¿"k¿"Œ¿"“¿"”¿#'¿#T¿#≠¿#±¿#≤¿$¿$8¿$ë¿$ï¿$ñ¿$‡¿%@¿%D¿%E¿%k¿%ë¿%¿¿%Ô¿&¿&¿&e¿&r¿&x¿&æ¿&Í¿'¿'P¿'ì¿'…¿'Í¿(¿(8¿(F¿(L¿(h¿(à¿(å¿(ç¿(ô¿(Ÿ¿(ı¿)¿)	¿)7¿);¿)<¿)H¿)è¿)¡¿)Ï¿* ¿*U¿*a¿*•¿*‘¿+¿+#¿+/¿+z¿+√¿+ ¿+À¿+Ú¿, ¿,&¿,M¿,{¿,Å¿,¶¿,⁄¿,‡¿-¿-5¿-;¿-c¿-î¿-ö¿-¿¿-Ì¿-Û¿.¿.K¿.Q¿.u¿.û¿.§¿.À¿.˜¿.˝¿/#¿/P¿/V¿/Å¿/∏¿/æ¿/‰¿0¿0¿0C¿0z¿0Ä¿0©¿0‹¿0‚¿1
¿1;¿1A¿1j¿1ù¿1£¿1 ¿1˘¿1ˇ¿27¿2à¿2é¿2∂¿2Á¿2Ì¿3¿3I¿3O¿3u¿3¢¿3®¿3Õ¿3¯¿3˛¿4(¿4[¿4a¿4Ö¿4∑¿4Ω¿4·¿5¿5¿5F¿5ä¿5ê¿5Ω¿6¿6¿6*¿6Z¿6`¿6á¿6¥¿6∫¿7¿7H¿7N¿7y¿7Æ¿7¥¿7ﬁ¿8¿8¿8A¿8t¿8z¿8®¿8‚¿8Ë¿9¿9\¿9b¿9É¿9Ø¿9µ¿9‹¿:¿:¿:<¿:y¿:¿:¢¿:…¿:œ¿;¿;k¿;≠¿;“¿;Ù¿;˙¿<%¿<S¿<Y¿<Ç¿<¨¿<≤¿<ﬁ¿=¿=¿=A¿=s¿=y¿=£¿=œ¿=’¿>¿>1¿>7¿>a¿>ç¿>ì¿>Ω¿>È¿>Ô¿?¿?9¿??¿?d¿?Ü¿?å¿?≥¿?Ÿ¿?ﬂ¿@¿@q¿@w¿@∂¿A¿A¿AK¿Aï¿Aõ¿A’¿B!¿B'¿BU¿Bâ¿Bè¿B∏¿B‚¿BË¿C#¿Cq¿Cw¿C≤¿D ¿D¿D-¿DS¿DY¿Dè¿D⁄¿D‡¿D‰¿DÂ¿D¸¿E¿E¿E ¿E=¿Eb¿Ef¿Eg¿EÇ¿E•¿E©¿E™¿E»¿EÓ¿EÚ¿EÛ¿F¿F9¿F=¿F>¿FZ¿F~¿FÇ¿FÉ¿F°¿F«¿FÀ¿FÃ¿FË¿G¿G¿G¿G-¿GQ¿GU¿GV¿Gn¿Gé¿Gí¿Gì¿G™¿G…¿GÕ¿GŒ¿GÁ¿H¿H¿H¿HQ¿Hò¿Hú¿Hù¿H‚¿I*¿I.¿I/¿In¿I∞¿I¥¿Iµ¿Iı¿J8¿J<¿J=¿Jt¿J•¿J©¿J™¿J–¿J˜¿J˚¿J¸¿K)¿K^¿Kb¿Kc¿Kê¿K≈¿K…¿K ¿K„¿L¿L¿L
¿L¿LZ¿Lv¿Lz¿L…¿L˝¿M1¿MÄ¿Mç¿MŒ¿MÍ¿M˛¿Mˇ¿NL¿Nú¿Næ¿N–¿NÌ¿O¿O¿O¿O6¿OV¿OZ¿O[¿Og¿OÆ¿O‡¿P#¿P'¿P(¿P4¿Py¿P§¿PÈ¿PÌ¿PÔ¿P¿Q3¿Qv¿Qä¿Qé¿Q’¿R¿RN¿RÇ¿R–¿S¿S¿S¿S_¿Së¿Sú¿Sæ¿SÓ¿SÚ¿SÙ¿Sı¿T'¿T+¿Tz¿Tñ¿Tö¿T·¿U¿UR¿Uõ¿Uﬂ¿U˝¿V¿V¿VW¿V{¿Vé¿V¨¿VÀ¿VŸ¿Vﬂ¿V˜¿W¿W¿W¿W(¿Wh¿W}¿Wã¿Wë¿Wø¿W√¿Wƒ¿W–¿X¿X@¿Xá¿Xã¿Xç¿Xé¿XÀ¿Xœ¿Y¿Yb¿Yî¿Yæ¿Y¬¿Y–¿Y‘¿Z¿ZM¿Zù¿Z˛¿Zˇ¿[2¿[M¿[[¿[t¿[é¿[ú¿[¢¿[∂¿[÷¿[⁄¿[€¿[Á¿\.¿\`¿\Ç¿\Ü¿\á¿\ì¿\ÿ¿]¿]A¿]E¿]G¿]H¿]|¿]Ä¿]é¿]í¿]–¿^¿^B¿^{¿^⁄¿^€¿_)¿_G¿_M¿_û¿_∏¿_◊¿_Í¿`¿`"¿`0¿`6¿`S¿`f¿`ç¿`ª¿`¡¿`◊¿`€¿`‹¿`Ë¿a¿a¿ab¿a∞¿aÚ¿b¿b¿b¿b5¿bP¿bp¿bå¿bê¿bë¿bù¿b‘¿bÌ¿c$¿c1¿cn¿cÄ¿cñ¿c±¿c∑¿c¿d ¿d*¿d=¿dG¿dK¿dL¿dX¿dù¿d»¿e
¿e¿e¿e¿e_¿eí¿eñ¿e‚¿eÊ¿f1¿fÇ¿fñ¿fö¿f®¿f¨¿fÏ¿g/¿gb¿gù¿gµ¿g“¿gÙ¿h¿hE¿hw¿hç¿h¢¿hœ¿hË¿i¿i6¿iK¿iL¿ií¿i»¿iÁ¿i˙¿j¿j2¿j@¿jF¿jY¿jo¿js¿jt¿j∏¿jˆ¿j¸¿kM¿kè¿kï¿kÊ¿l5¿li¿lõ¿lµ¿l⁄¿m ¿m¿m¿m3¿mI¿mM¿mN¿mõ¿m≈¿mÂ¿m˜¿n¿n0¿n>¿nD¿nY¿no¿ns¿nt¿n√¿n‹¿n‚¿o'¿ol¿oª¿o˝¿pL¿pç¿pœ¿p¯¿q¿q¿q:¿qi¿qÑ¿q™¿qÃ¿q⁄¿q‡¿q˚¿r¿r¿r¿rb¿rú¿r¢¿r‰¿rÍ¿s¿sD¿sa¿sâ¿s≠¿sª¿s¡¿sﬁ¿sÙ¿s¯¿s˘¿t¿t¿t)¿t=¿tA¿tB¿tN¿ty¿tz¿t∞¿tº¿t˘¿t˙¿uJ¿uP¿u†¿u—¿v ¿v:¿v\¿vò¿vú¿vù¿v©¿vÔ¿w0¿wd¿wx¿w~¿wπ¿wˆ¿x4¿xN¿xÜ¿xä¿xã¿xó¿xÂ¿y¿y6¿yP¿yå¿yŒ¿y◊¿yﬁ¿y‚¿y„¿yÔ¿z&¿zT¿z`¿zª¿{¿{[¿{Ü¿{ç¿{∂¿{—¿{Î¿|L¿|e¿|Ç¿|ñ¿|¬¿|Ô¿}¿}¿}%¿}1¿}H¿}v¿}•¿}»¿}Œ¿}Â¿}Û¿~¿~¿~F¿~§¿~≈¿~Ê¿~ˇ¿¿!¿(¿8¿b¿u¿¿É¿Ñ¿ê¿—¿Ä ¿Ä¿Ä¿Ä¿ÄV¿ÄÅ¿Ä√¿Å¿Å[¿Åµ¿Åπ¿Åª¿Åº¿Ç¿Ç¿Ç¿Ç!¿Çe¿Ç™¿ÇÒ¿É8¿ÉJ¿ÉP¿Éù¿Éœ¿É’¿Ñ¿ÑW¿Ñm¿ÑÉ¿Ñ¿¿Ñ‘¿Ñ’¿Ö¿Ö'¿Ö3¿ÖM¿Ök¿Öy¿Ö¿Öñ¿Ö¨¿Ö∞¿Ö±¿Ü¿Ü!¿Ü0¿ÜJ¿Üe¿Üs¿Üy¿Üç¿Ü£¿Üß¿Ü®¿Ü„¿Ü‰¿Ü¿á¿á¿á)¿á`¿á∫¿á˝¿à
¿à+¿àP¿àW¿àw¿à™¿àÆ¿àØ¿àª¿àŒ¿àÌ¿â¿â¿â   t/// @docImport 'package:flutter/widgets.dart';
///
/// @docImport 'proxy_sliver.dart';
/// @docImport 'sliver.dart';
Å$Å9Å8Å;ÅcÅf   Åè   Åπ   Å·   Ç
   Ç3   ÇF   Ç[   Çx   ÇèÇ∫É *ÉÑwÜÜÇÎ/// A base class for render boxes that resemble their children.
///
/// A proxy box has a single child and mimics all the properties of that
/// child by calling through to the child for each function in the render box
/// protocol. For example, a proxy box determines its size by asking its child
/// to layout with the same constraints and then matching the size.
///
/// A proxy box isn't useful on its own because you might as well just replace
/// the proxy box with its child. However, RenderProxyBox is a useful base class
/// for render objects that wish to mimic most, but not all, of the properties
/// of their child.
///
/// See also:
///
///  * [RenderProxySliver], a base class for render slivers that resemble their
///    children. Ü|ÅáK áKáY Äƒ/// Creates a proxy render box.
///
/// Proxy render boxes are rarely created directly because they proxy
/// the render box protocol to [child]. Instead, consider using one of the
/// subclasses.á[ágáf       î(ÖôîêîêX/// A RenderProxyBox subclass that allows you to customize the
/// hit-testing behavior. îÕÄ˝ïJ ïJïk v/// Initializes member variables for subclasses.
///
/// By default, the [behavior] is [HitTestBehavior.deferToChild].ïr,ïxïw  ï§ï∞ïØ  ïÇïëïíïΩï¬ï»ï√ïŒÅ1ñ˜ñ˜Å/// How to behave during hit testing when deciding how the hit test propagates
/// to children and whether to consider targets behind this one.
///
/// Defaults to [HitTestBehavior.deferToChild].
///
/// See [HitTestBehavior] for the allowed values and their meanings.  óÅÖóó  óó/ó.  ó7óHóG  óóòçTòûòû  ò™ò≤ò±  òçòéòÂÄ⁄òˆòˆ  ô
&ô'ô&  òÂòÊ ô√ëRõ≠õ≠Å„/// Imposes additional constraints on its child.
///
/// A render constrained box proxies most functions in the render box protocol
/// to its child, except that when laying out its child, it tightens the
/// constraints provided by its parent by enforcing the [additionalConstraints]
/// as well.
///
/// For example, if you wanted [child] to have a minimum height of 50.0 logical
/// pixels, you could use `const BoxConstraints(minHeight: 50.0)` as the
/// [additionalConstraints]. õ›ÅQúS úSúg o/// Creates a render box that constrains its child.
///
/// The [additionalConstraints] argument must be valid.úiúuút  ú{-úîúì  ú±ú∑ú‚ú∏úÕúŒú‡ú·ùúÎùù!ù&ù,ù'ù∏%ù«ù«  ù2ÄÉùÖùÖ=/// Additional constraints to apply to [child] during layout.   ù·Ä◊ùÂùÂ  ù˚ûû
   	ûºÅ≤ûœûœ  ûËûûÔ  ûºûΩ†rÅ≤†Ö†Ö  †û†¶†•  †r†s¢(Åª¢;¢;  ¢U¢]¢\  ¢(¢)£ÁÅª£˙£˙  §§§  £Á£Ë•¶Ä¬•∫•∫  •Õ$•Á•Ê  •Û¶¶   •¶•ß¶lÅL¶}¶}   ¶l¶mßºÄÛß⁄ß⁄  ßÎ$®®  ßºßΩß»ß…®≥Åi®ƒ®ƒ  ®”®‰®„  ®Ï®Ù®Û  ®≥®¥™ ÄÛ™1™1  ™E&™b™a  ™ ™! ´åw≠ç≠çÇo/// Constrains the child's [BoxConstraints.maxWidth] and
/// [BoxConstraints.maxHeight] if they're otherwise unconstrained.
///
/// This has the effect of giving the child a natural dimension in unbounded
/// environments. For example, by providing a [maxHeight] to a widget that
/// normally tries to be as big as possible, the widget will normally size
/// itself to fit its parent, but when placed in a vertical list, it will take
/// on the given height.
///
/// This is useful when composing widgets that normally try to match their
/// parents' size, so that they behave reasonably in lists (which are
/// unbounded). ≠πÅÆ† Æ†Æ∞ Ä‹/// Creates a render box that imposes a maximum width or maximum height on its
/// child if the child is otherwise unconstrained.
///
/// The [maxWidth] and [maxHeight] arguments not be null and must be
/// non-negative.Æ∑Æ√Æ¬  ÆÕ!Æ’Æ‘  ÆÙ"Æ¸Æ˚  ÆﬂÆÂÆÊØØØØØ%Ø5Ø/Ø&Ø2Ø?ØEØVØPØFØSØjØ`ØlØàØ}ØäØúØ°ØßØ¢∞&∞-∞-  ±U±\±\  Ø≠v∞∞R/// The value to use for maxWidth if the incoming maxWidth constraint is infinite.   ∞:Äö∞>∞>  ∞G∞O∞N   ∞ÿz±:±:T/// The value to use for maxHeight if the incoming maxHeight constraint is infinite.   ±jÄù±n±n  ±x±Ä±   ≤ÅΩ≤≤  ≤,≤<≤;   ≥ÃÅB≥—≥—  ≥ﬂ#≥¯≥˜  ¥"¥¥   µÄºµ0µ0  µA$µ[µZ  µµµµµ“ÄÖµ„µ„   µ“µ”∂[Å1∂l∂l  ∂Ä&∂ù∂ú  ∂[∂\ ∑êñïææÜ{/// Attempts to size the child to a specific aspect ratio.
///
/// The render object first tries the largest width permitted by the layout
/// constraints. The height of the render object is determined by applying the
/// given aspect ratio to the width, expressed as a ratio of width to height.
///
/// For example, a 16:9 width:height aspect ratio would have a value of
/// 16.0/9.0. If the maximum width is infinite, the initial width is determined
/// by applying the aspect ratio to the maximum height.
///
/// Now consider a second example, this time with an aspect ratio of 2.0 and
/// layout constraints that require the width to be between 0.0 and 100.0 and
/// the height to be between 0.0 and 100.0. We'll select a width of 100.0 (the
/// biggest allowed) and a height of 50.0 (to match the aspect ratio).
///
/// In that same situation, if the aspect ratio is 0.5, we'll also select a
/// width of 100.0 (still the biggest allowed) and we'll attempt to use a height
/// of 200.0. Unfortunately, that violates the constraints because the child can
/// be at most 100.0 pixels tall. The render object will then take that value
/// and apply the aspect ratio again to obtain a width of 50.0. That width is
/// permitted by the constraints and the child receives a width of 50.0 and a
/// height of 100.0. If the width were not permitted, the render object would
/// continue iterating through the constraints. If the render object does not
/// find a feasible size after consulting each constraint, the render object
/// will eventually select a size for the child that meets the layout
/// constraints but fails to meet the aspect ratio constraints. æ?ÅCæ≈ æ≈æ÷ /// Creates as render object with a specific aspect ratio.
///
/// The [aspectRatio] argument must be a finite, positive value.æÿæ‰æ„  æÍæ˚æ˙  øøø&ø!øø#ø/ø5øJø6øAøBø`øSøbøuøzøÄø{¿ @w¿ @~¿ @~  øÜÄÓ¿ @X¿ @XÄæ/// The aspect ratio to attempt to use.
///
/// The aspect ratio is expressed as a ratio of width to height. For example,
/// a 16:9 width:height aspect ratio would have a value of 16.0/9.0.   ¿ @éÄæ¿ @í¿ @í  ¿ @û¿ @¶¿ @•   	¿ APÄº¿ Ac¿ Ac  ¿ A|¿ AÑ¿ AÉ  ¿ AP¿ AQ¿ BÄº¿ B#¿ B#  ¿ B<¿ BD¿ BC  ¿ B¿ B¿ B–Ä∫¿ B„¿ B„  ¿ B˝¿ C¿ C  ¿ B–¿ B—¿ CéÄ∫¿ C°¿ C°  ¿ Cª¿ C√¿ C¬  ¿ Cé¿ Cè¿ DLáK¿ DQ¿ DQ  ¿ Dc¿ Ds¿ Dr   ¿ KõÄÖ¿ Kπ¿ Kπ  ¿ K $¿ K‰¿ K„  ¿ Kõ¿ Kú¿ Kß¿ K®¿ L$Äø¿ L8¿ L8  ¿ LK¿ L[¿ LZ  ¿ Lg¿ Lu¿ Lt  ¿ L$¿ L%¿ LÁ{¿ L¯¿ L¯   ¿ LÁ¿ LË¿ MfÄΩ¿ Mw¿ Mw  ¿ Mã&¿ M®¿ Mß  ¿ Mf¿ Mg ¿ N'ñ*¿ TÈ¿ TÈÜº/// Sizes its child to the child's maximum intrinsic width.
///
/// This class is useful, for example, when unlimited width is available and
/// you would like a child that would otherwise attempt to expand infinitely to
/// instead size itself to a more reasonable width.
///
/// The constraints that this object passes to its child will adhere to the
/// parent's constraints, so if the constraints are not large enough to satisfy
/// the child's maximum intrinsic width, then the child will get less width
/// than it otherwise would. Likewise, if the minimum width constraint is
/// larger than the child's maximum intrinsic width, the child will be given
/// more width than it otherwise would.
///
/// If [stepWidth] is non-null, the child's width will be snapped to a multiple
/// of the [stepWidth]. Similarly, if [stepHeight] is non-null, the child's
/// height will be snapped to a multiple of the [stepHeight].
///
/// This class is relatively expensive, because it adds a speculative layout
/// pass before the final layout phase. Avoid using it where possible. In the
/// worst case, this render object can result in a layout that is O(N¬≤) in the
/// depth of the tree.
///
/// See also:
///
///  * [Align], a widget that aligns its child within itself. This can be used
///    to loosen the constraints passed to the [RenderIntrinsicWidth],
///    allowing the [RenderIntrinsicWidth]'s child to be smaller than that of
///    its parent.
///  * [Row], which when used with [CrossAxisAlignment.stretch] can be used
///    to loosen just the width constraints that are passed to the
///    [RenderIntrinsicWidth], allowing the [RenderIntrinsicWidth]'s child's
///    width to be smaller than that of its parent. ¿ UÅ“¿ U‡ ¿ U‡¿ UÙ Äæ/// Creates a render object that sizes itself to its child's intrinsic width.
///
/// If [stepWidth] is non-null it must be > 0.0. Similarly If [stepHeight] is
/// non-null it must be > 0.0.¿ Uˆ¿ Uˇ¿ U˛  ¿ V	¿ V¿ V  ¿ V¿ V)¿ V(  ¿ V6¿ V<¿ Va¿ VO¿ VG¿ V=¿ VJ¿ V\¿ VR¿ V^¿ Vj¿ Vp¿ Vó¿ VÑ¿ V|¿ Vq¿ V¿ Ví¿ Vá¿ Vî¿ V´¿ V†¿ V≠¿ V ¿ Væ¿ VÃ¿ Vﬁ¿ V„¿ VÈ¿ V‰¿ Wè¿ Wó¿ Wó  ¿ X˙¿ Y¿ Y  ¿ VÔÄù¿ Wt¿ Wtr/// If non-null, force the child's width to be a multiple of this value.
///
/// This value must be null or > 0.0.   ¿ W•ÄÆ¿ W©¿ W©  ¿ W≥¿ Wº¿ Wª   ¿ XWÄ†¿ X›¿ X›s/// If non-null, force the child's height to be a multiple of this value.
///
/// This value must be null or > 0.0.   ¿ YÄ±¿ Y¿ Y  ¿ Y ¿ Y)¿ Y(   ¿ Y∆Ä±¿ Y‘¿ Y‘  ¿ Yﬂ¿ YÁ¿ YÊ  ¿ YÌ¿ Yˆ¿ Yı   ¿ Z{i¿ Zé¿ Zé  ¿ Zß¿ ZØ¿ ZÆ  ¿ Z{¿ Z|¿ ZËÄŸ¿ Z˚¿ Z˚  ¿ [¿ [¿ [  ¿ ZË¿ ZÈ¿ [≈ÅN¿ [ÿ¿ [ÿ  ¿ [Ú¿ [˙¿ [˘  ¿ [≈¿ [∆¿ ]ÅN¿ ]*¿ ]*  ¿ ]D¿ ]L¿ ]K  ¿ ]¿ ]¿ ^iÅ∑¿ ^x¿ ^x  ¿ ^ä¿ ^ï¿ ^î  ¿ ^õ¿ ^´¿ ^™   ¿ `$Å¿ `)¿ `)  ¿ `7"¿ `O¿ `N  ¿ `[#¿ `t¿ `s   ¿ a0Äº¿ aN¿ aN  ¿ a_$¿ ay¿ ax  ¿ a0¿ a1¿ a<¿ a=¿ aÄ€¿ b¿ b  ¿ b¿ b'¿ b&  ¿ b3¿ bA¿ b@  ¿ a¿ aÒ¿ bœÄÖ¿ b‡¿ b‡   ¿ bœ¿ b–¿ cXÄ˜¿ ci¿ ci  ¿ c}&¿ cö¿ cô  ¿ cX¿ cY ¿ dSç|¿ j@¿ j@ÖÁ/// Sizes its child to the child's intrinsic height.
///
/// This class is useful, for example, when unlimited height is available and
/// you would like a child that would otherwise attempt to expand infinitely to
/// instead size itself to a more reasonable height.
///
/// The constraints that this object passes to its child will adhere to the
/// parent's constraints, so if the constraints are not large enough to satisfy
/// the child's maximum intrinsic height, then the child will get less height
/// than it otherwise would. Likewise, if the minimum height constraint is
/// larger than the child's maximum intrinsic height, the child will be given
/// more height than it otherwise would.
///
/// This class is relatively expensive, because it adds a speculative layout
/// pass before the final layout phase. Avoid using it where possible. In the
/// worst case, this render object can result in a layout that is O(N¬≤) in the
/// depth of the tree.
///
/// See also:
///
///  * [Align], a widget that aligns its child within itself. This can be used
///    to loosen the constraints passed to the [RenderIntrinsicHeight],
///    allowing the [RenderIntrinsicHeight]'s child to be smaller than that of
///    its parent.
///  * [Column], which when used with [CrossAxisAlignment.stretch] can be used
///    to loosen just the height constraints that are passed to the
///    [RenderIntrinsicHeight], allowing the [RenderIntrinsicHeight]'s child's
///    height to be smaller than that of its parent. ¿ jqÄä¿ j¬ ¿ j¬¿ j◊ N/// Creates a render object that sizes itself to its child's intrinsic height.¿ jŸ¿ jÂ¿ j‰  ¿ jÓ¿ jÛ¿ j˘¿ jÙ  ¿ jˇÅ¿ k¿ k  ¿ k+¿ k3¿ k2  ¿ jˇ¿ k ¿ l!Å¿ l4¿ l4  ¿ lM¿ lU¿ lT  ¿ l!¿ l"¿ mCi¿ mV¿ mV  ¿ mp¿ mx¿ mw  ¿ mC¿ mD¿ m∞ÄÈ¿ mø¿ mø  ¿ m—¿ m‹¿ m€  ¿ m‚¿ mÚ¿ mÒ   ¿ nùÅ¿ n¢¿ n¢  ¿ n∞"¿ n»¿ n«  ¿ n‘#¿ nÌ¿ nÏ   ¿ o©Äº¿ o«¿ o«  ¿ oÿ$¿ oÚ¿ oÒ  ¿ o©¿ o™¿ oµ¿ o∂¿ piÄ€¿ p}¿ p}  ¿ pê¿ p†¿ pü  ¿ p¨¿ p∫¿ pπ  ¿ pi¿ pj¿ qHÄÖ¿ qY¿ qY   ¿ qH¿ qI ¿ q—ÅÒ¿ r¿ r@/// Excludes the child from baseline computations in the parent. ¿ rHÄõ¿ r´ ¿ r´¿ rø `/// Create a render object that causes the parent to ignore the child for baseline computations.¿ r¡¿ rÕ¿ rÃ  ¿ r÷¿ r€¿ r·¿ r‹  ¿ rÁ^¿ r¯¿ r¯  ¿ s¿ s&¿ s%  ¿ rÁ¿ rË¿ sIw¿ sZ¿ sZ  ¿ sm$¿ sá¿ sÜ  ¿ sì¿ s°¿ s†  ¿ sI¿ sJ ¿ sƒç≥¿ uØ¿ uØÅ‰/// Makes its child partially transparent.
///
/// This class paints its child into an intermediate buffer and then blends the
/// child back into the scene partially transparent.
///
/// For values of opacity other than 0.0 and 1.0, this class is relatively
/// expensive because it requires painting the child into an intermediate
/// buffer. For the value 0.0, the child is not painted at all. For the
/// value 1.0, the child is painted immediately without an intermediate buffer. ¿ uÿÅ®¿ vX ¿ vX¿ ve y/// Creates a partially transparent render object.
///
/// The [opacity] argument must be between 0.0 and 1.0, inclusive.¿ vg¿ vo¿ vn  ¿ v}#¿ vÉ¿ vÇ  ¿ v¢¿ vÆ¿ v≠   ¿ vx¿ võ¿ vª¿ v¡¿ v‚¿ v—¿ v ¿ v¬¿ vÕ¿ v‹¿ v‘¿ vﬂ¿ vÙ¿ vÎ¿ vˆ¿ w¿ w¿ w¿ wD¿ w=¿ wF¿ wH¿ wI¿ wN¿ wO¿ wb¿ wj¿ wc¿ ws¿ wx¿ w~¿ wy¿ x
¿ x¿ x  ¿ yè¿ yñ¿ yñ  ¿ |≠¿ |≤¿ |≤  ¿ wÑK¿ wô¿ wô   ¿ wÑ¿ wÖ¿ w”A¿ wË¿ wË   ¿ w”¿ w‘¿ x'Åe¿ yx¿ yxÅ5/// The fraction to scale the child's alpha value.
///
/// An opacity of 1.0 is fully opaque. An opacity of 0.0 is fully transparent
/// (i.e., invisible).
///
/// Values 1.0 and 0.0 are painted with a fast path. Other values
/// require painting the child into an intermediate buffer, which is
/// expensive.   ¿ y¢Ç ¿ y¶¿ y¶  ¿ yÆ¿ y∂¿ yµ   ¿ {∆Ä‰¿ |x¿ |xÄû/// Whether child semantics are included regardless of the opacity.
///
/// If false, semantics are excluded when [opacity] is 0.0.
///
/// Defaults to false.   ¿ |ÕÄ±¿ |—¿ |—  ¿ |Ë
¿ |Ó¿ |Ì   ¿ }Çl¿ }ì¿ }ì  ¿ }ü¿ }™¿ }©  ¿ }Ç¿ }É¿ }ÚÄ«¿ ~
¿ ~
  ¿ ~!)¿ ~C¿ ~B  ¿ }Ú¿ }Û¿ ~ΩÄ¢¿ ~Œ¿ ~Œ  ¿ ~‘¿ ~Â¿ ~‰  ¿ ~Ì¿ ~ı¿ ~Ù  ¿ ~Ω¿ ~æ¿ cÄÆ¿ t¿ t  ¿ é¿ £¿ ¢  ¿ c¿ d¿ ÄÅ`¿ Ä&¿ Ä&  ¿ Ä:&¿ ÄW¿ ÄV  ¿ Ä¿ Ä ¿ êãÇO¿ ëY¿ ëYÄ«/// Makes its child partially transparent, driven from an [Animation].
///
/// This is a variant of [RenderOpacity] that uses an [Animation<double>] rather
/// than a [double] to control the opacity. ¿ ëµÅ#¿ ëÍ ¿ ëÍ¿ ëˇ 2/// Creates a partially transparent render object.¿ í"¿ í"¿ í!  ¿ í.#¿ í4¿ í3  ¿ íW¿ íc¿ íb  ¿ íL¿ íp¿ íu¿ í{¿ ív    ¿ ìùâ¿ îd¿ îdÄ¿/// Applies a mask generated by a [Shader] to its child.
///
/// For example, [RenderShaderMask] can be used to gradually fade out the edge
/// of a child by using a [ui.Gradient.linear] mask. ¿ îêÅ7¿ îË ¿ îË¿ î¯ U/// Creates a render object that applies a mask generated by a [Shader] to its child.¿ îˇ¿ ï¿ ï
  ¿ ï&¿ ï.¿ ï-  ¿ ïA(¿ ïL¿ ïK  ¿ ïW¿ ï`¿ ïa¿ ïÇ¿ ïr¿ ïÑ¿ ï¶¿ ïõ¿ ï®¿ ï∫¿ ïø¿ ï≈¿ ï¿¿ ò¿ ò"¿ ò"  ¿ ôﬂ¿ ôÈ¿ ôÈ  ¿ ïÀJ¿ ïÏ¿ ïÏ   ¿ ïÀ¿ ïÃ¿ ñÅ˜¿ óÓ¿ óÓÅ-/// Called to creates the [Shader] that generates the mask.
///
/// The shader callback is called with the current size of the child so that
/// it can customize the shader to the size and location of the child.
///
/// The rectangle will always be at the origin when called by
/// [RenderShaderMask].   ¿ ò5Äô¿ ò9¿ ò9  ¿ òH¿ òX¿ òW   ¿ ò“Å
¿ ôƒ¿ ôƒÄ€/// The [BlendMode] to use when applying the shader to the child.
///
/// The default, [BlendMode.modulate], is useful for applying an alpha blend
/// to the child. Other blend modes can be used to create other effects.   ¿ ô˜ÄÖ¿ ô˚¿ ô˚  ¿ ö¿ ö¿ ö   ¿ öÄ=¿ öï¿ öï   ¿ öÄ¿ öÅ¿ ö¡ÅÂ¿ ö“¿ ö“  ¿ öÿ¿ öÈ¿ öË  ¿ öÒ¿ ö˘¿ ö¯  ¿ ö¡¿ ö¬ ¿ ú™ä¿¿ ùf¿ ùfÄµ/// Applies a filter to the existing painted content and then paints [child].
///
/// This effect is relatively expensive, especially if the filter is non-local,
/// such as a blur. ¿ ùñÅ•¿ ù¸ ¿ ù¸¿ û \/// Creates a backdrop filter.
/// The [blendMode] argument defaults to [BlendMode.srcOver].¿ û¿ û#¿ û"  ¿ û-¿ ûF¿ ûE  ¿ ûQ'¿ û\¿ û[  ¿ û~¿ ûÑ¿ ûÉ  ¿ ûó¿ û•¿ û§  ¿ ûg¿ ûp¿ ûq¿ ûç¿ û¿¿ û∏¿ û¬¿ û⁄¿ û—¿ û‹¿ û˜¿ ûÏ¿ û˘¿ ü¿ ü¿ ü¿ ü.¿ ü3¿ ü9¿ ü4¿ †¿ †¿ †  ¿ °É¿ °í¿ °í  ¿ ¢Ò¿ ¢˚¿ ¢˚  ¿ §]¿ §j¿ §j  
¿ ü?R¿ üd¿ üd   ¿ ü?¿ ü@¿ üïn¿ üÔ¿ üÔN/// Whether or not the backdrop filter operation will be applied to the child.   ¿ †y¿ †¿ †  ¿ †#
¿ †)¿ †(   ¿ †îÄÏ¿ °n¿ °nÄº/// The image filter to apply to the existing painted content before painting
/// the child.
///
/// For example, consider using [ui.ImageFilter.blur] to create a backdrop
/// blur effect.   ¿ °ùÄÅ¿ °°¿ °°  ¿ °®¿ °∏¿ °∑   ¿ ¢"ÄÃ¿ ¢÷¿ ¢÷Äù/// The blend mode to use to apply the filtered background content onto the background
/// surface.
///
/// {@macro flutter.widgets.BackdropFilter.blendMode}   ¿ £	ÄÖ¿ £¿ £  ¿ £¿ £"¿ £!   ¿ £íÄ»¿ §>¿ §>Äí/// The backdrop key that identifies the [BackdropGroup] this filter will
/// read from.
///
/// The default value for the backdrop key is `null`.   ¿ §zÄé¿ §~¿ §~  ¿ §ä¿ §ò¿ §ó   ¿ •=¿ •!¿ •!   ¿ •¿ •¿ •MÇ¿ •^¿ •^  ¿ •d¿ •u¿ •t  ¿ •}¿ •Ö¿ •Ñ  ¿ •M¿ •N ¿ ßléï¿ ´Œ¿ ´ŒÑR/// An interface for providing custom clips.
///
/// This class is used by a number of clip widgets (e.g., [ClipRect] and
/// [ClipPath]).
///
/// The [getClip] method is called whenever the custom clip needs to be updated.
///
/// The [shouldReclip] method is called when a new instance of the class
/// is provided, to check if the new instance actually represents different
/// information.
///
/// The most efficient way to update the clip provided by this class is to
/// supply a `reclip` argument to the constructor of the [CustomClipper]. The
/// custom object will listen to this animation and update the clip whenever the
/// animation ticks, avoiding both the build and layout phases of the pipeline.
///
/// See also:
///
///  * [ClipRect], which can be customized with a [CustomClipper<Rect>].
///  * [ClipRRect], which can be customized with a [CustomClipper<RRect>].
///  * [ClipOval], which can be customized with a [CustomClipper<Rect>].
///  * [ClipPath], which can be customized with a [CustomClipper<Path>].
///  * [ShapeBorderClipper], for specifying a clip path using a [ShapeBorder].¿ ´‹¿ ´‹¿ ´‹¿ ´ˆÄ¥¿ ¨s ¿ ¨s¿ ¨Ä p/// Creates a custom clipper.
///
/// The clipper will update its clip whenever [reclip] notifies its listeners.¿ ¨Ç¿ ¨è¿ ¨é  ¿ ¨°¿ ¨ô¿ ¨£¿ ¨Æ¿ ¨¿¿ ¨¿   ¿ ¨ÃÅU¿ ≠‹¿ ≠‹ÄÙ/// Register a closure to be notified when it is time to reclip.
///
/// The [CustomClipper] implementation merely forwards to the same method on
/// the [Listenable] provided to the constructor in the `reclip` argument, if
/// it was not null. ¿ ≠Ë¿ ≠ˆ¿ ≠ı  ¿ ≠À¿ ≠Ã¿ Æ%Åô¿ Øs¿ ØsÅ0/// Remove a previously registered closure from the list of closures that the
/// object notifies when it is time to reclip.
///
/// The [CustomClipper] implementation merely forwards to the same method on
/// the [Listenable] provided to the constructor in the `reclip` argument, if
/// it was not null. ¿ ØÇ¿ Øê¿ Øè  ¿ Øb¿ Øc¿ Ø¬ÄÑ¿ ∞3¿ ∞3j/// Returns a description of the clip given that the render object being
/// clipped is of the given size. ¿ ∞;	¿ ∞A¿ ∞@   ¿ ∞JÇ¿ ≤&¿ ≤&Å∆/// Returns an approximation of the clip returned by [getClip], as
/// an axis-aligned Rect. This is used by the semantics layer to
/// determine whether widgets should be excluded.
///
/// By default, this returns a rectangle that is the same size as
/// the RenderObject. If getClip returns a shape that is roughly the
/// same size as the RenderObject (e.g. it's a rounded rectangle
/// with very small arcs in the corners), then this may be adequate. ¿ ≤=	¿ ≤C¿ ≤B   ¿ ≤bÉO¿ µ}¿ µ}Ç˜/// Called whenever a new instance of the custom clipper delegate class is
/// provided to the clip object, or any time that a new clip object is created
/// with a new instance of the custom clipper delegate class (which amounts to
/// the same thing, because the latter is implemented in terms of the former).
///
/// If the new instance represents different information than the old
/// instance, then the method should return true, otherwise it should return
/// false.
///
/// If the method returns false, then the [getClip] call might be optimized
/// away.
///
/// It's possible that the [getClip] method will get called even if
/// [shouldReclip] returns false or if the [shouldReclip] method is never
/// called at all (e.g. if the box changes size). ¿ µä%¿ µ¶¿ µ•   ¿ µµJ¿ µ»¿ µ»   ¿ µµ¿ µ∂ ¿ ∂ÖU¿ ∂P¿ ∂PF/// A [CustomClipper] that clips to the outer path of a [ShapeBorder]. ¿ ∂ÉÅò¿ ∑› ¿ ∑›¿ ∑Ô ÅG/// Creates a [ShapeBorder] clipper.
///
/// The [textDirection] argument must be provided non-null if [shape]
/// has a text direction dependency (for example if it is expressed in terms
/// of "start" and "end" instead of "left" and "right"). It may be null if
/// the border will not need the text direction to paint itself.¿ ∑Ò¿ ∏ ¿ ∑ˇ  ¿ ∏¿ ∏¿ ∏   ¿ ∏V¿ ∏p¿ ∏p</// The shape border whose outer path this clipper clips to. ¿ ∏zÄ‚¿ πO¿ πOÄ∑/// The text direction to use for getting the outer path for [shape].
///
/// [ShapeBorder]s can depend on the text direction (e.g having a "dent"
/// towards the start of the shape).  ¿ πaÄØ¿ πß¿ πß2/// Returns the outer path of [shape] as the clip. ¿ πØ	¿ πµ¿ π¥  ¿ πñ¿ πó¿ ∫ÅB¿ ∫%¿ ∫%  ¿ ∫2¿ ∫G¿ ∫F  ¿ ∫¿ ∫ ¿ ªZå;¿ ªi¿ ªi ¿ ª{¿ ª{¿ ª{¿ ªôÄ≈¿ ªô ¿ ªô¿ ª™  ¿ ª±¿ ªΩ¿ ªº  ¿ ª«¿ ª⁄¿ ªŸ  ¿ ªÊ"¿ ªÏ¿ ªÎ  ¿ ª˙¿ ª˛¿ ªˇ¿ º¿ º¿ º¿ º:¿ º,¿ º<¿ ºQ¿ ºV¿ º\¿ ºW¿ ºÕ¿ ºﬂ¿ ºﬂ  ¿ ¿t¿ ¿w¿ ¿w  ¿ ¡.¿ ¡3¿ ¡3  ¿ √Ü¿ √ç¿ √ç  ¿ √ú¿ √©¿ √©  ¿ ºbh¿ º∂¿ º∂;/// If non-null, determines which clip to use on the child.   ¿ ºÎÇ)¿ ºÔ¿ ºÔ  ¿ º˜¿ Ω
¿ Ω	   ¿ ¿^¿ ¿d¿ ¿d    ¿ ¿Å'¿ ¿ä¿ ¿ä    ¿ ¿´¿ ¿Ø¿ ¿Ø  ¿ ¿º
¿ ¿¬¿ ¿¡   ¿ øv¿ ø)¿ ø)  ¿ ø0¿ ø?¿ ø>  ¿ ø¿ ø¿ øía¿ ø£¿ ø£   ¿ øí¿ øì¿ ø˜c¿ ø¸¿ ø¸    ¿ ¡EÄß¿ ¡V¿ ¡V   ¿ ¡E¿ ¡F¿ ¡O¿ ¡ı¿ ¡ı    ¿ ¬CÅ?¿ ¬U¿ ¬U  ¿ ¬r¿ ¬Ä¿ ¬  ¿ ¬C¿ ¬D¿ √∑Éq¿ √»¿ √»  ¿ √◊¿ √Ë¿ √Á  ¿ √¿ √¯¿ √˜  ¿ √∑¿ √∏¿ «,g¿ «=¿ «=   ¿ «,¿ «- ¿ «óáy¿ »}¿ »}Äﬂ/// Clips its child using a rectangle.
///
/// By default, [RenderClipRect] prevents its child from painting outside its
/// bounds, but the size and location of the clip rect can be customized using a
/// custom [clipper]. ¿ »∞Å¿ …Ñ ¿ …Ñ¿ …í Ä«/// Creates a rectangular clip.
///
/// If [clipper] is null, the clip will match the layout size and position of
/// the child.
///
/// If [clipBehavior] is [Clip.none], no clipping will be applied.¿ …î¿ …õ¿ …ö  ¿ …°¿ …®¿ …ß  ¿ …∞¿ …∑¿ …∂    ¿ ……8¿ …ﬁ¿ …ﬁ   ¿ ……¿ … ¿  Å#¿  ¿    ¿  ¿  0¿  /  ¿  8¿  I¿  H  ¿  ¿  ¿ À,Åˆ¿ À=¿ À=  ¿ ÀC¿ ÀT¿ ÀS  ¿ À\¿ Àd¿ Àc  ¿ À,¿ À-¿ Õ&ÅË¿ Õ7¿ Õ7  ¿ ÕF¿ ÕW¿ ÕV  ¿ Õ_¿ Õg¿ Õf  ¿ Õ&¿ Õ' ¿ œã·¿ œˇ¿ œˇÄÊ/// Clips its child using a rounded rectangle.
///
/// By default, [RenderClipRRect] uses its own bounds as the base rectangle for
/// the clip, but the size and location of the clip can be customized using a
/// custom [clipper]. ¿ –4Ç#¿ —a ¿ —a¿ —p Å/// Creates a rounded-rectangular clip.
///
/// The [borderRadius] defaults to [BorderRadius.zero], i.e. a rectangle with
/// right-angled corners.
///
/// If [clipper] is non-null, then [borderRadius] is ignored.
///
/// If [clipBehavior] is [Clip.none], no clipping will be applied.¿ —w¿ —~¿ —}  ¿ —à5¿ —û¿ —ù  ¿ —√¿ — ¿ —…  ¿ —÷¿ —›¿ —‹  ¿ —Ó¿ —˛¿ —˝  	¿ —¨¿ —∏¿ —π¿ “!¿ “¿ “#¿ “G¿ “8¿ “I¿ ”m"¿ ”Ç¿ ”Ç  ¿ ‘•¿ ‘¥¿ ‘¥  ¿ “[Å¿ ”L¿ ”LÄÀ/// The border radius of the rounded corners.
///
/// Values are clamped so that horizontal and vertical radii sums do not
/// exceed width/height.
///
/// This value is ignored if [clipper] is non-null.   ¿ ”ìÄô¿ ”ó¿ ”ó  ¿ ”§¿ ”∫¿ ”π   ¿ ‘0r¿ ‘Ç¿ ‘Ç</// The text direction with which to resolve [borderRadius].   ¿ ‘∆Äñ¿ ‘ ¿ ‘   ¿ ‘ÿ¿ ‘Ë¿ ‘Á   ¿ ’`g¿ ’v¿ ’v   ¿ ’`¿ ’a¿ ’ÀÅ#¿ ’‹¿ ’‹  ¿ ’‰¿ ’ˆ¿ ’ı  ¿ ’˛¿ ÷¿ ÷  ¿ ’À¿ ’Ã¿ ÷ÚÇ¿ ◊¿ ◊  ¿ ◊	¿ ◊¿ ◊  ¿ ◊"¿ ◊*¿ ◊)  ¿ ÷Ú¿ ÷Û¿ Ÿ
ÅÁ¿ Ÿ¿ Ÿ  ¿ Ÿ*¿ Ÿ;¿ Ÿ:  ¿ ŸC¿ ŸK¿ ŸJ  ¿ Ÿ
¿ Ÿ ¿ ⁄ıä<¿ ‹¿ ‹Å/// Clips its child using an oval.
///
/// By default, inscribes an axis-aligned oval into its layout dimensions and
/// prevents its child from painting outside that oval, but the size and
/// location of the clip oval can be customized using a custom [clipper]. ¿ ‹6Å"¿ › ¿ ›¿ ›% Ä‘/// Creates an oval-shaped clip.
///
/// If [clipper] is null, the oval will be inscribed into the layout size and
/// position of the child.
///
/// If [clipBehavior] is [Clip.none], no clipping will be applied.¿ ›'¿ ›.¿ ›-  ¿ ›4¿ ›;¿ ›:  ¿ ›C¿ ›J¿ ›I   ¿ ›\¿ ›b¿ ›b  ¿ ›q¿ ›{¿ ›{  ¿ ﬁ;8¿ ﬁP¿ ﬁP   ¿ ﬁ;¿ ﬁ<¿ ›ãÄ¨¿ ›ê¿ ›ê  ¿ ›ù	¿ ›£¿ ›¢   ¿ ﬁwÇG¿ ﬁà¿ ﬁà  ¿ ﬁê¿ ﬁ¢¿ ﬁ°  ¿ ﬁ™¿ ﬁª¿ ﬁ∫  ¿ ﬁw¿ ﬁx¿ ‡¬Ç¿ ‡”¿ ‡”  ¿ ‡Ÿ¿ ‡Í¿ ‡È  ¿ ‡Ú¿ ‡˙¿ ‡˘  ¿ ‡¬¿ ‡√¿ ‚‹ÇS¿ ‚Ì¿ ‚Ì  ¿ ‚¸¿ „¿ „  ¿ „¿ „¿ „  ¿ ‚‹¿ ‚› ¿ Â3à¡¿ Á¿ ÁÅÃ/// Clips its child using a path.
///
/// Takes a delegate whose primary method returns a path that should
/// be used to prevent the child from painting outside the path.
///
/// Clipping to a path is expensive. Certain shapes have more
/// optimized render objects:
///
///  * To clip to a rectangle, consider [RenderClipRect].
///  * To clip to an oval or circle, consider [RenderClipOval].
///  * To clip to a rounded rectangle, consider [RenderClipRRect]. ¿ Á9ÅÆ¿ Ë¶ ¿ Ë¶¿ Ë¥ Å\/// Creates a path clip.
///
/// If [clipper] is null, the clip will be a rectangle that matches the layout
/// size and location of the child. However, rather than use this default,
/// consider using a [RenderClipRect], which can achieve the same effect more
/// efficiently.
///
/// If [clipBehavior] is [Clip.none], no clipping will be applied.¿ Ë∂¿ ËΩ¿ Ëº  ¿ Ë√¿ Ë ¿ Ë…  ¿ Ë“¿ ËŸ¿ Ëÿ    ¿ ËÎI¿ È ¿ È    ¿ ËÎ¿ ËÏ¿ È8Å#¿ ÈI¿ ÈI  ¿ ÈQ¿ Èc¿ Èb  ¿ Èk¿ È|¿ È{  ¿ È8¿ È9¿ Í_Ç¿ Íp¿ Íp  ¿ Ív¿ Íá¿ ÍÜ  ¿ Íè¿ Íó¿ Íñ  ¿ Í_¿ Í`¿ ÏwÅ{¿ Ïà¿ Ïà  ¿ Ïó¿ Ï®¿ Ïß  ¿ Ï∞¿ Ï∏¿ Ï∑  ¿ Ïw¿ Ïx ¿ ÌˆàÅ¿ Ó‘¿ Ó‘ÄŒ/// A physical model layer casts a shadow based on its [elevation].
///
/// The concrete implementations [RenderPhysicalModel] and [RenderPhysicalShape]
/// determine the actual shape of the physical model.¿ ÓÌ¿ ÓÌ¿ ÓÌ¿ ÔÅt¿ ÔG ¿ ÔG¿ Ô_ 3/// The [elevation] parameter must be non-negative.¿ Ôf¿ Ôv¿ Ôu  ¿ ÔÄ¿ Ôë¿ Ôê  ¿ Ôü¿ ÔØ¿ ÔÆ  ¿ Ôπ¿ Ô…¿ Ô»  ¿ ÔŸ¿ Ô‡¿ Ôﬂ  ¿ Ô˝¿ ¿   ¿ ÔÓ¿ ÔÚ¿ ÔÛ¿ ¿ ¿ *¿ $¿ ¿ '¿ ?¿ 4¿ A¿ Z¿ S¿ \¿ w¿ j¿ y¿ Òß¿ ÒÆ¿ ÒÆ  ¿ Û>¿ ÛD¿ ÛD  ¿ Ù¿ Ù¿ Ù  ¿ âÅ¿ Òå¿ ÒåÄÎ/// The z-coordinate relative to the parent at which to place this material.
///
/// The value is non-negative.
///
/// If [debugDisableShadows] is set, this value is ignored and no shadow is
/// drawn (an outline is rendered instead).   ¿ ÒºÅ=¿ Ò¿¿ Ò¿  ¿ Ò ¿ Ò“¿ Ò—   ¿ Ú˝>¿ Û¿ Û/// The shadow color.   ¿ ÛTÄÜ¿ ÛX¿ ÛX  ¿ Ûd¿ Ûk¿ Ûj   ¿ Ûﬁ6¿ Ù¿ Ù/// The background color.   ¿ Ù't¿ Ù+¿ Ù+  ¿ Ù1¿ Ù8¿ Ù7   ¿ ÙüÄ®¿ Ù∞¿ Ù∞  ¿ Ùœ¿ ÙÁ¿ ÙÊ  ¿ Ùü¿ Ù†¿ ıKÅ*¿ ı\¿ ı\  ¿ ıp'¿ ıç¿ ıå  ¿ ıK¿ ıL ¿ ˆyêÇ¿ ˜¿ ˜Äõ/// Creates a physical model layer that clips its child to a rounded
/// rectangle.
///
/// A physical model layer casts a shadow based on its [elevation]. ¿ ˜[Å’¿ ˜Ê ¿ ˜Ê¿ ˜˘ ÄÄ/// Creates a rounded-rectangular clip.
///
/// The [color] is required.
///
/// The [elevation] parameter must be non-negative.¿ ¯ ¿ ¯¿ ¯  ¿ ¯#¿ ¯¿ ¯  ¿ ¯:¿ ¯A¿ ¯@  ¿ ¯R¿ ¯a¿ ¯`  ¿ ¯r¿ ¯y¿ ¯x  ¿ ¯ç¿ ¯ù¿ ¯ú  ¿ ¯ß+¿ ¯Æ¿ ¯≠  ¿ ¯"¿ ¯*¿ ¯+¿ ¯Ñ¿ ¯ª¿ ¯¡¿ ¯∆¿ ¯—¿ ¯«¿ ¯€¿ ¯·¿ ¯Ú¿ ¯Ï¿ ¯‚¿ ¯Ô¿ ˘¿ ¯¸¿ ˘¿ ˘!¿ ˘¿ ˘#¿ ˘ﬂ¿ ˘Ë¿ ˘Ë  ¿ ˚Õ¿ ˚€¿ ˚€  ¿ ˘4Ä®¿ ˘Ã¿ ˘ÃÄÇ/// The shape of the layer.
///
/// Defaults to [BoxShape.rectangle]. The [borderRadius] affects the corners
/// of the rectangle.   ¿ ˘Úw¿ ˘ˆ¿ ˘ˆ  ¿ ˘¸¿ ˙¿ ˙   ¿ ˙mÅ]¿ ˚¨¿ ˚¨Å/// The border radius of the rounded corners.
///
/// Values are clamped so that horizontal and vertical radii sums do not
/// exceed width/height.
///
/// This property is ignored if the [shape] is not [BoxShape.rectangle].
///
/// The value null is treated like [BorderRadius.zero].   ¿ ˚ÏÄë¿ ˚¿ ˚  ¿ ˚˝¿ ¸¿ ¸   ¿ ¸ÅÅ,¿ ¸ó¿ ¸ó   ¿ ¸Å¿ ¸Ç¿ ˝±Å#¿ ˝¬¿ ˝¬  ¿ ˝ ¿ ˝‹¿ ˝€  ¿ ˝‰¿ ˝ı¿ ˝Ù  ¿ ˝±¿ ˝≤¿ ˛ÿá¿ ˛È¿ ˛È  ¿ ˛Ô¿ ˇ ¿ ˛ˇ  ¿ ˇ¿ ˇ¿ ˇ  ¿ ˛ÿ¿ ˛Ÿ¿‡Å¿Ò¿Ò  ¿'¿"¿!  ¿‡¿· ¿˝ãﬁ¿¿Ä˛/// Creates a physical shape layer that clips its child to a [Path].
///
/// A physical shape layer casts a shadow based on its [elevation].
///
/// See also:
///
///  * [RenderPhysicalModel], which is optimized for rounded rectangles and
///    circles. ¿AÅó¿„ ¿„¿ˆ Äó/// Creates an arbitrary shape clip.
///
/// The [color] and [clipper] parameters are required.
///
/// The [elevation] parameter must be non-negative.¿˝¿	¿	  ¿	*¿	2¿	1  ¿	>¿	E¿	D  ¿	V¿	]¿	\  ¿	q¿	Å¿	Ä  ¿	ã+¿	í¿	ë  ¿	h¿	ü¿	•¿	™¿	µ¿	´¿	ø¿	≈¿	÷¿	–¿	∆¿	” ¿	‹I¿	Ò¿	Ò   ¿	‹¿	›¿
)Å#¿
:¿
:  ¿
B¿
T¿
S  ¿
\¿
m¿
l  ¿
)¿
*¿PÜ≥¿a¿a  ¿g¿x¿w  ¿Ä¿à¿á  ¿P¿Q¿Ä“¿¿  ¿,'¿I¿H  ¿¿ ¿©í¨¿Ú¿ÚB/// Paints a [Decoration] either before or after its child paints. ¿ Ç|¿R ¿R¿d Å#/// Creates a decorated box.
///
/// The [decoration], [position], and [configuration] arguments must not be
/// null. By default the decoration paints behind the child.
///
/// The [ImageConfiguration] will be passed to the decoration (with the size
/// filled in) to let it resolve images.¿k¿Ä¿  ¿è;¿£¿¢  ¿–;¿‰¿„  ¿¿¿  ¿≠¿ø¿¿¿Û¿¿¿6¿*¿8¿U¿K¿W¿w¿h¿y¿è¿î¿ö¿ï¿†¿¨¿¨  ¿-¿8¿8  ¿}¿ê¿ê  ¿û!¿±¿±  ¿πq¿¿A/// What decoration to paint.
///
/// Commonly a [BoxDecoration].   ¿GÄ∑¿K¿K  ¿V¿b¿a   ¿x¿d¿dH/// Whether to paint the box decoration behind or in front of the child.   ¿ùÄã¿°¿°  ¿™¿æ¿Ω   ¿,Åo¿{¿{Å+/// The settings to pass to the decoration when painting, so that it can
/// resolve images appropriately. See [ImageProvider.resolve] and
/// [BoxPainter.paint].
///
/// The [ImageConfiguration.textDirection] field is also used by
/// direction-sensitive [Decoration]s for painting and hit-testing.   ¿√Äö¿«¿«  ¿’¿È¿Ë   ¿aÅÿ¿r¿r   ¿a¿b¿=N¿N¿N   ¿=¿>¿èÄè¿†¿†  ¿¨¿¥¿≥  ¿è¿ê¿"á¿3¿3  ¿9¿J¿I  ¿R¿Z¿Y  ¿"¿#¿%2Å!¿%C¿%C  ¿%W&¿%t¿%s  ¿%2¿%3 ¿&W£ä¿&ï¿&ï7/// Applies a transformation before painting its child. ¿&¿Å·¿&˘ ¿&˘¿' 6/// Creates a render object that transforms its child.¿'¿'!¿'   ¿'/¿'8¿'7  ¿'C¿'W¿'V  ¿'e¿'u¿'t  ¿'á¿'ç¿'å  ¿'™¿'∫¿'π  ¿'Ã¿'ÿ¿'◊  ¿'†¿'Â¿'Í¿'¿'Î¿)Ê¿)Ó¿)Ó  ¿-n¿-Å¿-Å  ¿/@¿/O¿/O  ¿0vÅv¿1€¿1€ÅS/// When set to true, hit tests are performed based on the position of the
/// child as it is painted. When set to false, hit tests are performed
/// ignoring the transformation.
///
/// [applyPaintTransform], and therefore [localToGlobal] and [globalToLocal],
/// always honor the transformation, regardless of the value of this property. ¿1Ò¿1˙¿1˙  ¿4Î¿4˙¿4˙  ¿(•Å>¿)—¿)—Å/// The origin of the coordinate system (relative to the upper left corner of
/// this render object) in which to apply the matrix.
///
/// Setting an origin is equivalent to conjugating the transform matrix by a
/// translation. This property is provided just for convenience.   ¿)˘Äö¿)˝¿)˝  ¿*¿*¿*   ¿*óÇ‘¿-S¿-SÇé/// The alignment of the origin, relative to the size of the box.
///
/// This is equivalent to setting an origin based on the size of the box.
/// If it is specified at the same time as an offset, both are applied.
///
/// An [AlignmentDirectional.centerStart] value is the same as an [Alignment]
/// whose [Alignment.x] value is `-1.0` if [textDirection] is
/// [TextDirection.ltr], and `1.0` if [textDirection] is [TextDirection.rtl].
/// Similarly [AlignmentDirectional.centerEnd] is the same as an [Alignment]
/// whose [Alignment.x] value is `1.0` if [textDirection] is
/// [TextDirection.ltr], and `-1.0` if [textDirection] is [TextDirection.rtl].   ¿-èÄÆ¿-ì¿-ì  ¿-ù¿-±¿-∞   ¿.AÄ¸¿/¿/Ä¿/// The text direction with which to resolve [alignment].
///
/// This may be changed to null, but only after [alignment] has been changed
/// to a value that does not depend on the direction.   ¿/aÄ∂¿/e¿/e  ¿/s¿/É¿/Ç   ¿0W¿00¿00   ¿0¿0¿2	Ç¿3l¿3lÅ'/// The matrix to transform the child by during painting. The provided value
/// is copied on assignment.
///
/// There is no getter for [transform], because [Matrix4] is mutable, and
/// mutations outside of the control of the render object could not reliably
/// be reflected in the rendering. ¿3v¿3¿3~   ¿4ÄÀ¿4»¿4»Äë/// The filter quality with which to apply the transform as a bitmap operation.
///
/// {@macro flutter.widgets.Transform.optional.FilterQuality}   ¿5Å8¿5¿5  ¿5¿5.¿5-   ¿:»ÇÓ¿:’¿:’    ¿6HÄû¿6~¿6~./// Sets the transform to the identity matrix.   ¿6ÍÄΩ¿72¿72@/// Concatenates a rotation about the x axis into the transform. ¿7:¿7B¿7A   ¿7´ÄΩ¿7Û¿7Û@/// Concatenates a rotation about the y axis into the transform. ¿7˚¿8¿8   ¿8lÄΩ¿8¥¿8¥@/// Concatenates a rotation about the z axis into the transform. ¿8º¿8ƒ¿8√   ¿9-Ä‹¿9t¿9t?/// Concatenates a translation by (x, y, z) into the transform. ¿9~¿9Ü¿9Ö  ¿9â¿9ë¿9ê  ¿9ô¿9°¿9†  ¿9î¿9§¿:Ä∑¿:A¿:A,/// Concatenates a scale into the transform. ¿:G¿:O¿:N  ¿:R	¿:[¿:Z  ¿:]	¿:f¿:e   ¿=∫ÅW¿=À¿=À  ¿=”¿=Â¿=‰  ¿=Ì¿=˛¿=˝  ¿=∫¿=ª¿?Å¨¿?&¿?&  ¿?6¿?H¿?G  ¿?P¿?a¿?`  ¿?¿?¿@≈Ü¿@÷¿@÷  ¿@‹¿@Ì¿@Ï  ¿@ı¿@˝¿@¸  ¿@≈¿@∆¿GH|¿GY¿GY  ¿Gm¿Gx¿Gw  ¿G~¿Gá¿GÜ  ¿GH¿GI¿G»Ç¿GŸ¿GŸ  ¿GÌ&¿H
¿H	  ¿G»¿G… ¿I„ü∞¿J.¿J.D/// Scales and positions its child within itself according to [fit]. ¿JYÅà¿Jç ¿Jç¿Jú 1/// Scales and positions its child within itself.¿J£¿J´¿J™  ¿Jƒ.¿J◊¿J÷  ¿J¯¿K¿K  ¿K¿K&¿K%  ¿K0¿K6¿K5  ¿J∞¿J∂¿J∑¿J‚¿JÎ¿JÏ¿KD¿KH¿KI¿K[¿KV¿K]¿Kt¿Ki¿Kv¿Kó¿Kà¿Kô¿KΩ¿KØ¿Kø¿K‘¿KŸ¿Kﬂ¿K⁄¿L8¿LC¿LC  ¿N?¿NF¿NF  ¿Q¿Q,¿Q,  ¿RÊ¿Rı¿Rı  ¿ZL¿ZR¿ZR  ¿Zh¿Zq¿Zq  ¿[¿[
¿[
 ¿[¿[¿[¿M›_¿N0¿N0E/// How to inscribe the child into the space allocated during layout.   ¿NNÅ¿NR¿NR  ¿NV¿N^¿N]   ¿OlÅ´¿Pˇ¿PˇÅl/// How to align the child within its parent's bounds.
///
/// An alignment of (0.0, 0.0) aligns the child to the top-left corner of its
/// parent's bounds. An alignment of (1.0, 0.5) aligns the child to the middle
/// of the right edge of its parent's bounds.
///
/// If this is set to an [AlignmentDirectional] object, then
/// [textDirection] must not be null.   ¿Q:Ä©¿Q>¿Q>  ¿QH¿Q[¿QZ   ¿QÁÄ¸¿R√¿R√Ä¿/// The text direction with which to resolve [alignment].
///
/// This may be changed to null, but only after [alignment] has been changed
/// to a value that does not depend on the direction.   ¿SÄ≤¿S¿S  ¿S¿S)¿S(   ¿ZÄÄÇ¿Z‰¿Z‰T/// {@macro flutter.material.Material.clipBehavior}
///
/// Defaults to [Clip.none].   ¿['Ä°¿[+¿[+  ¿[8
¿[>¿[=   ¿KÂP¿KÔ¿KÔ    ¿LZU¿L_¿L_    ¿L≥Å&¿L∏¿L∏  ¿L 
¿L“¿L—   ¿SˇÉ2¿T¿T  ¿T.$¿TH¿TG  ¿Sˇ¿T ¿T¿T¿W5É¿WF¿WF   ¿W5¿W6¿[ÃR¿[—¿[—    ¿\"Ñô¿\'¿\'    ¿`øÅ‰¿`œ¿`œ  ¿`Ë¿`˘¿`¯  ¿a¿a	¿a   ¿bßÇW¿b∏¿b∏  ¿bæ¿bœ¿bŒ  ¿b◊¿bﬂ¿bﬁ  ¿bß¿b®¿eÅµ¿e¿e  ¿e#¿e5¿e4  ¿e=¿eN¿eM  ¿e¿e¿fªÄÜ¿fÃ¿fÃ  ¿fÿ¿f„¿f‚  ¿fª¿fº¿gEÄ‹¿gV¿gV  ¿gj¿gu¿gt  ¿g{¿gÑ¿gÉ  ¿gE¿gF¿h%Ål¿h6¿h6  ¿hJ&¿hg¿hf  ¿h%¿h& ¿iïåP¿kT¿kTÅ∏/// Applies a translation transformation before painting its child.
///
/// The translation is expressed as an [Offset] scaled to the child's size. For
/// example, an [Offset] with a `dx` of 0.25 will result in a horizontal
/// translation of one quarter the width of the child.
///
/// Hit tests will only be detected inside the bounds of the
/// [RenderFractionalTranslation], even if the contents are offset such that
/// they overflow. ¿kãÄÛ¿kœ ¿kœ¿kÍ A/// Creates a render object that translates its child's painting.¿kÒ¿l¿l  ¿l¿l¿l  ¿l5¿lA¿l@  ¿l+¿l[¿lN¿l]¿lq¿lv¿l|¿lw¿mÉ¿mä¿mä  ¿o≠Åv¿q¿qÅS/// When set to true, hit tests are performed based on the position of the
/// child as it is painted. When set to false, hit tests are performed
/// ignoring the transformation.
///
/// applyPaintTransform(), and therefore localToGlobal() and globalToLocal(),
/// always honor the transformation, regardless of the value of this property. ¿lÇÄ˛¿md¿mdÄŒ/// The translation to apply to the child, scaled to the child's size.
///
/// For example, an [Offset] with a `dx` of 0.25 will result in a horizontal
/// translation of one quarter the width of the child.   ¿möÄ®¿mû¿mû  ¿m™¿m≤¿m±   ¿nFÅc¿nW¿nW  ¿n_¿nq¿np  ¿ny¿nä¿nâ  ¿nF¿nG¿q(Å⁄¿q9¿q9  ¿qI¿q[¿qZ  ¿qc¿qt¿qs  ¿q(¿q)¿sÅ¿s¿s  ¿s¿s.¿s-  ¿s6¿s>¿s=  ¿s¿s¿tÄ¢¿t-¿t-  ¿tA¿tL¿tK  ¿tR¿t[¿tZ  ¿t¿t¿t¬Å!¿t”¿t”  ¿tÁ&¿u¿u  ¿t¬¿t√ ¿|éò¿~N¿~NÇ-/// Calls callbacks in response to common pointer events.
///
/// It responds to events that can construct gestures, such as when the
/// pointer is pointer is pressed and moved, and then released or canceled.
///
/// It does not respond to events that are exclusive to mouse, such as when the
/// mouse enters and exits a region without pressing any buttons. For
/// these events, use [RenderMouseRegion].
///
/// If it has a child, defers to the child for sizing behavior.
///
/// If it does not have a child, grows to fit the parent-provided constraints. ¿~íÅÕ¿+ ¿+¿@ Äí/// Creates a render object that forwards pointer events to callbacks.
///
/// The [behavior] argument defaults to [HitTestBehavior.deferToChild].¿G¿M¿L  ¿_¿e¿d  ¿w¿}¿|  ¿ç¿ì¿í  ¿¶¿¨¿´  ¿¿¿∆¿≈  ¿‡¿Ê¿Â  ¿Ä¿Ä¿Ä  ¿Ä¿Ä%¿Ä$  ¿Ä9¿Ä@¿Ä?  ¿ÄM¿ÄT¿ÄS   	¿ÄcÄ“¿Å(¿Å(Ä§/// Called when a pointer comes into contact with the screen (for touch
/// pointers), or has its button pressed (for mouse pointers) at this widget's
/// location. ¿Å:w¿Å§¿Å§M/// Called when a pointer that triggered an [onPointerDown] changes position. ¿Å∂Äê¿Ç;¿Ç;h/// Called when a pointer that triggered an [onPointerDown] is no longer in
/// contact with the screen. ¿ÇKw¿Ç¥¿Ç¥K/// Called when a pointer that has not an [onPointerDown] changes position. ¿Ç«Ä´¿Éc¿Éc{/// Called when the input from a pointer that triggered an [onPointerDown] is
/// no longer directed towards this receiver. ¿Éw|¿Éﬁ¿ÉﬁB/// Called when a pan/zoom begins such as from a trackpad gesture. ¿É¯b¿ÑD¿ÑD&/// Called when a pan/zoom is updated. ¿Ñ_Z¿Ñ¶¿Ñ¶$/// Called when a pan/zoom finishes. ¿Ñæg¿Ö¿Ö9/// Called when a pointer signal occurs over this object.  ¿Ö*h¿Ö;¿Ö;  ¿ÖQ¿Öa¿Ö`  ¿Ö*¿Ö+¿ÖñÇ÷¿Öß¿Öß  ¿Ö≥¿Ö¡¿Ö¿  ¿Ö«¿Ö’¿Ö‘  ¿Öñ¿Öó¿àpÇ@¿àÅ¿àÅ  ¿àï&¿à≤¿à±  ¿àp¿àq ¿ä¥îY¿çò¿çòÇ›/// Calls callbacks in response to pointer events that are exclusive to mice.
///
/// It responds to events that are related to hovering, i.e. when the mouse
/// enters, exits (with or without pressing buttons), or moves over a region
/// without pressing buttons.
///
/// It does not respond to common events that construct gestures, such as when
/// the pointer is pressed, moved, then released or canceled. For these events,
/// use [RenderPointerListener].
///
/// If it has a child, it defers to the child for sizing behavior.
///
/// If it does not have a child, it grows to fit the parent-provided constraints.
///
/// See also:
///
///  * [MouseRegion], a widget that listens to hover events using
///    [RenderMouseRegion]. ¿ç˛Çí¿é‰ ¿é‰¿éı Ä›/// Creates a render object that forwards pointer events to callbacks.
///
/// All parameters are optional. By default this method creates an opaque
/// mouse region with no callbacks and cursor being [MouseCursor.defer].¿é¸¿è¿è  ¿è¿è¿è  ¿è ¿è&¿è%  ¿è1&¿è>¿è=  ¿è] ¿èc¿èb  ¿èÉ¿èâ¿èà  ¿èõ¿è¢¿è°  ¿è¨9¿èæ¿èΩ  ¿èF¿èQ¿èR¿èy¿èë¿èœ¿èﬁ¿èﬂ¿èˆ¿èÓ¿è¯¿ê¿ê¿ê¿êD¿ê<¿êF¿êU¿êZ¿êé¿êc¿ê[¿êu¿êe¿êx¿êá¿êà¿îÕ¿î“¿î“  ¿óW.¿ó~¿ó~ ¿óW¿óX¿óäÄŒ¿òQ¿òQÄ£/// Triggered when a pointer has moved onto or within the region without
/// buttons pressed.
///
/// This callback is not triggered by the movement of the object. ¿ò],¿òÉ¿òÉ ¿ò]¿ò^¿òø¿òÀ¿òÀ  ¿ö¿ö¿ö  ¿ëÓÇ‹¿î∏¿î∏Ç§/// Whether this object should prevent [RenderMouseRegion]s visually behind it
/// from detecting the pointer, thus affecting how their [onHover], [onEnter],
/// and [onExit] behave.
///
/// If [opaque] is true, this object will absorb the mouse pointer and
/// prevent this object's siblings (or any other objects that are not
/// ancestors or descendants of this object) from detecting the mouse
/// pointer even when the pointer is within their areas.
///
/// If [opaque] is false, this object will not affect how [RenderMouseRegion]s
/// behind it behave, which will detect the mouse pointer as long as the
/// pointer is within their areas.
///
/// This defaults to true.   ¿î›Ä∫¿î·¿î·  ¿îË
¿îÓ¿îÌ   ¿ïõÄò¿ñ¿ñ`/// How to behave during hit testing.
///
/// This defaults to [HitTestBehavior.opaque] if null.   ¿ñ6Å¿ñ:¿ñ:  ¿ñJ¿ñ\¿ñ[   ¿òé.¿ò™¿ò™   ¿òé¿òè¿ò÷Äı¿ò⁄¿ò⁄  ¿ò·¿òÓ¿òÌ   ¿ôœC¿ô‰¿ô‰   ¿ôœ¿ô–¿êîÄî¿ê•¿ê•  ¿ê≠¿êø¿êæ  ¿ê«¿êÿ¿ê◊  ¿êî¿êï¿ë,Äæ¿ë=¿ë=  ¿ëI¿ëW¿ëV  ¿ë]¿ëk¿ëj  ¿ë,¿ë-¿ö4m¿öE¿öE  ¿öL¿ö[¿öZ  ¿ö4¿ö5¿ö•Å$¿ö∂¿ö∂   ¿ö•¿ö¶¿õÕh¿õﬁ¿õﬁ  ¿õÙ¿ú¿ú  ¿õÕ¿õŒ¿ú9Ç“¿úJ¿úJ  ¿ú^&¿ú{¿úz  ¿ú9¿ú: ¿ü©ˇ¿•j¿•jÜT/// Creates a separate display list for its child.
///
/// This render object creates a separate display list for its child, which
/// can improve performance if the subtree repaints at different times than
/// the surrounding parts of the tree. Specifically, when the child does not
/// repaint but its parent does, we can re-use the display list we recorded
/// previously. Similarly, when the child repaints but the surround tree does
/// not, we can re-record its display list without re-recording the display list
/// for the surround tree.
///
/// In some cases, it is necessary to place _two_ (or more) repaint boundaries
/// to get a useful effect. Consider, for example, an e-mail application that
/// shows an unread count and a list of e-mails. Whenever a new e-mail comes in,
/// the list would update, but so would the unread count. If only one of these
/// two parts of the application was behind a repaint boundary, the entire
/// application would repaint each time. On the other hand, if both were behind
/// a repaint boundary, a new e-mail would only change those two parts of the
/// application and the rest of the application would not repaint.
///
/// To tell if a particular RenderRepaintBoundary is useful, run your
/// application in debug mode, interacting with it in typical ways, and then
/// call [debugDumpRenderTree]. Each RenderRepaintBoundary will include the
/// ratio of cases where the repaint boundary was useful vs the cases where it
/// was not. These counts can also be inspected programmatically using
/// [debugAsymmetricPaintCount] and [debugSymmetricPaintCount] respectively. ¿•õj¿•Ã ¿•Ã¿•· ./// Creates a repaint boundary around [child].¿•„¿•Ô¿•Ó  ¿•¯¿•˝¿¶¿•˛¿ª«!¿ªÀ¿ªÀ ¿ªÁ¿æ˝"¿ø¿ø ¿ø¿¶	/¿¶¿¶   ¿¶	¿¶
¿π9Çã¿ªé¿ªéÇ6/// The number of times that this render object repainted at the same time as
/// its parent. Repaint boundaries are only useful when the parent and child
/// paint at different times. When both paint at the same time, the repaint
/// boundary is redundant, and may be actually making performance worse.
///
/// Only valid when asserts are enabled. In release builds, always returns
/// zero.
///
/// Can be reset using [debugResetMetrics]. See [debugAsymmetricPaintCount]
/// for the corresponding count of times where only the parent or only the
/// child painted.   ¿ªÌÉ¿æ¬¿æ¬Ç≤/// The number of times that either this render object repainted without the
/// parent being painted, or the parent repainted without this object being
/// painted. When a repaint boundary is used at a seam in the render tree
/// where the parent tends to repaint at entirely different times than the
/// child, it can improve performance by reducing the number of paint
/// operations that have to be recorded each frame.
///
/// Only valid when asserts are enabled. In release builds, always returns
/// zero.
///
/// Can be reset using [debugResetMetrics]. See [debugSymmetricPaintCount] for
/// the corresponding count of times where both the parent and the child
/// painted together.   ¿¶<â<¿Æ´¿Æ´áÁ/// Capture an image of the current state of this render object and its
/// children.
///
/// The returned [ui.Image] has uncompressed raw RGBA bytes in the dimensions
/// of the render object, multiplied by the [pixelRatio].
///
/// To use [toImage], the render object must have gone through the paint phase
/// (i.e. [debugNeedsPaint] must be false).
///
/// The [pixelRatio] describes the scale between the logical pixels and the
/// size of the output image. It is independent of the
/// [dart:ui.FlutterView.devicePixelRatio] for the device, so specifying 1.0
/// (the default) will give you a 1:1 mapping between logical pixels and the
/// output pixels in the image.
///
/// {@tool snippet}
///
/// The following is an example of how to go from a `GlobalKey` on a
/// `RepaintBoundary` to a PNG:
///
/// ```dart
/// class PngHome extends StatefulWidget {
///   const PngHome({super.key});
///
///   @override
///   State<PngHome> createState() => _PngHomeState();
/// }
///
/// class _PngHomeState extends State<PngHome> {
///   GlobalKey globalKey = GlobalKey();
///
///   Future<void> _capturePng() async {
///     final RenderRepaintBoundary boundary = globalKey.currentContext!.findRenderObject()! as RenderRepaintBoundary;
///     final ui.Image image = await boundary.toImage();
///     final ByteData? byteData = await image.toByteData(format: ui.ImageByteFormat.png);
///     final Uint8List pngBytes = byteData!.buffer.asUint8List();
///     print(pngBytes);
///   }
///
///   @override
///   Widget build(BuildContext context) {
///     return RepaintBoundary(
///       key: globalKey,
///       child: Center(
///         child: TextButton(
///           onPressed: _capturePng,
///           child: const Text('Hello World', textDirection: TextDirection.ltr),
///         ),
///       ),
///     );
///   }
/// }
/// ```
/// {@end-tool}
///
/// See also:
///
///  * [OffsetLayer.toImage] for a similar API at the layer level.
///  * [dart:ui.Scene.toImage] for more information about the image returned. ¿Æ¥¿Æº¿Æª  ¿Æ»¿Ø|âπ¿∏`¿∏`àb/// Capture an image of the current state of this render object and its
/// children synchronously.
///
/// The returned [ui.Image] has uncompressed raw RGBA bytes in the dimensions
/// of the render object, multiplied by the [pixelRatio].
///
/// To use [toImageSync], the render object must have gone through the paint phase
/// (i.e. [debugNeedsPaint] must be false).
///
/// The [pixelRatio] describes the scale between the logical pixels and the
/// size of the output image. It is independent of the
/// [dart:ui.FlutterView.devicePixelRatio] for the device, so specifying 1.0
/// (the default) will give you a 1:1 mapping between logical pixels and the
/// output pixels in the image.
///
/// This API functions like [toImage], except that rasterization begins eagerly
/// on the raster thread and the image is returned before this is completed.
///
/// {@tool snippet}
///
/// The following is an example of how to go from a `GlobalKey` on a
/// `RepaintBoundary` to an image handle:
///
/// ```dart
/// class ImageCaptureHome extends StatefulWidget {
///   const ImageCaptureHome({super.key});
///
///   @override
///   State<ImageCaptureHome> createState() => _ImageCaptureHomeState();
/// }
///
/// class _ImageCaptureHomeState extends State<ImageCaptureHome> {
///   GlobalKey globalKey = GlobalKey();
///
///   void _captureImage() {
///     final RenderRepaintBoundary boundary = globalKey.currentContext!.findRenderObject()! as RenderRepaintBoundary;
///     final ui.Image image = boundary.toImageSync();
///     print('Image dimensions: ${image.width}x${image.height}');
///   }
///
///   @override
///   Widget build(BuildContext context) {
///     return RepaintBoundary(
///       key: globalKey,
///       child: Center(
///         child: TextButton(
///           onPressed: _captureImage,
///           child: const Text('Hello World', textDirection: TextDirection.ltr),
///         ),
///       ),
///     );
///   }
/// }
/// ```
/// {@end-tool}
///
/// See also:
///
///  * [OffsetLayer.toImageSync] for a similar API at the layer level.
///  * [dart:ui.Scene.toImageSync] for more information about the image returned. ¿∏m¿∏u¿∏t  ¿∏Å¿ø$ÅI¿ø‹¿ø‹Ä™/// Resets the [debugSymmetricPaintCount] and [debugAsymmetricPaintCount]
/// counts to zero.
///
/// Only valid when asserts are enabled. Does nothing in release builds.   ¿¿qÅ4¿¿Ç¿¿Ç  ¿¿•¿¿´¿¿™  ¿¿¡¿¿«¿¿∆  ¿¿q¿¿r¿¿ª¿¿÷¿¡©ác¿¡∫¿¡∫  ¿¡Œ&¿¡Î¿¡Í  ¿¡©¿¡™ ¿…çà¿ÀÌ¿ÀÌÇ÷/// A render object that is invisible during hit testing.
///
/// When [ignoring] is true, this render object (and its subtree) is invisible
/// to hit testing. It still consumes space during layout and paints its child
/// as usual. It just cannot be the target of located events, because its render
/// object returns false from [hitTest].
///
/// ## Semantics
///
/// Using this class may also affect how the semantics subtree underneath is
/// collected.
///
/// {@macro flutter.widgets.IgnorePointer.semantics}
///
/// {@macro flutter.widgets.IgnorePointer.ignoringSemantics}
///
/// See also:
///
///  * [RenderAbsorbPointer], which takes the pointer events but prevents any
///    nodes in the subtree from seeing them. ¿ÃÅ¶¿Ã\ ¿Ã\¿Ão =/// Creates a render object that is invisible to hit testing.¿Ãv¿ÃÇ¿ÃÅ  ¿Ãå¿Ãí¿Ãë  ¿Ã¶Ä∫¿ÕP¿ÕO  ¿Ãú¿Ã¶¿Ãß¿Ã±¿ÕC¿Ãπ¿Õ	¿Õs¿Õi¿Õu¿Õô¿ÕÜ¿Õõ¿Õµ¿Õ∫¿Õ¿¿Õª¿œ	¿œ¿œ  ¿—ù¿—£¿—£  ¿Õ∆Å@¿Œ¿ŒÅ/// Whether this render object is ignored during hit testing.
///
/// Regardless of whether this render object is ignored during hit testing, it
/// will still consume space during layout and be visible during painting.
///
/// {@macro flutter.widgets.IgnorePointer.semantics}   ¿œÄ¥¿œ¿œ  ¿œ(
¿œ.¿œ-   ¿œ”Å«¿—r¿—rÄÔ/// Whether the semantics of this render object is ignored when compiling the semantics tree.
///
/// {@macro flutter.widgets.IgnorePointer.ignoringSemantics}
///
/// See [SemanticsNode] for additional information about the semantics tree.  ¿–Õ¿–Œ¿–ÿ¿—d¿–ﬁ¿—,¿—πÄ£¿—Ω¿—Ω  ¿—œ¿—÷¿—’   ¿“`Äñ¿“q¿“q  ¿“y¿“ã¿“ä  ¿“ì¿“§¿“£  ¿“`¿“a¿“˙Ä∂¿”¿”  ¿”%¿”:¿”9  ¿“˙¿“˚¿”¥ÅB¿”≈¿”≈  ¿”‰¿”¸¿”˚  ¿”¥¿”µ¿‘˙Åú¿’¿’  ¿’&¿’<¿’;  ¿‘˙¿‘˚ ¿÷öç∂¿◊W¿◊WÄ∂/// Lays the child out as if it was in the tree, but without painting anything,
/// without making the child available for hit testing, and without taking any
/// room in the parent. ¿◊ÅÄá¿◊™ ¿◊™¿◊∏ &/// Creates an offstage render object.¿◊∫¿◊¿¿◊ø  ¿◊–¿◊‹¿◊€  ¿◊ ¿◊Ô¿◊Â¿◊Ò¿◊˚¿ÿ ¿ÿ¿ÿ¿Ÿ}¿ŸÇ¿ŸÇ  ¿ÿÅn¿Ÿd¿ŸdÅ@/// Whether the child is hidden from the rest of the tree.
///
/// If true, the child is laid out as if it was in the tree, but without
/// painting anything, without making the child available for hit testing, and
/// without taking any room in the parent.
///
/// If false, the child is included in the tree as normal.   ¿ŸèÄî¿Ÿì¿Ÿì  ¿Ÿú
¿Ÿ¢¿Ÿ°   ¿›p/¿›Ö¿›Ö   ¿›p¿›q¿⁄'Äü¿⁄:¿⁄:  ¿⁄S¿⁄[¿⁄Z  ¿⁄'¿⁄(¿⁄ Äü¿⁄›¿⁄›  ¿⁄ˆ¿⁄˛¿⁄˝  ¿⁄ ¿⁄À¿€mÄü¿€Ä¿€Ä  ¿€ö¿€¢¿€°  ¿€m¿€n¿‹Äü¿‹#¿‹#  ¿‹=¿‹E¿‹D  ¿‹¿‹¿‹≥Äπ¿‹«¿‹«  ¿‹Á¿‹ı¿‹Ù  ¿‹≥¿‹¥¿›£Ä≠¿›∑¿›∑  ¿› ¿›⁄¿›Ÿ  ¿›Ê¿›Ù¿›Û  ¿›£¿›§¿ﬁTÄ«¿ﬁr¿ﬁr  ¿ﬁÉ$¿ﬁù¿ﬁú  ¿ﬁT¿ﬁU¿ﬁ`¿ﬁa¿ﬂW¿ﬂ0¿ﬂ0   ¿ﬂ¿ﬂ ¿ﬂzÄå¿ﬂã¿ﬂã   ¿ﬂz¿ﬂ{¿‡
Äñ¿‡¿‡  ¿‡#¿‡5¿‡4  ¿‡=¿‡N¿‡M  ¿‡
¿‡¿‡§k¿‡µ¿‡µ  ¿‡¡¿‡Ã¿‡À  ¿‡§¿‡•¿·Äé¿·$¿·$  ¿·*¿·;¿·:  ¿·C¿·K¿·J  ¿·¿·¿·•Ä£¿·∂¿·∂  ¿·–¿·Â¿·‰  ¿·•¿·¶¿‚LÄ¬¿‚]¿‚]  ¿‚q&¿‚é¿‚ç  ¿‚L¿‚M¿„Å<¿„4¿„4   ¿„¿„ ¿‰Ré)¿Áê¿ÁêÉ7/// A render object that absorbs pointers during hit testing.
///
/// When [absorbing] is true, this render object prevents its subtree from
/// receiving pointer events by terminating hit testing at itself. It still
/// consumes space during layout and paints its child as usual. It just prevents
/// its children from being the target of located events, because its render
/// object returns true from [hitTest].
///
/// ## Semantics
///
/// Using this class may also affect how the semantics subtree underneath is
/// collected.
///
/// {@macro flutter.widgets.AbsorbPointer.semantics}
///
/// {@macro flutter.widgets.AbsorbPointer.ignoringSemantics}
///
/// See also:
///
///  * [RenderIgnorePointer], which has the opposite effect: removing the
///    subtree from considering entirely for the purposes of hit testing. ¿ÁøÅ±¿Ë ¿Ë¿Ë E/// Creates a render object that absorbs pointers during hit testing.¿Ë!¿Ë-¿Ë,  ¿Ë7¿Ë=¿Ë<  ¿ËRÄ∫¿Ë¸¿Ë˚  ¿ËH¿ËR¿ËS¿Ë]¿ËÔ¿Ëe¿Ëµ¿È ¿È¿È"¿ÈG¿È4¿ÈI¿Èc¿Èh¿Èn¿Èi¿ÍÀ¿Í–¿Í–  ¿Ìi¿Ìo¿Ìo  ¿ÈtÅT¿Í∞¿Í∞Å$/// Whether this render object absorbs pointers during hit testing.
///
/// Regardless of whether this render object absorbs pointers during hit
/// testing, it will still consume space during layout and be visible during
/// painting.
///
/// {@macro flutter.widgets.AbsorbPointer.semantics}   ¿ÍﬁÄ∑¿Í‚¿Í‚  ¿ÍÏ
¿ÍÚ¿ÍÒ   ¿ÎôÅÕ¿Ì>¿Ì>ÄÛ/// Whether the semantics of this render object is ignored when compiling the
/// semantics tree.
///
/// {@macro flutter.widgets.AbsorbPointer.ignoringSemantics}
///
/// See [SemanticsNode] for additional information about the semantics tree.  ¿Ïô¿Ïö¿Ï§¿Ì0¿Ï™¿Ï¯¿ÌÖÄ£¿Ìâ¿Ìâ  ¿Ìõ¿Ì¢¿Ì°   ¿Ó,ÄØ¿Ó=¿Ó=  ¿ÓE¿ÓW¿ÓV  ¿Ó_¿Óp¿Óo  ¿Ó,¿Ó-¿ÓﬂÄ∂¿Ó¿Ó  ¿Ô
¿Ô¿Ô  ¿Óﬂ¿Ó‡¿ÔôÅB¿Ô™¿Ô™  ¿Ô…¿Ô·¿Ô‡  ¿Ôô¿Ôö¿ﬂÅö¿¿  ¿Ò&¿Ò!¿Ò   ¿ﬂ¿‡ ¿Ú}Éb¿Û»¿Û»ÅD/// Holds opaque meta data in the render tree.
///
/// Useful for decorating the render tree with information that will be consumed
/// later. For example, you could store information in the render tree that will
/// be used when the user interacts with the render tree but has no visual
/// impact prior to the interaction. ¿ÙÄ«¿Ùè ¿Ùè¿Ùù ÄÉ/// Creates a render object that hold opaque meta data.
///
/// The [behavior] argument defaults to [HitTestBehavior.deferToChild].¿Ùü¿Ù•¿Ù§  ¿ÙÆ¿Ùµ¿Ù¥  ¿Ùæ¿Ù≈¿Ùƒ   ¿Ù–C¿ı¿ı0/// Opaque meta data ignored by the render tree.  ¿ıÄ≈¿ı)¿ı)  ¿ı=&¿ıZ¿ıY  ¿ı¿ı ¿ı·õ¿ˆJ¿ˆJb/// Listens for the specified gestures from the semantics server (e.g.
/// an accessibility tool). ¿ˆñÇ
¿ˆ· ¿ˆ·¿ˆ˛ H/// Creates a render object that listens for specific semantic gestures.¿˜¿˜¿˜  ¿˜¿˜+¿˜*  ¿˜5%¿˜P¿˜O  ¿˜`1¿˜|¿˜{  ¿˜ó/¿˜≥¿˜≤  ¿˜Ã¿˜“¿˜—  ¿˜È¿˜¿˜Ô  ¿˜‡¿¯¿¯ ¿¯	¿¯$¿¯¿¯&¿¯R¿¯:¿¯T¿¯â¿¯s¿¯ã¿˚∂#¿˚Ã¿˚Ã  ¿˝ ¿˝¿˝  ¿˛ú&¿˛∂¿˛∂  ¿ f2¿ Å¿ Å  ¿T0¿o¿o  ¿πÅ2¿ﬂ¿ﬂÅ/// The fraction of the dimension of this render box to use when
/// scrolling. For example, if this is 0.8 and the box is 200 pixels
/// wide, then when a left-scroll action is received from the
/// accessibility system, it will translate into a 160 pixel
/// leftwards drag. 
¿¯§É¿˚ï¿˚ïÇº/// If non-null, the set of actions to allow. Other actions will be omitted,
/// even if their callback is provided.
///
/// For example, if [onTap] is non-null but [validActions] does not contain
/// [SemanticsAction.tap], then the semantic description of this node will
/// not claim to support taps.
///
/// This is normally used to filter the actions made available by
/// [onHorizontalDragUpdate] and [onVerticalDragUpdate]. Normally, these make
/// both the right and left, or up and down, actions available. For example,
/// if [onHorizontalDragUpdate] is set but [validActions] only contains
/// [SemanticsAction.scrollLeft], then the [SemanticsAction.scrollRight]
/// action will be omitted.   ¿˚›Äæ¿˚·¿˚·  ¿˚Ó¿¸¿¸   ¿¸ü^¿¸Ì¿¸Ì3/// Called when the user taps on the render object.   ¿˝ÄÍ¿˝"¿˝"  ¿˝(¿˝=¿˝<   ¿˛Äç¿˛}¿˛}P/// Called when the user presses on the render object for a long period of time.   ¿˛∆Å¿˛ ¿˛   ¿˛÷¿˛Ò¿˛   ¿ˇ“Äë¿ 1¿ 1=/// Called when the user scrolls to the left or to the right.   ¿ úÅ5¿ †¿ †  ¿ ∑ ¿ ”¿ “   ¿’|¿#¿#,/// Called when the user scrolls up or down.   ¿àÅ-¿å¿å  ¿° ¿Ω¿º   ¿É¶¿¿  ¿ ¿8¿7  ¿¿Ò¿öt¿ü¿ü  ¿Æ¿ø¿æ   ¿	Åx¿	¿	    ¿
éÅx¿
ì¿
ì    ¿
Ås¿¿    ¿ÅÅt¿Ü¿Ü    ¿˘Å˚¿
¿
  ¿&¿;¿:  ¿˘¿˙ ¿¯ª¿;¿;</// Add annotations to the [SemanticsNode] for this subtree. ¿qÇÚ¿% ¿%¿? Ä≠/// Creates a render object that attaches a semantic annotation.
///
/// If the [SemanticsProperties.attributedLabel] is not null, the [textDirection] must also not be null.¿F¿R¿Q  ¿\'¿z¿y  ¿â¿è¿é  ¿•¿´¿™  ¿ ¿–¿œ  ¿Ì¿Û¿Ú  ¿¿ ¿  ¿ö¿ø¿‚¿¿@¿5¿B¿h¿T¿j¿ó¿Ö¿ô¿ƒ¿≤¿∆¿Ó¿ﬂ¿¿¿¿¿'¿,¿2¿-¿Í¿˛¿˛  ¿|¿Å¿Å  ¿¿¿  ¿U¿Z¿Z  ¿2¿7¿7  ¿%G"¿%Y¿%Y  ¿%m"¿%¿%  ¿%ì+¿%•¿%•  ¿%¬+¿%‘¿%‘  ¿%Ò!¿&¿&  ¿'À¿'⁄¿'⁄  ¿gÄÄ¿Õ¿ÕK/// All of the [SemanticsProperties] for this [RenderSemanticsAnnotations].   ¿Ä∆¿¿  ¿¿1¿0   ¿◊Å¢¿a¿aÅr/// If 'container' is true, this [RenderObject] will introduce a new
/// node in the semantics tree. Otherwise, the semantics will be
/// merged with the semantics of any ancestors.
///
/// Whether descendants of this [RenderObject] can add their semantic information
/// to the [SemanticsNode] introduced by this configuration is controlled by
/// [explicitChildNodes].   ¿èÄâ¿ì¿ì  ¿ù
¿£¿¢   ¿Ç¿‚¿‚Ç¢/// Whether descendants of this [RenderObject] are allowed to add semantic
/// information to the [SemanticsNode] annotated by this widget.
///
/// When set to false descendants are allowed to annotate [SemanticsNode]s of
/// their parent with the semantic information they want to contribute to the
/// semantic tree.
/// When set to true the only way for descendants to contribute semantic
/// information to the semantic tree is to introduce new explicit
/// [SemanticsNode]s to the tree.
///
/// This setting is often used in combination with
/// [SemanticsConfiguration.isSemanticBoundary] to create semantic boundaries
/// that are either writable or not for children.   ¿+Ä•¿/¿/  ¿B
¿H¿G   ¿‘Å~¿,¿,ÅB/// Whether descendants of this [RenderObject] should have their semantic
/// information ignored.
///
/// When this flag is set to true, all child semantics nodes are ignored.
/// This can be used as a convenience for cases where a child is wrapped in
/// an [ExcludeSemantics] widget and then another [Semantics] widget.   ¿oÄü¿s¿s  ¿Ñ
¿ä¿â   ¿Å¿	¿	Ä„/// Whether to block user interactions for the semantics subtree.
///
/// Setting this true prevents user from activating pointer related
/// [SemanticsAction]s, such as [SemanticsAction.tap] or
/// [SemanticsAction.longPress].   ¿LÄü¿P¿P  ¿a
¿g¿f   ¿&Å±¿'®¿'®Åm/// If non-null, sets the [SemanticsNode.textDirection] semantic to the given
/// value.
///
/// This must not be null if [SemanticsProperties.attributedLabel],
/// [SemanticsProperties.attributedHint],
/// [SemanticsProperties.attributedValue],
/// [SemanticsProperties.attributedIncreasedValue], or
/// [SemanticsProperties.attributedDecreasedValue] are not null.   ¿'ÏÄü¿'¿'  ¿'˛¿(¿(   ¿ÔÅ|¿Ù¿Ù  ¿ ¿ !¿     ¿!oÄØ¿!Å¿!Å  ¿!õ¿!∞¿!Ø   ¿""ÄØ¿"4¿"4  ¿"N¿"c¿"b   ¿"’Ä€¿"Á¿"Á  ¿#
¿#¿#   ¿#¥Ä‡¿#∆¿#∆  ¿#È¿#˛¿#˝   ¿$òÄ´¿$™¿$™  ¿$√¿$ÿ¿$◊   ¿(èÄ´¿(†¿(†  ¿(∫¿(œ¿(Œ  ¿(è¿(ê¿)>õ•¿)O¿)O  ¿)n¿)Ü¿)Ö  ¿)>¿)?¿DÁ7¿DÏ¿DÏ    ¿E"C¿E'¿E'    ¿Ei?¿En¿En    ¿E¨E¿E±¿E±    ¿EıG¿E˙¿E˙    ¿F@A¿FE¿FE    ¿FÖE¿Fä¿Fä    ¿FŒA¿F”¿F”    ¿GA¿G¿G    ¿GX9¿G]¿G]    ¿Gï7¿Gö¿Gö    ¿G–;¿G’¿G’    ¿HÄå¿H¿H  ¿H9¿H?¿H>   ¿HüÄé¿H§¿H§  ¿H ¿H–¿Hœ   ¿I1ÄÇ¿I6¿I6  ¿IV¿I\¿I[   ¿I∑ÄÑ¿Iº¿Iº  ¿I›¿I„¿I‚   ¿J?i¿JD¿JD  ¿JY¿Jh¿Jg   ¿J¨N¿J±¿J±  ¿J¡¿J…¿J»   ¿J˛c¿K¿K    ¿Kec¿Kj¿Kj    ¿KÃ;¿K—¿K—     ¿LÑ„¿M¿MÄÒ/// Causes the semantics of all earlier render objects below the same semantic
/// boundary to be dropped.
///
/// This is useful in a stack where an opaque mask should prevent interactions
/// with the render objects painted below the mask. ¿M3Ä ¿Mè ¿Mè¿M£ W/// Create a render object that blocks semantics for nodes below it in paint
/// order.¿M•¿M±¿M∞  ¿M∑¿MΩ¿Mº  ¿M«¿Mﬁ¿M‘¿M‡¿M¿Mı¿M˚¿Mˆ¿N¿¿N≈¿N≈  ¿NÄº¿Nß¿NßÄò/// Whether this render object is blocking semantics of previously painted
/// [RenderObject]s below a common semantics boundary from the semantic tree.   ¿N“Äá¿N÷¿N÷  ¿Nﬂ
¿NÂ¿N‰   ¿O]Ä…¿On¿On  ¿Oç¿O•¿O§  ¿O]¿O^¿P*Ä¬¿P;¿P;  ¿PO&¿Pl¿Pk  ¿P*¿P+ ¿PÉ¿RT¿RTÅ]/// Causes the semantics of all descendants to be merged into this
/// node such that the entire subtree becomes a single leaf in the
/// semantics tree.
///
/// Useful for combining the semantics of multiple render objects that
/// form part of a single conceptual widget, e.g. a checkbox, a label,
/// and the gesture detector that goes with them. ¿RÑÄÜ¿R“ ¿R“¿RÊ K/// Creates a render object that merges the semantics from its descendants.¿RË¿RÙ¿RÛ  ¿R˝¿S¿S¿S  ¿SÄ„¿S¿S  ¿S>¿SV¿SU  ¿S¿S ¿SıÑó¿U"¿U"Å&/// Excludes this subtree from the semantic tree.
///
/// When [excluding] is true, this render object (and its subtree) is excluded
/// from the semantic tree.
///
/// Useful e.g. for hiding text that is redundant with other text next
/// to it (e.g. text included only for the visual effect). ¿UTÄº¿Uù ¿Uù¿U≥ F/// Creates a render object that ignores the semantics of its subtree.¿Uµ¿U¡¿U¿  ¿U«¿UÕ¿UÃ  ¿Uÿ¿U¿UÂ¿UÚ¿V¿V¿V¿V	¿V}¿VÇ¿VÇ  ¿Vf¿Vb¿VbB/// Whether this render object is excluded from the semantic tree.   ¿VêÄä¿Vî¿Vî  ¿Vû
¿V§¿V£   ¿WÄ§¿W/¿W/  ¿WI¿W^¿W]  ¿W¿W¿W∆Äƒ¿W◊¿W◊  ¿WÎ&¿X¿X  ¿W∆¿W« ¿XéÑ∏¿Z¿ZÅà/// A render objects that annotates semantics with an index.
///
/// Certain widgets will automatically provide a child index for building
/// semantics. For example, the [ScrollView] uses the index of the first
/// visible child semantics node to determine the
/// [SemanticsConfiguration.scrollIndex].
///
/// See also:
///
///  * [CustomScrollView], for an explanation of scroll semantics. ¿ZOÄÆ¿Zü ¿Zü¿Zµ M/// Creates a render object that annotates the child semantics with an index.¿Z∑¿Z√¿Z¬  ¿Z…¿Z◊¿Z÷  ¿ZÁ¿Z‡¿ZÈ¿Z¿Zı¿Z˚¿Zˆ¿[O
¿[S¿[S  ¿[K¿[<¿[<0/// The index used to annotated child semantics.   ¿[]|¿[a¿[a  ¿[g	¿[l¿[k   ¿[›Ä®¿[Ó¿[Ó  ¿\¿\%¿\$  ¿[›¿[ﬁ¿\âÄª¿\ö¿\ö  ¿\Æ&¿\À¿\   ¿\â¿\ä ¿]Há«¿^¿^Ä»/// Provides an anchor for a [RenderFollowerLayer].
///
/// See also:
///
///  * [CompositedTransformTarget], the corresponding widget.
///  * [LeaderLayer], the layer that this render object creates. ¿^DÄï¿^} ¿^}¿^é 6/// Creates a render object that uses a [LeaderLayer].¿^ê¿^§¿^£  ¿^©¿^µ¿^¥  ¿^ƒ¿^æ¿^∆¿^Ã¿^—¿^◊¿^“¿_Ÿ¿_„¿_„  ¿aÙ¿a˙¿a˙  ¿^›Ä˘¿_»¿_»Ä“/// The link object that connects this [RenderLeaderLayer] with one or more
/// [RenderFollowerLayer]s.
///
/// The object must not be associated with another [RenderLeaderLayer] that is
/// also being painted.   ¿_ÏÄÓ¿_¿_  ¿_ı¿` ¿_ˇ   ¿`ﬁ4¿`Û¿`Û   ¿`ﬁ¿`ﬂ¿b}¿b#¿b#   ¿b¿b¿bìÅ∑¿b§¿b§  ¿b™¿bª¿b∫  ¿b√¿bÀ¿b   ¿bì¿bî¿dNÄø¿d_¿d_  ¿ds&¿dê¿dè  ¿dN¿dO ¿eú©¿g5¿g5Ç/// Transform the child so that its origin is [offset] from the origin of the
/// [RenderLeaderLayer] with the same [LayerLink].
///
/// The [RenderLeaderLayer] in question must be earlier in the paint order.
///
/// Hit testing on descendants of this render object will only work if the
/// target position is within the box that this render object's parent considers
/// to be hittable.
///
/// See also:
///
///  * [CompositedTransformFollower], the corresponding widget.
///  * [FollowerLayer], the layer that this render object creates. ¿gdÅÊ¿gü ¿gü¿g≤ 8/// Creates a render object that uses a [FollowerLayer].¿gπ¿gÕ¿gÃ  ¿g÷¿g‹¿g€  ¿g¯¿h ¿gˇ  ¿h*¿h$¿h#  ¿hI,¿hT¿hS  ¿h{¿há¿hÜ  ¿gÓ¿h¿h¿h¿h2¿h;¿h<¿hd¿hm¿hn¿hö¿hî¿hú¿hª¿h©¿hΩ¿hﬁ¿h÷¿h‡¿h˝¿hÔ¿hˇ¿i$¿i¿i&¿i=¿iB¿iH¿iC¿iÈ¿iÛ¿iÛ  ¿lù¿l¢¿l¢  ¿mÁ¿mÓ¿mÓ  ¿qk¿qu¿qu  ¿sF¿sP¿sP  ¿iNÄò¿iÿ¿iÿw/// The link object that connects this [RenderFollowerLayer] with a
/// [RenderLeaderLayer] earlier in the paint order.   ¿i¸v¿j ¿j   ¿j¿j¿j   ¿jvÇ$¿lt¿ltÅ‚/// Whether to show the render object's contents when there is no
/// corresponding [RenderLeaderLayer] with the same [link].
///
/// When the render object is linked, the child is positioned such that it has
/// the same global position as the linked [RenderLeaderLayer].
///
/// When the render object is not linked, then: if [showWhenUnlinked] is true,
/// the child is visible and not repositioned; if it is false, then child is
/// hidden, and its hit testing is also disabled.   ¿l∑Äï¿lª¿lª  ¿lÃ
¿l“¿l—   ¿mPÄî¿m“¿m“r/// The offset to apply to the origin of the linked [RenderLeaderLayer] to
/// obtain this render object's origin.   ¿m˘y¿m˝¿m˝  ¿n¿n¿n   ¿nvÇÚ¿qJ¿qJÇ©/// The anchor point on the linked [RenderLeaderLayer] that [followerAnchor]
/// will line up with.
///
/// {@template flutter.rendering.RenderFollowerLayer.leaderAnchor}
/// For example, when [leaderAnchor] and [followerAnchor] are both
/// [Alignment.topLeft], this [RenderFollowerLayer] will be top left aligned
/// with the linked [RenderLeaderLayer]. When [leaderAnchor] is
/// [Alignment.bottomLeft] and [followerAnchor] is [Alignment.topLeft], this
/// [RenderFollowerLayer] will be left aligned with the linked
/// [RenderLeaderLayer], and its top edge will line up with the
/// [RenderLeaderLayer]'s bottom edge.
/// {@endtemplate}
///
/// Defaults to [Alignment.topLeft].   ¿qÜÄé¿qä¿qä  ¿qó¿q¢¿q°   ¿rÅ+¿s!¿s!ÄÓ/// The anchor point on this [RenderFollowerLayer] that will line up with
/// [followerAnchor] on the linked [RenderLeaderLayer].
///
/// {@macro flutter.rendering.RenderFollowerLayer.leaderAnchor}
///
/// Defaults to [Alignment.topLeft].   ¿scÄî¿sg¿sg  ¿sv¿sÅ¿sÄ   ¿tD4¿tY¿tY   ¿tD¿tE¿t||¿t—¿t—3/// The layer we created when we were last painted.  ¿t≤¿t≥¿s˚E¿t¿t   ¿s˚¿s¸¿t¸Åü¿vD¿vDÅ3/// Return the transform that was used in the last composition phase, if any.
///
/// If the [FollowerLayer] has not yet been created, was never composited, or
/// was unable to determine the transform (see
/// [FollowerLayer.getLastTransform]), this returns the identity matrix (see
/// [Matrix4.identity].   ¿vüÅÍ¿v∞¿v∞  ¿v∏¿v ¿v…  ¿v“¿v„¿v‚  ¿vü¿v†¿xçÅT¿xû¿xû  ¿xÆ¿x¿¿xø  ¿x»¿xŸ¿xÿ  ¿xç¿xé¿yÂÖù¿yˆ¿yˆ  ¿y¸¿z¿z  ¿z¿z¿z  ¿yÂ¿yÊ¿Ü}¿ó¿ó  ¿´¿∂¿µ  ¿º¿≈¿ƒ  ¿Ü¿á¿ÄÅ±¿Ä¿Ä  ¿Ä,&¿ÄI¿ÄH  ¿Ä¿Ä ¿ÅºáK¿Ç∞¿Ç∞ÄÌ/// Render object which inserts an [AnnotatedRegionLayer] into the layer tree.
///
/// See also:
///
///  * [Layer.find], for an example of how this value is retrieved.
///  * [AnnotatedRegionLayer], the layer this render object creates.¿Ç∆¿Ç∆¿Ç∆¿ÇÛÅ‡¿Ñ ¿Ñ¿Ñ Å/// Creates a new [RenderAnnotatedRegion] to insert [value] into the
/// layer tree.
///
/// If [sized] is true, the layer is provided with the size of this render
/// object to clip the results of [Layer.find].
///
/// Neither [value] nor [sized] can be null.¿Ñ¿Ñ)¿Ñ(  ¿Ñ/¿Ñ>¿Ñ=  ¿ÑD¿ÑP¿ÑO  ¿Ñd¿Ñ]¿Ñf¿Ñz¿Ñs¿Ñ|¿Ññ¿Ñâ¿Ñò¿Ñ£¿Ñª¿Ñ§¿Ñ∏¿Ñ∫¿Ñπ¿Ñº¿ÑΩ¿Ñ∆¿ÑÀ¿Ñ—¿ÑÃ¿Ö)¿Ö+¿Ö+  ¿Ü#¿Ü(¿Ü(  ¿Ü™7¿Ü’¿Ü’  ¿ÜÊ4¿Ü˝¿Ü˝ ¿ÜÊ¿ÜÁ¿á¿Ñ◊O¿Ö¿Ö6/// A value which can be retrieved using [Layer.find].   ¿Ö5z¿Ö9¿Ö9  ¿Ö?
¿ÖB¿ÖA   ¿Ö≥m¿Ü¿ÜQ/// Whether the render object will pass its [size] to the [AnnotatedRegionLayer].   ¿Ü2t¿Ü6¿Ü6  ¿Ü<
¿ÜB¿ÜA   ¿áÅé¿á0¿á0  ¿á6¿áG¿áF  ¿áO¿áW¿áV  ¿á¿á ¿à±T¿à¬¿à¬   ¿à±¿à≤  ëˆÇ0íí#/// How to behave during hit tests.  í3ÄñíΩíΩÄÖ/// Targets that defer to their children receive events within their bounds
/// only if one of their children is hit by the hit test. íŒÄΩìÖìÖÄ∞/// Opaque targets can be hit by hit tests, causing them to both receive
/// events within their bounds and prevent targets visually behind them from
/// also receiving events. ìêÄìîîÄÉ/// Translucent targets both receive events within their bounds and permit
/// targets visually behind them to also receive events.    ¿›Ä ¿¿$/// Where to paint a box decoration.  ¿>¿R¿R1/// Paint the box decoration behind the children. ¿aC¿ö¿ö6/// Paint the box decoration in front of the children.         	¿ í‹Äø¿ ìm¿ ìmÄà/// Signature for a function that creates a [Shader] for a given [Rect].
///
/// Used by [RenderShaderMask] and the [ShaderMask] widget.  ¿ ìé¿ ìî¿ ìì   ¿uÁÄª¿va¿vaq/// Signature for listening to [PointerDownEvent] events.
///
/// Used by [Listener] and [RenderPointerListener].  ¿vä¿vú¿võ   ¿v§Äª¿w¿wq/// Signature for listening to [PointerMoveEvent] events.
///
/// Used by [Listener] and [RenderPointerListener].  ¿wG¿wY¿wX   ¿waÄµ¿wŸ¿wŸo/// Signature for listening to [PointerUpEvent] events.
///
/// Used by [Listener] and [RenderPointerListener].  ¿x ¿x¿x   ¿xÄ¡¿xî¿xîs/// Signature for listening to [PointerCancelEvent] events.
///
/// Used by [Listener] and [RenderPointerListener].  ¿xø¿x”¿x“   ¿x€Ä”¿y]¿y]y/// Signature for listening to [PointerPanZoomStartEvent] events.
///
/// Used by [Listener] and [RenderPointerListener].  ¿yé¿y®¿yß   ¿y∞Ä÷¿z3¿z3z/// Signature for listening to [PointerPanZoomUpdateEvent] events.
///
/// Used by [Listener] and [RenderPointerListener].  ¿ze¿zÄ¿z   ¿zàÄÕ¿{¿{w/// Signature for listening to [PointerPanZoomEndEvent] events.
///
/// Used by [Listener] and [RenderPointerListener].  ¿{7¿{O¿{N   ¿{WÄ¡¿{”¿{”s/// Signature for listening to [PointerSignalEvent] events.
///
/// Used by [Listener] and [RenderPointerListener].  ¿{˛¿|¿|   áèäeâ*â*ÅÇ/// Implementation of [RenderProxyBox].
///
/// Use this mixin in situations where the proxying behavior
/// of [RenderProxyBox] is desired but inheriting from [RenderProxyBox] is
/// impractical (e.g. because you want to inherit from a different class).
///
/// If a class already inherits from [RenderProxyBox] and also uses this mixin,
/// you can safely delete the use of the mixin.â>â>â>   âÉÅâîâî  â§â≤â±  âÉâÑäàwäõäõ  ä¥äºäª  äàäâãwãã  ã/ã7ã6  ããã~wãëãë  ã´ã≥ã≤  ã~ãã˘wåå  å&å.å-  ã˘ã˙åtÄƒåàåà  å®å∂åµ  åtåuç<ÄØç]ç]  çp$çäçâ  çñç§ç£  ç<ç=çHçIçÔÄ≠éé  é$é8é7  çÔçç˚ç¸é†ÄÆé±é±   é†é°èRÄÍè‰è‰Äà/// Calculate the size the [RenderProxyBox] would have under the given
/// [BoxConstraints] for the case where it does not have a child. è˙ê
ê	   ê@ÄõêQêQ  êaêsêr  ê{êåêã  ê@êAêﬂNêê  ëëë  ëë!ë   êﬂê‡ë1Ä¡ëBëB  ëHëYëX  ëaëiëh  ë1ë2ââ¿ Åyè¿ Ç∫¿ Ç∫Å:/// Implementation of [RenderAnimatedOpacity] and [RenderSliverAnimatedOpacity].
///
/// This mixin allows the logic of animating opacity to be used with different
/// layout models, e.g. the way that [RenderAnimatedOpacity] uses it for [RenderBox]
/// and [RenderSliverAnimatedOpacity] uses it for [RenderSliver].¿ Ç’¿ Ç’¿ Ç’ ¿ É¿ É¿ É  ¿ É}!¿ ÉÉ¿ ÉÉ  ¿ Ür¿ ÜÖ¿ ÜÖ  ¿ âB¿ âH¿ âH  ¿ É"X¿ É7¿ É7   ¿ É"¿ É#¿ ÑÉÅÏ¿ ÜZ¿ ÜZÅ¨/// The animation that drives this render object's opacity.
///
/// An opacity of 1.0 is fully opaque. An opacity of 0.0 is fully transparent
/// (i.e., invisible).
///
/// To change the opacity of a child in a static manner, not animated,
/// consider [RenderOpacity] instead.
///
/// This getter cannot be read until the value has been set. It should be set
/// by the constructor of the class in which this mixin is included.   ¿ ÜëÅ(¿ Üï¿ Üï  ¿ Üù¿ Ü∞¿ ÜØ   ¿ áΩÅÇ¿ â¿ âÅ5/// Whether child semantics are included regardless of the opacity.
///
/// If false, semantics are excluded when [opacity] is 0.0.
///
/// Defaults to false.
///
/// This getter cannot be read until the value has been set. It should be set
/// by the constructor of the class in which this mixin is included.   ¿ âcÄ±¿ âg¿ âg  ¿ â~
¿ âÑ¿ âÉ   ¿ É£Ä‹¿ Éª¿ Éª  ¿ É“)¿ ÉÙ¿ ÉÛ  ¿ É£¿ É§¿ äÄª¿ ä)¿ ä)  ¿ ä0¿ ä?¿ ä>  ¿ ä¿ ä¿ ä◊_¿ äË¿ äË   ¿ ä◊¿ äÿ¿ ã:Ç¿ ã?¿ ã?    ¿ çNv¿ ç_¿ ç_  ¿ çk¿ çy¿ çx  ¿ çN¿ çO¿ ç»Äë¿ çŸ¿ çŸ  ¿ çﬂ¿ ç¿ çÔ  ¿ ç¯¿ é ¿ çˇ  ¿ ç»¿ ç…¿ é]ÄÆ¿ én¿ én  ¿ éà¿ éù¿ éú  ¿ é]¿ é^¿ èÅx¿ è ¿ è   ¿ è4&¿ èQ¿ èP  ¿ è¿ è     ÄÆ  package:flutter/widgets.dart  Ä·  proxy_sliver.dart  Å  sliver.dart ì÷ <ÄÜÄ§Ä•Ä‘ÄÿÄ¸ÅÅ#Å$ÅeÅfÅèÅπÅ·Ç
Ç2Ç3ÇFÇ[ÇxÇéÇèÇ∂ÉÉÉVÉZÉ£ÉÒÑ@ÑÑÑàÑ◊Ö(ÖwÖãÖèÖùÖ°ÖÒÜÜ)ÜzÜúÜ¢ÜÍá7áIápáàáåáéáèá∑áªá¯àCàéàíà‚ââ$âÅâçâ∫ää)äTä{äÅäÖäÜäíä≈ä¸ã ããã@ãwã{ã|ãàãªãÚãˆã˜åå6åmåqårå~å¡å¸ç5ç9ç:çFçSçØçËçÏçÌç˘ééFéôéùéûé™é√éŒèè?èKèOèPèôè›êê9ê=ê>êJêòêÿê‹ê›êÈë.ë/ë;ërëõë¥ë¬ë»ëÔëÛëıëˆíí1ííªíÀíÃììfìÉìçìéì€îî%î'î(îgîÅîÀî˛ïïHïnï†ï∂ïÀïÃññ`ñfñòñûñÂóóóóTópóìóÎò-òbòjòpòÜòäòãòóò‚ò„òÔô4ô_ôºô¿ô¬ô√ôÙô¯öGöêö‡öÌöÒõAõäõßõ€úúúQú´úÂùù/ù0ùpù∂ùﬂûû;ûfûtûzûûûµûπû∫û∆û˘üSüÅüáü»ü‰††S†Y†k†o†p†|†Ø°	°7°=°~°ö°Œ¢	¢¢!¢%¢&¢2¢e¢¡¢¢ˆ£8£U£ä£«£Õ£‡£‰£Â£Ò§$§Ä§Ø§µ§˜••I•Ü•å•ü•£•§•∞¶¶e¶i¶j¶v¶è¶»¶·ß9ßSß`ßØßµßπß∫ß∆ß”®®b®¨®∞®±®Ω®˝©(©8©Q©É©Ω©Ù©¸™™™™™*™o™ö™Æ´	´´´´´P´ì´ó´‰¨/¨z¨…¨‚¨Ê≠1≠w≠á≠∑ÆÆ=ÆCÆäÆûÆ≥Æ…ÆØØ8ØYØvØïØ™Ø´∞ ∞$∞8∞W∞q∞è∞ù∞£∞∫∞—∞’∞÷±-±S±h±à±¢±¡±œ±’±Ì≤≤≤	≤J≤e≤ã≤õ≥ ≥(≥9≥`≥Ü≥æ≥≈≥…≥ ¥+¥D¥ñ¥≈¥Àµµµµµ)µiµÀµœµ–µ‹µı∂T∂X∂Y∂e∂™∂’∑.∑â∑ç∑è∑ê∑À∑œ∏∏j∏∏∏ºππTπåπêπ›∫+∫z∫¡∫≈ªªbª≥ººOºùºÎΩ9ΩÜΩÃææ=æzæÄæ√øø)øMøoøÉøÑøÆø¥¿ @¿ @K¿ @u¿ @å¿ @Æ¿ @«¿ @„¿ A¿ A¿ A¿ A2¿ AI¿ AM¿ AN¿ AZ¿ Aç¿ A®¿ AÃ¿ A“¿ B	¿ B¿ B¿ B¿ BM¿ Bh¿ Bå¿ Bí¿ B…¿ BÕ¿ BŒ¿ B⁄¿ C¿ C'¿ CJ¿ CP¿ Cá¿ Cã¿ Cå¿ Cò¿ CÀ¿ CÂ¿ D¿ D¿ DE¿ DI¿ DJ¿ DÅ¿ DØ¿ Dø¿ E
¿ E&¿ E\¿ E≥¿ F¿ FV¿ Ft¿ F¿ Fá¿ Fö¿ F§¿ F•¿ Fƒ¿ FÁ¿ FÌ¿ FÓ¿ G¿ G*¿ G+¿ Gx¿ Gƒ¿ G€¿ Gı¿ H¿ H'¿ HM¿ Hr¿ Hx¿ Hy¿ H«¿ I¿ I]¿ It¿ Iu¿ Iù¿ I¡¿ IÊ¿ IÏ¿ IÌ¿ J¿ J=¿ Jb¿ Jh¿ Ji¿ Jë¿ Jµ¿ J⁄¿ J‡¿ J·¿ K¿ K1¿ KV¿ K\¿ K]¿ Kî¿ Kò¿ Kô¿ K•¿ K≤¿ KÚ¿ L¿ L!¿ L"¿ L.¿ LÄ¿ L‡¿ L‰¿ LÂ¿ LÒ¿ M
¿ M0¿ M_¿ Mc¿ Md¿ Mp¿ Mµ¿ M‡¿ N ¿ N$¿ N&¿ N'¿ Nc¿ Ng¿ N¥¿ O¿ O8¿ O<¿ Oà¿ Oÿ¿ P$¿ Pn¿ Pª¿ P„¿ PÁ¿ Q7¿ QÉ¿ Q¡¿ Q≈¿ R¿ R`¿ RØ¿ R∆¿ R ¿ Rÿ¿ R‹¿ S+¿ Sr¿ S¿¿ S”¿ T¿ Tb¿ TØ¿ T„¿ U¿ Ug¿ Um¿ UΩ¿ Uﬁ¿ V0¿ Vd¿ Vö¿ V∏¿ Vÿ¿ VÏ¿ VÌ¿ W8¿ W>¿ Wf¿ Wç¿ W£¿ Wƒ¿ WÓ¿ X¿ X¿ X!¿ X9¿ XP¿ XT¿ XU¿ X°¿ Xß¿ Xœ¿ X¯¿ Y¿ Y1¿ Y[¿ Y{¿ Yâ¿ Yè¿ Y®¿ Yø¿ Y√¿ Yƒ¿ Y˝¿ Z¿ Z1¿ ZE¿ ZK¿ Zt¿ Zx¿ Zy¿ ZÖ¿ Z∏¿ Z·¿ ZÂ¿ ZÊ¿ ZÚ¿ [%¿ [>¿ [P¿ [V¿ [î¿ [æ¿ [¬¿ [√¿ [œ¿ \¿ \¿ \-¿ \3¿ \N¿ \É¿ \â¿ \•¿ \‰¿ ]¿ ]¿ ]¿ ]!¿ ]T¿ ]m¿ ]¿ ]Ö¿ ]†¿ ]’¿ ]€¿ ]˜¿ ^6¿ ^b¿ ^f¿ ^g¿ ^π¿ ^Ÿ¿ ^Ê¿ _
¿ _¿ _z¿ _à¿ _•¿ _∫¿ `¿ `¿ `!¿ `"¿ `É¿ `¨¿ `≈¿ `‰¿ a)¿ a-¿ a.¿ a:¿ aG¿ aá¿ aÈ¿ aÌ¿ aÓ¿ a˙¿ bL¿ bu¿ b»¿ bÃ¿ bÕ¿ bŸ¿ bÚ¿ cQ¿ cU¿ cV¿ cb¿ cß¿ c“¿ d¿ dL¿ dP¿ dR¿ dS¿ dà¿ då¿ d⁄¿ e*¿ e_¿ ec¿ eØ¿ eˇ¿ fM¿ fò¿ fÊ¿ g¿ g¿ g`¿ gÆ¿ g˝¿ h¿ h¿ h&¿ h*¿ hy¿ h¡¿ i¿ i#¿ ir¿ i∂¿ j¿ j:¿ jo¿ j¿¿ j¸¿ j˝¿ k	¿ k<¿ kU¿ kg¿ km¿ kâ¿ k«¿ kÕ¿ kÍ¿ l¿ l¿ l¿ l+¿ l^¿ lw¿ lâ¿ lè¿ l´¿ lÈ¿ lÔ¿ m¿ m<¿ m@¿ mA¿ mM¿ mÄ¿ m©¿ m≠¿ mÆ¿ n ¿ n&¿ n<¿ nñ¿ nö¿ nõ¿ n¸¿ o%¿ o>¿ o]¿ o¢¿ o¶¿ oß¿ o≥¿ o¿¿ p ¿ pb¿ pf¿ pg¿ ps¿ p≈¿ pÓ¿ qA¿ qE¿ qF¿ qR¿ qk¿ q ¿ qŒ¿ q–¿ q—¿ r¿ rF¿ r©¿ r‰¿ rÂ¿ rÒ¿ s1¿ sB¿ sF¿ sG¿ sS¿ s¨¿ sΩ¿ s¡¿ s√¿ sƒ¿ sÔ¿ sÛ¿ tC¿ tx¿ t|¿ t«¿ u¿ uY¿ u©¿ u÷¿ v¿ v¿ vV¿ vµ¿ vÂ¿ vˇ¿ w7¿ wm¿ wÅ¿ wÇ¿ wé¿ w–¿ w—¿ w›¿ x¿ x¿ x$¿ x%¿ xZ¿ x`¿ x∞¿ x…¿ xœ¿ y¿ yZ¿ yk¿ yç¿ y†¿ yæ¿ yË¿ z¿ z¿ z¿ zU¿ z~¿ zî¿ z…¿ {¿ {)¿ {/¿ {U¿ {ó¿ {π¿ {ø¿ {√¿ {ƒ¿ |
¿ |¿ |N¿ |T¿ |m¿ |´¿ |À¿ |ˆ¿ }"¿ }0¿ }6¿ }[¿ }{¿ }¿ }Ä¿ }å¿ }≤¿ }‘¿ }Î¿ }Ô¿ }¿ }¸¿ ~O¿ ~ä¿ ~§¿ ~∂¿ ~∫¿ ~ª¿ ~«¿ ~˛¿ &¿ 4¿ :¿ \¿ `¿ a¿ m¿ ≠¿ Ò¿ Ä¿ Ä¿ Ä¿ Ä¿ Ä¿ Äd¿ Äè¿ Ä«¿ Ä€¿ ÄÔ¿ Å¿ Å8¿ Åb¿ Åk¿ År¿ Åv¿ Åx¿ Åy¿ Å ¿ ÅŒ¿ Ç¿ Çr¿ Ç¥¿ É¿ É¿ É ¿ É,¿ É{¿ É†¿ É°¿ É≠¿ Ñ ¿ ÑB¿ Ñc¿ Ñ|¿ ÑÄ¿ ÑÅ¿ Ñø¿ Ñ≈¿ Ö¿ Ö.¿ Ö4¿ Ö}¿ Ö•¿ Ö´¿ Ö˚¿ ÜB¿ Üp¿ Üè¿ Ü∏¿ Ü’¿ Ü„¿ ÜÈ¿ á¿ á?¿ áE¿ á[¿ áo¿ áö¿ á†¿ á∂¿ á∫¿ áª¿ à¿ à¿ àE¿ àK¿ àd¿ àj¿ à∫¿ â¿ â@¿ âa¿ âå¿ â∏¿ â∆¿ âÃ¿ âÒ¿ ä¿ ä¿ ä¿ ä"¿ äG¿ ä`¿ äâ¿ ä–¿ ä‘¿ ä’¿ ä·¿ äÛ¿ ã¿ ã3¿ ã7¿ ã8¿ ãR¿ ãt¿ ãÆ¿ ãÃ¿ å¿ åA¿ åë¿ åª¿ å√¿ åÎ¿ ç¿ ç9¿ çA¿ çG¿ çK¿ çL¿ çX¿ çÅ¿ ç£¿ ç¡¿ ç≈¿ ç∆¿ ç“¿ é	¿ é ¿ é.¿ é4¿ éV¿ éZ¿ é[¿ ég¿ éß¿ éÎ¿ è¿ è¿ è¿ è¿ è¿ è^¿ èâ¿ èŸ¿ èÌ¿ ê¿ ê#¿ êJ¿ êt¿ ê}¿ êÑ¿ êà¿ êä¿ êã¿ ê“¿ ê÷¿ ë'¿ ëS¿ ë≥¿ ëË¿ í¿ í*¿ íS¿ íi¿ í¿ íõ¿ í’¿ íŸ¿ í€¿ í‹¿ ì%¿ ì)¿ ìe¿ ìú¿ ìù¿ ì÷¿ ì⁄¿ î)¿ î^¿ îé¿ îÊ¿ î˚¿ ï¿ ï=¿ ïk¿ ïî¿ ï≥¿ ï»¿ ï…¿ ï’¿ ñ¿ ñ¿ ñU¿ ñ[¿ ñ™¿ ñÛ¿ ñ˘¿ ó9¿ óS¿ ó°¿ óŸ¿ ò¿ ò3¿ ò`¿ òÑ¿ òí¿ òò¿ òµ¿ òÀ¿ òœ¿ ò–¿ ô¿ ô¿ ôi¿ ô¥¿ ô›¿ ôı¿ ö¿ ö7¿ öE¿ öK¿ öc¿ öy¿ ö}¿ ö~¿ öä¿ öæ¿ öø¿ öÀ¿ õ¿ õ¿ õ;¿ õ^¿ õk¿ õ¢¿ õ≈¿ õÁ¿ ú¿ ú/¿ ú[¿ úp¿ ú|¿ úâ¿ úù¿ ú£¿ úß¿ ú©¿ ú™¿ ú¯¿ ú¸¿ ùL¿ ù`¿ ùî¿ ùµ¿ ù∫¿ ù˙¿ û¿ û)¿ ûM¿ ûz¿ ûì¿ û±¿ û ¿ ûÂ¿ ü¿ ü'¿ ü<¿ ü=¿ üI¿ üí¿ üì¿ ü‰¿ †¿ †¿ †1¿ †M¿ †[¿ †a¿ †w¿ †ç¿ †ë¿ †í¿ †‚¿ †Û¿ †˘¿ °F¿ °Y¿ °Å¿ °õ¿ °¿¿ °‹¿ °Í¿ °¿ ¢¿ ¢¿ ¢¿ ¢ ¿ ¢y¿ ¢à¿ ¢é¿ ¢∆¿ ¢Ô¿ £¿ £*¿ £I¿ £W¿ £]¿ £u¿ £ã¿ £è¿ £ê¿ £‹¿ £Ì¿ £Û¿ §+¿ §[¿ §x¿ §†¿ §¡¿ §œ¿ §’¿ §Ô¿ •¿ •	¿ •
¿ •¿ •J¿ •K¿ •W¿ •é¿ •£¿ •«¿ •’¿ •€¿ •‹¿ •ı¿ ¶¿ ¶<¿ ¶[¿ ¶Ä¿ ¶©¿ ¶ﬂ¿ ¶Ò¿ ß¿ ß2¿ ß>¿ ßK¿ ß_¿ ße¿ ßi¿ ßk¿ ßl¿ ßô¿ ßù¿ ßÊ¿ ß˜¿ ß˚¿ ®L¿ ®P¿ ®ô¿ ®Â¿ ®ˆ¿ ®˙¿ ©E¿ ©ì¿ ©‰¿ ™4¿ ™8¿ ™F¿ ™J¿ ™ì¿ ™ﬁ¿ ´'¿ ´p¿ ´ø¿ ´Ù¿ ¨¿ ¨¿ ¨k¿ ¨´¿ ¨¨¿ ¨…¿ ¨ ¿ ≠¿ ≠¿ ≠b¿ ≠≤¿ ≠…¿ ≠’¿ Æ"¿ Æ#¿ Æs¿ Æ§¿ Æ™¿ Æ˘¿ ØI¿ Ø`¿ Øl¿ Øø¿ Ø¿¿ ∞¿ ∞/¿ ∞G¿ ∞H¿ ∞ç¿ ∞–¿ ±¿ ±
¿ ±N¿ ±ï¿ ±ÿ¿ ≤¿ ≤_¿ ≤`¿ ≤≠¿ ≤˛¿ ≥O¿ ≥†¿ ≥¶¿ ≥Ó¿ ¥=¿ ¥J¿ ¥P¿ ¥û¿ ¥™¿ ¥∞¿ ¥ˆ¿ µB¿ µv¿ µ≤¿ µ≥¿ µø¿ ∂ ¿ ∂¿ ∂¿ ∂J¿ ∂Å¿ ∂®¿ ∂Æ¿ ∂ˆ¿ ∑E¿ ∑í¿ ∑’¿ ∏¿ ∏¿ ∏\¿ ∏w¿ ∏x¿ ∏¿¿ ∏∆¿ π¿ π8¿ π^¿ π_¿ πî¿ π†¿ πº¿ ∫¿ ∫¿ ∫¿ ∫¿ ∫T¿ ∫å¿ ∫ü¿ ∫•¿ ∫ˆ¿ ªS¿ ªW¿ ªY¿ ªZ¿ ªó¿ ª≠¿ ª√¿ ª‚¿ º
¿ º%¿ ºJ¿ º_¿ º`¿ ºû¿ ºÀ¿ ºÈ¿ Ω¿ Ω9¿ ΩG¿ ΩM¿ ΩÄ¿ Ωõ¿ Ω—¿ ΩÔ¿ æ¿ æI¿ æx¿ æê¿ æñ¿ æ™¿ æ‹¿ ø¿ ø¿ ø¿ ø¿ ø"¿ øG¿ ø`¿ øã¿ øè¿ øê¿ øú¿ øÆ¿ ø‹¿ ø¿ øÙ¿ øı¿ ¿¿ ¿!¿ ¿7¿ ¿W¿ ¿[¿ ¿\¿ ¿r¿ ¿~¿ ¿¿ ¿©¿ ¿ ¿ ¿Ï¿ ¡	¿ ¡!¿ ¡'¿ ¡+¿ ¡,¿ ¡B¿ ¡C¿ ¡O¿ ¡h¿ ¡ô¿ ¡¥¿ ¡œ¿ ¡„¿ ¡È¿ ¡Ì¿ ¡Ó¿ ¬¿ ¬<¿ ¬@¿ ¬A¿ ¬M¿ ¬à¿ ¬§¿ ¬∫¿ ¬œ¿ ¬È¿ √¿ √,¿ √y¿ √¿ √É¿ √Ñ¿ √ö¿ √µ¿ √¡¿ ƒ¿ ƒ¿ ƒ'¿ ƒ9¿ ƒd¿ ƒ¿ ƒß¿ ƒæ¿ ƒÁ¿ ≈¿ ≈9¿ ≈b¿ ≈s¿ ≈£¿ ≈ƒ¿ ≈“¿ ≈Ú¿ ∆¿ ∆@¿ ∆•¿ ∆ı¿ «¿ «¿ «%¿ «)¿ «*¿ «6¿ «I¿ «d¿ «{¿ «ê¿ «î¿ «ñ¿ «ó¿ «æ¿ «¬¿ »¿ »a¿ »w¿ »Æ¿ »–¿ »÷¿ …&¿ …7¿ …=¿ …Ç¿ …∆¿ …«¿ …”¿  ¿  ¿  ¿  U¿  q¿  Ü¿  £¿  À¿  ·¿  È¿  Ô¿ À%¿ À)¿ À*¿ À6¿ Àm¿ ÀÜ¿ À≠¿ Àƒ¿ ÀÍ¿ Ã¿ Ã¿ Ã*¿ ÃA¿ Ãg¿ Ãî¿ Ãü¿ ÃÆ¿ Ã⁄¿ Ã¿ Ã¯¿ Õ¿ Õ¿ Õ¿ Õ#¿ Õ$¿ Õ0¿ Õp¿ ÕÄ¿ Õõ¿ Õ ¿ ÕÛ¿ Œ:¿ ŒW¿ Œs¿ Œœ¿ Œ‹¿ ŒÊ¿ ŒÓ¿ œ¿ œ¿ œ¿ œ¿ œ¿ œA¿ œE¿ œï¿ œ„¿ œ˘¿ –2¿ –\¿ –b¿ –≤¿ –Œ¿ –‘¿ —¿ —¿ —_¿ —s¿ —Ñ¿ —ø¿ —“¿ —Í¿ “¿ “1¿ “X¿ “Y¿ “â¿ “è¿ “⁄¿ “ı¿ “˚¿ ”1¿ ”k¿ ”ë¿ ”¬¿ ”‰¿ ”Ú¿ ”¯¿ ‘¿ ‘)¿ ‘-¿ ‘.¿ ‘m¿ ‘£¿ ‘ƒ¿ ‘¿ ’¿ ’!¿ ’'¿ ’C¿ ’Y¿ ’]¿ ’^¿ ’j¿ ’»¿ ’…¿ ’’¿ ÷¿ ÷7¿ ÷L¿ ÷i¿ ÷ë¿ ÷ß¿ ÷Ø¿ ÷µ¿ ÷Î¿ ÷Ô¿ ÷¿ ÷¸¿ ◊3¿ ◊L¿ ◊s¿ ◊ä¿ ◊±¿ ◊Õ¿ ◊ﬂ¿ ◊˚¿ ÿ¿ ÿ$¿ ÿJ¿ ÿx¿ ÿÉ¿ ÿí¿ ÿæ¿ ÿ‘¿ ÿ‹¿ ÿÈ¿ ÿ˝¿ Ÿ¿ Ÿ¿ Ÿ¿ Ÿ¿ ŸT¿ Ÿd¿ Ÿ¿ ŸÆ¿ Ÿ◊¿ ⁄¿ ⁄<¿ ⁄X¿ ⁄≤¿ ⁄ø¿ ⁄…¿ ⁄—¿ ⁄‰¿ ⁄Ó¿ ⁄Ú¿ ⁄Ù¿ ⁄ı¿ €¿ €¿ €j¿ €≥¿ €˝¿ ‹4¿ ‹W¿ ‹]¿ ‹≠¿ ‹ ¿ ‹–¿ ›¿ ›Y¿ ›Z¿ ›o¿ ›à¿ ›â¿ ›™¿ ›…¿ ›„¿ ﬁ¿ ﬁ¿ ﬁ4¿ ﬁ8¿ ﬁ9¿ ﬁE¿ ﬁt¿ ﬁu¿ ﬁÅ¿ ﬁ«¿ ﬁ⁄¿ ﬁı¿ ﬂ¿ ﬂj¿ ﬂå¿ ﬂº¿ ﬂÌ¿ ﬂÙ¿ ‡)¿ ‡R¿ ‡k¿ ‡¿ ‡Ö¿ ‡ª¿ ‡ø¿ ‡¿¿ ‡Ã¿ ·¿ ·¿ ·C¿ ·Z¿ ·Ä¿ ·ú¿ ·Æ¿ ·¿¿ ·‡¿ ·˜¿ ‚¿ ‚J¿ ‚U¿ ‚d¿ ‚ê¿ ‚¶¿ ‚Æ¿ ‚ª¿ ‚œ¿ ‚’¿ ‚Ÿ¿ ‚⁄¿ ‚Ê¿ „&¿ „6¿ „Q¿ „Ä¿ „©¿ „˛¿ ‰¿ ‰7¿ ‰L¿ ‰d¿ ‰†¿ ‰›¿ ‰¿ ‰˝¿ Â¿ Â¿ Â"¿ Â,¿ Â0¿ Â2¿ Â3¿ ÂU¿ ÂY¿ Âû¿ Âﬂ¿ Â„¿ Ê!¿ Ê?¿ ÊC¿ Ê}¿ ÊΩ¿ Á ¿ Á7¿ ÁR¿ ÁX¿ Á©¿ Áˆ¿ ËF¿ ËY¿ Ë_¿ Ë§¿ ËË¿ ËÈ¿ Ëı¿ È5¿ È6¿ ÈB¿ Èà¿ È§¿ Èπ¿ È÷¿ È˛¿ Í¿ Í¿ Í"¿ ÍX¿ Í\¿ Í]¿ Íi¿ Í†¿ Íπ¿ Í‡¿ Í˜¿ Î¿ Î9¿ ÎK¿ Îi¿ Î{¿ Îí¿ Î∏¿ ÎÂ¿ Î¿ Îˇ¿ Ï+¿ ÏA¿ ÏI¿ ÏV¿ Ïj¿ Ïp¿ Ït¿ Ïu¿ ÏÅ¿ Ï¡¿ Ï—¿ ÏÏ¿ Ì¿ ÌD¿ Ìã¿ Ì¿¿ Ì ¿ Ì“¿ ÌÂ¿ ÌÔ¿ ÌÛ¿ Ìı¿ Ìˆ¿ Ó:¿ Ó>¿ Óè¿ Ó≈¿ Ô¿ ÔE¿ Ôb¿ Ô|¿ Ôõ¿ Ôµ¿ Ô’¿ Ô˘¿ ¿ -¿ L¿ c¿ Ü¿ á¿ ÷¿ ‹¿ ˝¿ Ò¿ ÒQ¿ Ò¿ Ò•¿ Ò∫¿ Ò⁄¿ ÒÙ¿ Ú¿ Ú ¿ Ú&¿ Úb¿ Úz¿ Ú≤¿ Ú⁄¿ Ú‡¿ Úˆ¿ Ú˙¿ Ú˚¿ Û¿ Û<¿ ÛR¿ Ûs¿ Ûì¿ Û°¿ Ûß¿ Û¡¿ Û◊¿ Û€¿ Û‹¿ Û¯¿ Ù¿ Ù%¿ Ù@¿ ÙZ¿ Ùh¿ Ùn¿ ÙÇ¿ Ùò¿ Ùú¿ Ùù¿ Ù©¿ Ù¿ ı"¿ ıD¿ ıH¿ ıI¿ ıU¿ ıõ¿ ı«¿ ˆ¿ ˆ8¿ ˆr¿ ˆv¿ ˆx¿ ˆy¿ ˆæ¿ ˆÕ¿ ˆ—¿ ˜¿ ˜Y¿ ˜É¿ ˜â¿ ˜®¿ ˜Æ¿ ˜‰¿ ˜¸¿ ¯¿ ¯6¿ ¯N¿ ¯n¿ ¯â¿ ¯£¿ ¯‘¿ ¯ı¿ ˘¿ ˘1¿ ˘2¿ ˘P¿ ˘V¿ ˘•¿ ˘Ω¿ ˘›¿ ˘¿ ˙¿ ˙(¿ ˙6¿ ˙<¿ ˙P¿ ˙f¿ ˙j¿ ˙k¿ ˙õ¿ ˙°¿ ˙Ï¿ ˚¿ ˚¿ ˚X¿ ˚^¿ ˚ò¿ ˚À¿ ˚Í¿ ¸¿ ¸5¿ ¸C¿ ¸I¿ ¸d¿ ¸z¿ ¸~¿ ¸¿ ¸ã¿ ¸¶¿ ¸ª¿ ¸Â¿ ˝¿ ˝Q¿ ˝£¿ ˝™¿ ˝Æ¿ ˝Ø¿ ˝ª¿ ˛¿ ˛¿ ˛2¿ ˛O¿ ˛w¿ ˛ç¿ ˛ï¿ ˛õ¿ ˛—¿ ˛’¿ ˛÷¿ ˛‚¿ ˇ¿ ˇ2¿ ˇF¿ ˇT¿ ˇZ¿ ˇ[¿ ˇn¿ ˇ¢¿ ˇ‰¿ ¿ ¿ 3¿ R¿ v¿ è¿ £¿ «¿ Ù¿#¿0¿:¿X¿`¿s¿}¿~¿®¿‘¿-¿3¿¿ô¿÷¿‹¿ˇ¿¿%¿?¿M¿~¿õ¿◊¿&¿u¿π¿ı¿ˇ¿%¿.¿X¿z¿Å¿Ç¿í¿º¿œ¿Ÿ¿›¿ﬁ¿Í¿0¿\¿†¿ˆ¿˙¿¸¿˝¿B¿F¿ä¿é¿ú¿†¿Ï¿¸¿?¿f¿l¿•¿´¿·¿˘¿	
¿	:¿	R¿	m¿	á¿	∏¿	Ÿ¿	⁄¿	Ê¿
&¿
'¿
3¿
y¿
ï¿
™¿
«¿
Ô¿¿¿¿I¿M¿N¿Z¿ë¿™¿æ¿Ã¿“¿”¿Ê¿¿6¿F¿g¿Ü¿©¿¡¿’¿˘¿&¿U¿b¿l¿ä¿í¿•¿Ø¿∞¿⁄¿¿X¿^¿™¿ƒ¿ˇ¿¿'¿?¿M¿g¿u¿¶¿√¿ˇ¿N¿ù¿·¿¿'¿M¿V¿¿°¿®¿©¿π¿„¿ˆ¿ ¿¿¿¿W¿É¿÷¿⁄¿‹¿›¿¿¿P¿^¿_¿ò¿¶¿®¿©¿Ï¿¿=¿C¿ë¿–¿÷¿%¿P¿g¿ã¿Ã¿¿#¿D¿a¿à¿ù¿û¿∂¿∑¿◊¿›¿ˇ¿+¿E¿j¿ä¿ò¿û¿∑¿Ã¿Â¿˚¿ˇ¿ ¿K¿{¿õ¿∆¿‰¿Ú¿¯¿¿%¿)¿*¿u¿π¿”¿Ÿ¿¿b¿ú¿¡¿Ò¿¿"¿(¿D¿Z¿^¿_¿k¿}¿ñ¿´¿ø¿¿M¿ô¿Â¿ ¿6¿:¿;¿G¿Z¿s¿à¿å¿ç¿ô¿ø¿¿¿ ¿,¿c¿¢¿˘¿.¿I¿[¿ì¿®¿¥¿¯¿ 
¿ I¿ É¿ ù¿ ˘¿!¿!&¿!Ç¿!‚¿"?¿"N¿"{¿"ü¿"π¿"Ú¿#¿#.¿#O¿#g¿#†¿#Ø¿#Ω¿#«¿#‹¿#Ë¿$
¿$.¿$6¿$<¿$^¿$ì¿$◊¿$˘¿%¿%%¿%+¿%/¿%0¿%<¿%Å¿%¨¿%Û¿&P¿&T¿&V¿&W¿&è¿&æ¿&˜¿'¿'+¿'?¿'a¿'É¿'¶¿'»¿'ﬁ¿'Ù¿(¿(4¿(\¿(Ñ¿(û¿(¢¿(£¿(Û¿)+¿)1¿)Ä¿)√¿)‰¿)˜¿*¿*1¿*?¿*E¿*Z¿*p¿*ê¿*î¿*ï¿*Ÿ¿*ﬂ¿++¿+u¿+{¿+À¿,¿,[¿,™¿,È¿-:¿-l¿-ç¿-π¿-ÿ¿-Ê¿-Ï¿.¿.¿.:¿.>¿.?¿.{¿.Å¿.–¿/¿/>¿/_¿/ã¿/Æ¿/º¿/¬¿/ﬁ¿/Ù¿0¿0¿0¿0%¿0s¿0t¿0¡¿1
¿1-¿13¿1É¿1‘¿1Ó¿1Ô¿2¿2¿2V¿2u¿2{¿2«¿3¿3;¿3f¿3á¿3¶¿3¥¿3∫¿3‡¿3ˆ¿4¿4¿4¿4m¿4s¿4≥¿4È¿5
¿56¿5Y¿5g¿5m¿5©¿5≈¿5˝¿6%¿6+¿6A¿6E¿6F¿6w¿6é¿6≠¿6√¿6„¿6Á¿6Ë¿7+¿7L¿7n¿7Ñ¿7§¿7®¿7©¿7Ï¿8¿8/¿8E¿8e¿8i¿8j¿8≠¿8Œ¿8¿9¿9&¿9*¿9+¿9m¿9¨¿9–¿9Ê¿:¿:
¿:¿::¿:k¿:ã¿:°¿:¡¿:≈¿:∆¿:Î¿;7¿;o¿;à¿;é¿;Ω¿;ÿ¿<
¿<¿<)¿<N¿<Ö¿<Ω¿<√¿<Â¿=
¿=E¿=K¿=f¿=ö¿=†¿=≥¿=∑¿=∏¿=ƒ¿>
¿>A¿>~¿>º¿>÷¿?¿?¿?¿?¿?m¿?¨¿?’¿@¿@0¿@l¿@Æ¿@∑¿@æ¿@¬¿@√¿@œ¿A¿A¿AU¿Ax¿A≈¿AË¿B=¿BÅ¿B∑¿B‚¿B¸¿C¿C¿CE¿Cc¿Cw¿Cé¿Cß¿C¯¿D¿D¿DL¿Dd¿Dn¿D}¿D®¿DÈ¿E¿E@¿E}¿E£¿EÃ¿E◊¿F¿F@¿FQ¿Fä¿Fî¿FÃ¿F‡¿G¿G%¿G3¿G;¿GA¿GE¿GF¿GR¿Gì¿G¡¿G≈¿G∆¿G“¿H¿HB¿Hâ¿HÃ¿I ¿IÖ¿I‹¿I‡¿I‚¿I„¿J(¿JW¿Jã¿Jü¿J¿¿JÙ¿K¿K,¿KO¿Kb¿KÅ¿K®¿KÕ¿K‚¿K„¿L6¿LW¿LX¿Lw¿Lñ¿L¨¿L∞¿L±¿Lÿ¿LÎ¿M¿M¿M8¿MQ¿Mi¿MÜ¿M¢¿M∫¿M–¿M÷¿M⁄¿M€¿N#¿N=¿NL¿Nf¿N¿Nç¿Nì¿N¥¿N∆¿O¿O!¿O.¿OG¿O_¿Oe¿Oi¿Oj¿O£¿O©¿O˘¿PJ¿Pz¿PÄ¿Pø¿PÁ¿Q¿Q8¿Qc¿QÇ¿Qê¿Qñ¿QÆ¿Q≈¿Q‡¿Q‰¿QÂ¿R!¿R'¿Rv¿RÆ¿R‰¿S¿S1¿ST¿Sb¿Sh¿SÑ¿Sõ¿S∂¿S∫¿Sª¿S¸¿S˝¿T	¿T¿TV¿To¿Tπ¿T∫¿Tœ¿TÓ¿U5¿Un¿U∂¿UÒ¿V¿V)¿VC¿Vb¿VÄ¿Vö¿V¿V¯¿W¿W(¿W.¿W2¿W3¿W?¿WX¿Wq¿W¥¿W…¿WË¿X/¿Xh¿X≤¿XÌ¿Y
¿Y%¿Y?¿Y^¿Y|¿Yñ¿YÓ¿Yˆ¿Z¿Z¿Z?¿ZE¿ZI¿ZJ¿Zf¿Z}¿Z~¿Z¥¿Z∫¿ZŸ¿[¿[%¿[F¿[h¿[Ö¿[ù¿[ø¿[≈¿[…¿[ ¿[Â¿\¿\¿\¿\ ¿\<¿\Z¿\h¿\n¿\o¿\à¿\™¿\—¿\ﬁ¿]¿]>¿]Ç¿]Ã¿^¿^y¿^∏¿^”¿^Ô¿^¯¿_¿_i¿_õ¿_Æ¿`¿`+¿`g¿`≤¿`∏¿`º¿`Ω¿a¿a]¿a|¿a†¿a∫¿a ¿aﬂ¿aÙ¿bA¿bJ¿bW¿bâ¿bè¿b†¿b§¿b•¿b±¿bË¿c(¿c6¿c<¿cT¿co¿c´¿cœ¿cÈ¿c˘¿d¿d7¿dÇ¿d¶¿dØ¿dº¿dı¿d˚¿dˇ¿e ¿e¿eZ¿eî¿e®¿eÆ¿e∆¿eÔ¿f¿f&¿fb¿f§¿f≠¿f¥¿f∏¿fπ¿f≈¿fÎ¿g¿g>¿gB¿gC¿gO¿gê¿gØ¿g ¿g◊¿gÒ¿h¿h¿h"¿h#¿h/¿ht¿hü¿h’¿i)¿ié¿ií¿iî¿iï¿iŸ¿i›¿j-¿jv¿j≠¿j±¿jÓ¿k;¿kN¿kâ¿kÕ¿kÌ¿l¿l1¿lG¿lj¿l¿lÄ¿l…¿lœ¿m¿mW¿mÅ¿mò¿m∫¿m€¿mÈ¿mÔ¿n	¿n¿n?¿nC¿nD¿nP¿nñ¿nŸ¿o¿oT¿on¿o¶¿o™¿o´¿o¯¿pA¿pd¿pj¿p∫¿q¿q%¿q&¿q2¿qÄ¿qü¿q≈¿q”¿qÔ¿rA¿rW¿rq¿r≠¿rÔ¿r¯¿rˇ¿s¿s¿s¿sG¿sf¿s¿sí¿s£¿t¿t¿t¿t¿t¿t&¿tg¿tª¿tø¿t¿¿tÃ¿u¿u<¿uâ¿u‡¿u‰¿uÊ¿uÁ¿v!¿v%¿vY¿v£¿v§¿vﬁ¿v‚¿w¿w`¿wa¿wô¿wù¿w—¿x¿x¿xT¿xX¿xå¿x⁄¿x€¿y¿y!¿yU¿yØ¿y∞¿yÛ¿y˜¿z+¿zá¿zà¿z»¿zÃ¿{ ¿{V¿{W¿{ì¿{ó¿{À¿|¿|¿|T¿|X¿|†¿|Ï¿|¿}@¿}Ü¿}±¿}µ¿}ı¿}˘¿~H¿~ê¿~Ÿ¿~ﬂ¿)¿C¿[¿s¿â¿¢¿º¿‹¿˝¿Ä¿Ä5¿ÄI¿ÄZ¿Ä`¿Äa¿Ä´¿Ä¸¿Å¿Å7¿Å8¿Åà¿Å≥¿Å¥¿Ç¿Ç!¿ÇH¿ÇI¿Çó¿Çƒ¿Ç≈¿É¿ÉE¿Ét¿Éu¿É∫¿Éı¿Éˆ¿Ñ¿Ñ\¿Ñ]¿ÑÑ¿Ñª¿Ñº¿Ñ¯¿Ö'¿Ö(¿Ö4¿Öo¿Öè¿Öì¿Öî¿Ö†¿Ö›¿Ü	¿Ü%¿Ü]¿Üï¿Ü…¿á¿á?¿áá¿á—¿à¿àQ¿àb¿ài¿àm¿àn¿àz¿àø¿àÍ¿à˛¿â>¿â]¿â|¿âó¿â∏¿â€¿ä
¿ä;¿äf¿äâ¿ä¶¿ä≠¿ä±¿ä≥¿ä¥¿ã¿ã¿ãR¿ãü¿ãΩ¿ã¡¿å¿å`¿åÅ¿åÖ¿å»¿åÃ¿ç¿ç"¿ç0¿ç4¿çv¿çí¿ç‘¿ç¸¿éE¿éK¿éó¿é‚¿é¯¿è
¿è¿è-¿èY¿è¿èó¿è®¿èÁ¿ê ¿ê5¿êN¿êë¿êí¿êû¿ê‰¿ë%¿ë)¿ë*¿ë6¿ës¿ëü¿ë≈¿ë·¿ëÁ¿ëÎ¿ëÏ¿í=¿íé¿í©¿íØ¿í¯¿ì@¿ìà¿ì√¿ì…¿î¿îe¿îä¿îê¿î≠¿îÀ¿î€¿îˆ¿ï¿ï)¿ïv¿ïé¿ïî¿ïò¿ïô¿ï¡¿ï«¿ñ ¿ñ4¿ñd¿ñ™¿ñ ¿ñÂ¿ó2¿óJ¿óP¿óT¿óU¿óa¿óá¿óà¿ó”¿óÍ¿ó¿ò4¿òZ¿ò[¿òg¿òã¿òå¿òò¿òΩ¿ò‘¿òˆ¿ô¿ô)¿ôm¿ô™¿ô¬¿ô»¿ôÃ¿ôÕ¿ôŸ¿ö¿ö1¿ö2¿ö>¿öc¿ö|¿öû¿ö¢¿ö£¿öØ¿ö¡¿õ¿õg¿õè¿õ≤¿õ∆¿õ ¿õÀ¿õ◊¿ú¿ú2¿ú6¿ú7¿úC¿úà¿ú≥¿ú«¿ù¿ù!¿ù;¿ùS¿ùp¿ùw¿ùã¿ùÊ¿ùÌ¿ûB¿ûV¿ûj¿ûä¿ûØ¿ûÀ¿û¯¿ü¿ü¿ü¿ü¿ü¿üB¿üF¿üí¿üﬁ¿†+¿†w¿†≈¿°¿°1¿°5¿°Ñ¿°“¿¢#¿¢r¿¢Ω¿£¿£[¿£û¿£¢¿£Ë¿§5¿§Å¿§–¿•¿•d¿•ô¿• ¿¶¿¶¿¶¿¶9¿¶:¿¶Ñ¿¶î¿¶ö¿¶Í¿ß&¿ß,¿ß}¿ß´¿ß±¿ßˇ¿®8¿®á¿®÷¿®¯¿®˛¿©¿©¿©a¿©É¿©â¿©ó¿©ƒ¿©Ë¿©Ó¿™ ¿™9¿™A¿™G¿™z¿™•¿™´¿™÷¿´O¿´ä¿´Á¿¨,¿¨G¿¨Q¿¨W¿¨i¿¨ñ¿¨∏¿¨‘¿¨Ô¿≠¿≠8¿≠å¿≠ù¿≠¨¿≠π¿≠√¿≠À¿≠’¿≠Á¿≠Ì¿≠˝¿Æ¿ÆH¿Æò¿Æ–¿ÆÓ¿Ø)¿Øu¿Øy¿Øz¿Øƒ¿Ø‚¿ØË¿∞8¿∞t¿∞z¿∞œ¿∞˝¿±¿±Q¿±ä¿±Ÿ¿≤(¿≤J¿≤P¿≤¢¿≤Ò¿≤˜¿≥¿≥¿≥Z¿≥Ü¿≥å¿≥ö¿≥–¿≥˝¿¥¿¥¿¥`¿¥h¿¥n¿¥≥¿¥ﬁ¿¥‰¿µ¿µ|¿µµ¿µ˙¿∂¿∂
¿∂¿∂I¿∂k¿∂á¿∂¢¿∂√¿∂Ì¿∑A¿∑R¿∑a¿∑n¿∑x¿∑Ä¿∑ä¿∑ú¿∑¢¿∑≤¿∑∏¿∏¿∏U¿∏â¿∏ß¿∏‚¿π2¿π6¿π7¿πá¿π÷¿∫$¿∫o¿∫u¿∫¬¿∫Œ¿∫‘¿ª"¿ªo¿ªÑ¿ª≈¿ªÍ¿ªÎ¿º:¿ºà¿º‘¿Ω!¿Ωi¿Ωü¿Ω•¿ΩÚ¿Ω˛¿æ¿æU¿æ†¿æ∏¿æ˚¿ø!¿ø"¿øn¿øÑ¿øä¿ø’¿øÚ¿¿¿¿'¿¿M¿¿`¿¿j¿¿n¿¿o¿¿{¿¿‡¿¿¿¡¿¡E¿¡T¿¡}¿¡Ö¿¡ò¿¡¢¿¡¶¿¡ß¿¡≥¿¡¯¿¬#¿¬B¿¬R¿¬o¿¬√¿¬·¿¬˘¿√T¿√_¿√n¿√∑¿√Ï¿ƒ¿ƒ^¿ƒ√¿≈¿≈!¿≈¥¿≈«¿∆'¿∆Y¿∆≥¿«¿«¿«¿«1¿«L¿«c¿«y¿«ï¿«Ó¿«˚¿»¿»G¿»O¿»b¿»l¿»Ö¿»õ¿»˙¿…¿…	¿…¿…¿…¿…J¿…N¿…ù¿…Ï¿ =¿ f¿ j¿ {¿ ¿ Ã¿ €¿ ﬂ¿À¿À¿ÀU¿ÀY¿Àg¿Àk¿Àπ¿ÀÁ¿Ã¿ÃZ¿Ãr¿Ãà¿Ã¢¿Ã≥¿Õ¿Õ?¿ÕE¿Õb¿Õ¿ÕÆ¿Õ√¿Õƒ¿Œ¿Œ
¿Œ[¿Œ®¿ŒÆ¿ŒÂ¿œ¿œ¿œ6¿œT¿œb¿œh¿œ¿œ§¿œ∆¿œÃ¿œ–¿œ—¿–1¿–7¿–v¿–|¿–À¿–⁄¿—(¿—b¿—f¿—õ¿—∑¿—ﬁ¿“¿“¿“¿“9¿“Y¿“]¿“^¿“j¿“∞¿“Û¿“˜¿“¯¿”¿”D¿”k¿”y¿”¿”≠¿”±¿”≤¿”æ¿‘¿‘7¿‘à¿‘•¿‘Û¿‘˜¿‘¯¿’¿’I¿’t¿’∫¿’Œ¿’Ô¿÷¿÷(¿÷É¿÷å¿÷ì¿÷ó¿÷ô¿÷ö¿÷Í¿◊9¿◊Q¿◊¿◊®¿ÿ	¿ÿ
¿ÿG¿ÿM¿ÿò¿ÿÈ¿Ÿ¿Ÿ¿ŸY¿Ÿ{¿Ÿç¿Ÿ™¿Ÿ»¿Ÿ÷¿Ÿ‹¿ŸÛ¿⁄ ¿⁄$¿⁄%¿⁄1¿⁄d¿⁄x¿⁄ä¿⁄ê¿⁄√¿⁄«¿⁄»¿⁄‘¿€¿€¿€-¿€3¿€f¿€j¿€k¿€w¿€™¿€æ¿€–¿€÷¿‹	¿‹¿‹¿‹¿‹M¿‹a¿‹s¿‹y¿‹¨¿‹∞¿‹±¿‹Ω¿› ¿›¿›'¿›-¿›i¿›m¿›n¿›z¿›†¿›°¿›≠¿›ˇ¿ﬁM¿ﬁQ¿ﬁR¿ﬁ^¿ﬁk¿ﬁ´¿ﬁø¿ﬁ‚¿ﬁË¿ﬂ¿ﬂ¿ﬂ¿ﬂ)¿ﬂB¿ﬂX¿ﬂs¿ﬂw¿ﬂx¿ﬂÑ¿ﬂù¿ﬂ±¿ﬂ”¿ﬂ‡¿ﬂ˝¿‡¿‡¿‡¿‡¿‡Z¿‡ù¿‡°¿‡¢¿‡Æ¿‡‘¿‡ˆ¿·¿·¿·¿·¿·T¿·h¿·v¿·|¿·û¿·¢¿·£¿·Ø¿·Ô¿‚¿‚¿‚¿‚E¿‚I¿‚J¿‚V¿‚õ¿‚∆¿„¿„¿„¿„¿„N¿„g¿„â¿„è¿„≠¿„Õ¿„‰¿‰;¿‰D¿‰K¿‰O¿‰Q¿‰R¿‰ê¿‰î¿‰ﬂ¿Â+¿Â|¿Â…¿ÂÒ¿Âı¿Ê¿Ê
¿ÊW¿Êf¿Êj¿Êü¿Ê£¿Ê‡¿Ê‰¿ÊÚ¿Êˆ¿Á@¿Áä¿ÁΩ¿Ë¿Ë¿Ë3¿ËN¿Ë_¿ËØ¿ËÎ¿ËÒ¿È¿È-¿È\¿Èq¿Èr¿È∏¿Èæ¿Í	¿ÍX¿Íh¿Ín¿Í•¿Í…¿Í‹¿Í˙¿Î¿Î'¿Î-¿ÎE¿Îj¿Îå¿Îí¿Îñ¿Îó¿ÎÁ¿Î˝¿Ï¿ÏB¿ÏH¿Ïó¿Ï¶¿ÏÙ¿Ì.¿Ì2¿Ìg¿ÌÉ¿Ì™¿Ì—¿Ìﬂ¿ÌÂ¿Ó¿Ó%¿Ó)¿Ó*¿Ó6¿Ó|¿Óÿ¿Ó‹¿Ó›¿ÓÈ¿Ô)¿ÔP¿Ô^¿Ôd¿Ôí¿Ôñ¿Ôó¿Ô£¿ÔÍ¿¿m¿ä¿ÿ¿‹¿›¿È¿Ò.¿ÒY¿Ò†¿Ò¥¿Ò’¿ÒÚ¿Ú¿Úf¿Úo¿Úv¿Úz¿Ú|¿Ú}¿Ú¨¿Ú∞¿Û¿ÛR¿Ûù¿Û¬¿Ù¿Ù=¿ÙC¿Ùç¿ÙÕ¿ÙŒ¿ı¿ı¿ı¿ı"¿ıg¿ıí¿ı⁄¿ıﬁ¿ı‡¿ı·¿ˆ(¿ˆD¿ˆî¿ˆﬂ¿˜¿˜¿˜1¿˜\¿˜ì¿˜»¿˜Â¿˜˘¿¯¿¯3¿¯l¿¯°¿¯¢¿¯Ò¿˘¿˘!¿˘o¿˘º¿˘›¿˘„¿˙'¿˙w¿˙∆¿˚¿˚[¿˚y¿˚¥¿˚€¿¸¿¸I¿¸W¿¸]¿¸x¿¸ò¿¸ú¿¸ù¿¸”¿¸˛¿˝¿˝E¿˝`¿˝n¿˝t¿˝†¿˝¥¿˝›¿˝ˇ¿˛¿˛	¿˛
¿˛]¿˛ö¿˛ƒ¿˛˘¿ˇ¿ˇ(¿ˇ.¿ˇ`¿ˇz¿ˇ£¿ˇ≈¿ˇÀ¿ˇœ¿ˇ–¿ ¿ d¿ ö¿ €¿¿¿¿X¿}¿¶¿»¿Œ¿“¿”¿¿R¿Ü¿≈¿Ô¿˝¿¿>¿a¿ä¿¨¿≤¿∂¿∑¿˙¿A¿Å¿¿¿÷¿Ì¿Ó¿˙¿A¿s¿t¿¥¿–¿÷¿"¿J¿P¿z¿≥¿Ô¿˜¿/¿i¿q¿w¿ü¿’¿¿¿K¿Ö¿ç¿ì¿ó¿ò¿»¿	¿	¿	¿	6¿	`¿	û¿	Ω¿	ÿ¿
¿
*¿
m¿
x¿
Å¿
á¿
ã¿
å¿
≥¿
›¿¿9¿T¿Ä¿¶¿È¿Ù¿˝¿¿¿¿,¿T¿ì¿∞¿À¿˜¿¿`¿k¿t¿z¿~¿¿•¿Õ¿¿(¿C¿o¿ï¿ÿ¿„¿Ï¿Ú¿ˆ¿˜¿¿H¿s¿ü¿ø¿Ï¿+¿f¿m¿â¿ß¿≠¿Ò¿ı¿˜¿¯¿5¿o¿≤¿∏¿#¿B¿X¿Ö¿°¿∆¿È¿¿.¿M¿~¿´¿ÿ¿ˇ¿ ¿6¿`¿d¿e¿≥¿Ë¿¿9¿Y¿g¿m¿Ü¿∞¿–¿‘¿’¿¿_¿ë¿ó¿Î¿:¿V¿z¿ç¿´¿…¿◊¿›¿ı¿¿¿¿g¿™¿∞¿ ¿P¿e¿∞¿Ù¿¿¿S¿£¿◊¿¿)¿P¿x¿Ü¿å¿≠¿Õ¿—¿“¿¿9¿?¿ã¿Ÿ¿!¿S¿m¿í¿∏¿∆¿Ã¿Î¿¿¿¿T¿Z¿†¿€¿˛¿0¿J¿o¿ï¿£¿©¿»¿Ë¿Ï¿Ì¿ )¿ b¿ õ¿ Ê¿!1¿!h¿!l¿!m¿!∏¿"¿"¿" ¿"k¿"Œ¿"“¿"”¿#'¿#T¿#≠¿#±¿#≤¿$¿$8¿$ë¿$ï¿$ñ¿$‡¿%@¿%D¿%E¿%k¿%ë¿%¿¿%Ô¿&¿&¿&e¿&r¿&x¿&æ¿&Í¿'¿'P¿'ì¿'…¿'Í¿(¿(8¿(F¿(L¿(h¿(à¿(å¿(ç¿(ô¿(Ÿ¿(ı¿)¿)	¿)7¿);¿)<¿)H¿)è¿)¡¿)Ï¿* ¿*U¿*a¿*•¿*‘¿+¿+#¿+/¿+z¿+√¿+ ¿+À¿+Ú¿, ¿,&¿,M¿,{¿,Å¿,¶¿,⁄¿,‡¿-¿-5¿-;¿-c¿-î¿-ö¿-¿¿-Ì¿-Û¿.¿.K¿.Q¿.u¿.û¿.§¿.À¿.˜¿.˝¿/#¿/P¿/V¿/Å¿/∏¿/æ¿/‰¿0¿0¿0C¿0z¿0Ä¿0©¿0‹¿0‚¿1
¿1;¿1A¿1j¿1ù¿1£¿1 ¿1˘¿1ˇ¿27¿2à¿2é¿2∂¿2Á¿2Ì¿3¿3I¿3O¿3u¿3¢¿3®¿3Õ¿3¯¿3˛¿4(¿4[¿4a¿4Ö¿4∑¿4Ω¿4·¿5¿5¿5F¿5ä¿5ê¿5Ω¿6¿6¿6*¿6Z¿6`¿6á¿6¥¿6∫¿7¿7H¿7N¿7y¿7Æ¿7¥¿7ﬁ¿8¿8¿8A¿8t¿8z¿8®¿8‚¿8Ë¿9¿9\¿9b¿9É¿9Ø¿9µ¿9‹¿:¿:¿:<¿:y¿:¿:¢¿:…¿:œ¿;¿;k¿;≠¿;“¿;Ù¿;˙¿<%¿<S¿<Y¿<Ç¿<¨¿<≤¿<ﬁ¿=¿=¿=A¿=s¿=y¿=£¿=œ¿=’¿>¿>1¿>7¿>a¿>ç¿>ì¿>Ω¿>È¿>Ô¿?¿?9¿??¿?d¿?Ü¿?å¿?≥¿?Ÿ¿?ﬂ¿@¿@q¿@w¿@∂¿A¿A¿AK¿Aï¿Aõ¿A’¿B!¿B'¿BU¿Bâ¿Bè¿B∏¿B‚¿BË¿C#¿Cq¿Cw¿C≤¿D ¿D¿D-¿DS¿DY¿Dè¿D⁄¿D‡¿D‰¿DÂ¿D¸¿E¿E¿E ¿E=¿Eb¿Ef¿Eg¿EÇ¿E•¿E©¿E™¿E»¿EÓ¿EÚ¿EÛ¿F¿F9¿F=¿F>¿FZ¿F~¿FÇ¿FÉ¿F°¿F«¿FÀ¿FÃ¿FË¿G¿G¿G¿G-¿GQ¿GU¿GV¿Gn¿Gé¿Gí¿Gì¿G™¿G…¿GÕ¿GŒ¿GÁ¿H¿H¿H¿HQ¿Hò¿Hú¿Hù¿H‚¿I*¿I.¿I/¿In¿I∞¿I¥¿Iµ¿Iı¿J8¿J<¿J=¿Jt¿J•¿J©¿J™¿J–¿J˜¿J˚¿J¸¿K)¿K^¿Kb¿Kc¿Kê¿K≈¿K…¿K ¿K„¿L¿L¿L
¿L¿LZ¿Lv¿Lz¿L…¿L˝¿M1¿MÄ¿Mç¿MŒ¿MÍ¿M˛¿Mˇ¿NL¿Nú¿Næ¿N–¿NÌ¿O¿O¿O¿O6¿OV¿OZ¿O[¿Og¿OÆ¿O‡¿P#¿P'¿P(¿P4¿Py¿P§¿PÈ¿PÌ¿PÔ¿P¿Q3¿Qv¿Qä¿Qé¿Q’¿R¿RN¿RÇ¿R–¿S¿S¿S¿S_¿Së¿Sú¿Sæ¿SÓ¿SÚ¿SÙ¿Sı¿T'¿T+¿Tz¿Tñ¿Tö¿T·¿U¿UR¿Uõ¿Uﬂ¿U˝¿V¿V¿VW¿V{¿Vé¿V¨¿VÀ¿VŸ¿Vﬂ¿V˜¿W¿W¿W¿W(¿Wh¿W}¿Wã¿Wë¿Wø¿W√¿Wƒ¿W–¿X¿X@¿Xá¿Xã¿Xç¿Xé¿XÀ¿Xœ¿Y¿Yb¿Yî¿Yæ¿Y¬¿Y–¿Y‘¿Z¿ZM¿Zù¿Z˛¿Zˇ¿[2¿[M¿[[¿[t¿[é¿[ú¿[¢¿[∂¿[÷¿[⁄¿[€¿[Á¿\.¿\`¿\Ç¿\Ü¿\á¿\ì¿\ÿ¿]¿]A¿]E¿]G¿]H¿]|¿]Ä¿]é¿]í¿]–¿^¿^B¿^{¿^⁄¿^€¿_)¿_G¿_M¿_û¿_∏¿_◊¿_Í¿`¿`"¿`0¿`6¿`S¿`f¿`ç¿`ª¿`¡¿`◊¿`€¿`‹¿`Ë¿a¿a¿ab¿a∞¿aÚ¿b¿b¿b¿b5¿bP¿bp¿bå¿bê¿bë¿bù¿b‘¿bÌ¿c$¿c1¿cn¿cÄ¿cñ¿c±¿c∑¿c¿d ¿d*¿d=¿dG¿dK¿dL¿dX¿dù¿d»¿e
¿e¿e¿e¿e_¿eí¿eñ¿e‚¿eÊ¿f1¿fÇ¿fñ¿fö¿f®¿f¨¿fÏ¿g/¿gb¿gù¿gµ¿g“¿gÙ¿h¿hE¿hw¿hç¿h¢¿hœ¿hË¿i¿i6¿iK¿iL¿ií¿i»¿iÁ¿i˙¿j¿j2¿j@¿jF¿jY¿jo¿js¿jt¿j∏¿jˆ¿j¸¿kM¿kè¿kï¿kÊ¿l5¿li¿lõ¿lµ¿l⁄¿m ¿m¿m¿m3¿mI¿mM¿mN¿mõ¿m≈¿mÂ¿m˜¿n¿n0¿n>¿nD¿nY¿no¿ns¿nt¿n√¿n‹¿n‚¿o'¿ol¿oª¿o˝¿pL¿pç¿pœ¿p¯¿q¿q¿q:¿qi¿qÑ¿q™¿qÃ¿q⁄¿q‡¿q˚¿r¿r¿r¿rb¿rú¿r¢¿r‰¿rÍ¿s¿sD¿sa¿sâ¿s≠¿sª¿s¡¿sﬁ¿sÙ¿s¯¿s˘¿t¿t¿t)¿t=¿tA¿tB¿tN¿ty¿tz¿t∞¿tº¿t˘¿t˙¿uJ¿uP¿u†¿u—¿v ¿v:¿v\¿vò¿vú¿vù¿v©¿vÔ¿w0¿wd¿wx¿w~¿wπ¿wˆ¿x4¿xN¿xÜ¿xä¿xã¿xó¿xÂ¿y¿y6¿yP¿yå¿yŒ¿y◊¿yﬁ¿y‚¿y„¿yÔ¿z&¿zT¿z`¿zª¿{¿{[¿{Ü¿{ç¿{∂¿{—¿{Î¿|L¿|e¿|Ç¿|ñ¿|¬¿|Ô¿}¿}¿}%¿}1¿}H¿}v¿}•¿}»¿}Œ¿}Â¿}Û¿~¿~¿~F¿~§¿~≈¿~Ê¿~ˇ¿¿!¿(¿8¿b¿u¿¿É¿Ñ¿ê¿—¿Ä ¿Ä¿Ä¿Ä¿ÄV¿ÄÅ¿Ä√¿Å¿Å[¿Åµ¿Åπ¿Åª¿Åº¿Ç¿Ç¿Ç¿Ç!¿Çe¿Ç™¿ÇÒ¿É8¿ÉJ¿ÉP¿Éù¿Éœ¿É’¿Ñ¿ÑW¿Ñm¿ÑÉ¿Ñ¿¿Ñ‘¿Ñ’¿Ö¿Ö'¿Ö3¿ÖM¿Ök¿Öy¿Ö¿Öñ¿Ö¨¿Ö∞¿Ö±¿Ü¿Ü!¿Ü0¿ÜJ¿Üe¿Üs¿Üy¿Üç¿Ü£¿Üß¿Ü®¿Ü„¿Ü‰¿Ü¿á¿á¿á)¿á`¿á∫¿á˝¿à
¿à+¿àP¿àW¿àw¿à™¿àÆ¿àØ¿àª¿àŒ¿àÌ¿â¿â¿â    .RenderProxyBoxRenderProxyBoxMixinHitTestBehavior!RenderProxyBoxWithHitTestBehaviorRenderConstrainedBoxRenderLimitedBoxRenderAspectRatioRenderIntrinsicWidthRenderIntrinsicHeightRenderIgnoreBaselineRenderOpacityRenderAnimatedOpacityMixinRenderAnimatedOpacityRenderShaderMaskRenderBackdropFilterCustomClipperShapeBorderClipper_RenderCustomClipRenderClipRectRenderClipRRectRenderClipOvalRenderClipPath_RenderPhysicalModelBaseRenderPhysicalModelRenderPhysicalShapeDecorationPositionRenderDecoratedBoxRenderTransformRenderFittedBoxRenderFractionalTranslationRenderPointerListenerRenderMouseRegionRenderRepaintBoundaryRenderIgnorePointerRenderOffstageRenderAbsorbPointerRenderMetaDataRenderSemanticsGestureHandlerRenderSemanticsAnnotationsRenderBlockSemanticsRenderMergeSemanticsRenderExcludeSemanticsRenderIndexedSemanticsRenderLeaderLayerRenderFollowerLayerRenderAnnotatedRegion2flutter.rendering.RenderFollowerLayer.leaderAnchorÅ¶For example, when [leaderAnchor] and [followerAnchor] are both
[Alignment.topLeft], this [RenderFollowerLayer] will be top left aligned
with the linked [RenderLeaderLayer]. When [leaderAnchor] is
[Alignment.bottomLeft] and [followerAnchor] is [Alignment.topLeft], this
[RenderFollowerLayer] will be left aligned with the linked
[RenderLeaderLayer], and its top edge will line up with the
[RenderLeaderLayer]'s bottom edge. Ó